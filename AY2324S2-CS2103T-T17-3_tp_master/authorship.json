[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T17-3/tp/actions)","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"![Ui](docs/images/UGUI.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"# FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"FitBook is an easy-to-use address book that is geared towards personal trainers.","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"Features such as the integration of personal health information for each contact allows trainers to effectively track the progress of their clients.","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"The main way to interact with FitBook is via the keyboard. This allows trainers to quickly manage their clients, while still having a GUI that provides a visually pleasing experience to the user.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"* For the detailed documentation of this project, see the **[FitBook Product Website](https://ay2324s2-cs2103t-t17-3.github.io/tp/)**.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"* This project is based on the [AddressBook-Level3](https://github.com/se-edu/addressbook-level3) project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"bgopi23":1,"ruijietay":9,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    String jUnitVersion \u003d \u00275.10.0\u0027","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"    implementation \u0027com.google.zxing:core:3.4.1\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"    implementation \u0027com.google.zxing:javase:3.4.1\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"dillontkh"},"content":"    archiveFileName \u003d \u0027FitBook.jar\u0027","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"run {","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"RyanNgWH":1,"-":70,"dillontkh":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"\u003c!-- @format --\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"## FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"### Tan Kah Ho Dillon","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"\u003cimg src\u003d\"images/dillontkh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"[[github](https://github.com/dillontkh)]","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"- Role: Team Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"- Responsible for overall project coordination.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"### Baskar Gopinath","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"\u003cimg src\u003d\"images/bgopi23.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"[[github](http://github.com/bgopi23)]","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"- Role: Deadlines, deliverables and IntelliJ Expert","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"- Responsibilities: Ensure project deliverables are done in time and help others with any IntelliJ issues","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"### Ng Wei Han, Ryan","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"\u003cimg src\u003d\"images/ryanngwh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"[[github](http://github.com/ryanngwh)]","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"[[linkedin](https://www.linkedin.com/in/ryan-ngwh)]","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"- Role: Testing Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"- Responsible for the quality and timeliness of the project testing.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"### Chee Jing Jie","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"\u003cimg src\u003d\"images/jjchee77.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"[[github](https://github.com/jjchee77)]","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"[[linkedin](https://www.linkedin.com/in/absythe/)]","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"- Role: Code Quality and Integration Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"- Responsible for the code quality and software integration.","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"### Tay Rui-Jie","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"\u003cimg src\u003d\"images/ruijietay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"[[github](http://github.com/ruijietay)]","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"[[linkedin](https://www.linkedin.com/in/tayruijie/)]","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"- Role: Documentation Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"- Responsible for the quality of the project website as well as various project documents.","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"RyanNgWH":11,"bgopi23":4,"ruijietay":9,"jjchee77":5,"-":32,"dillontkh":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"**Module Acknowledgements**","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"| Module                                          | Description                               |","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"|-------------------------------------------------|-------------------------------------------|","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"| [JavaFX](https://openjfx.io/)                   | UI generation for Java                    |","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"| [Jackson](https://github.com/FasterXML/jackson) | Json processing library for Java          |","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"| [JUnit5](https://github.com/junit-team/junit5)  | Automated testing library for Java        |","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"| [ZXing](https://github.com/zxing/zxing)         | Barcode image processing library for Java |","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"**AI Tools Acknowledgements**","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"| Tool    | Name            | Extent of use                             |","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"|---------|-----------------|-------------------------------------------|","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"| GPT-4   | Baskar Gopinath | JavaDocs (FitAddCommandParser)            |","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"| Codeium | Dillon          | {::nomarkdown}\u003cul\u003e\u003cli\u003eJavaDocs\u003c/li\u003e\u003cli\u003eFull-line autocomplete\u003c/li\u003e\u003c/ul\u003e{:/} |","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document are located in the `docs/diagrams` folder. Refer to the [PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"**Main components of the architecture**\u003ca name\u003d\"main-components-of-the-architecture\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"dillontkh"},"content":"the command `delete 1`.","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"dillontkh"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"dillontkh"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"dillontkh"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"dillontkh"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"dillontkh"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"dillontkh"},"content":"visible GUI.","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"dillontkh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"dillontkh"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"dillontkh"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"dillontkh"},"content":"is specified","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"dillontkh"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"call as an example.","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"dillontkh"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"dillontkh"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-05"},{"lineNumber":138,"author":{"gitId":"dillontkh"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"dillontkh"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a client).\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"dillontkh"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"   several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"dillontkh"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"dillontkh"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"dillontkh"},"content":"  a `Command` object.","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"dillontkh"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"dillontkh"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-03-05"},{"lineNumber":170,"author":{"gitId":"dillontkh"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-05"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"dillontkh"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-05"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"dillontkh"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"dillontkh"},"content":"  objects.","lastModifiedDate":"2024-03-05"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"dillontkh"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2024-03-05"},{"lineNumber":195,"author":{"gitId":"RyanNgWH"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2024-03-07"},{"lineNumber":196,"author":{"gitId":"dillontkh"},"content":"  that belong to the `Model`)","lastModifiedDate":"2024-03-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"dillontkh"},"content":"### QR Code","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":210,"author":{"gitId":"dillontkh"},"content":"Each client has a QR code that allows users to save their contact information to their phones easily.","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"dillontkh"},"content":"![QrNewUi](images/QrNewUi.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"dillontkh"},"content":"Initially, we wanted to simply add a QR code to the list of persons as seen below.","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"dillontkh"},"content":"![QrOldUi](images/QrOldUi.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"dillontkh"},"content":"However, we found that in practice, the QR codes were difficult to scan for two main reasons:","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"dillontkh"},"content":"1. The QR codes themselves were too small","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"dillontkh"},"content":"1. The QR codes of other contacts was interfering with the one we wanted to scan","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"dillontkh"},"content":"Thus, we decided to move the QR code to its own separate part of the UI.","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"dillontkh"},"content":"#### QR Code Generation","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"dillontkh"},"content":"Whenever a new client is added to the address book, a QR code is generated for them that contains their information in a vCard format.","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":229,"author":{"gitId":"dillontkh"},"content":"The following sequence diagram illustrates this.","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"dillontkh"},"content":"![QrAddPersonSequenceDiagram](images/QrAddPersonSequenceDiagram.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"dillontkh"},"content":"We considered generating the QR code upon the creation of a `Person` object. However, we discovered that it was possible for a `Person` to be created, but never added to the address book, as shown in the following activity diagram.","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"dillontkh"},"content":"![AddCommandActivityDiagram](images/AddCommandActivityDiagram.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"dillontkh"},"content":"Thus, we chose to only generate QR codes when the person is successfully added to avoid unnecessary QR code generations.","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"dillontkh"},"content":"This approach was also taken for the editing/deleting of QR codes.","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"ruijietay"},"content":"#### QR Code Image File Naming","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"ruijietay"},"content":"QR codes associated with a client are saved in the `data/qrcodes` folder as `.png` files, and named according to the following format:","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"ruijietay"},"content":"* [HASHCODE].png, where [HASHCODE] is the result of the `hashCode()` function of a `Person`.","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"bgopi23"},"content":"### Deleting a client from FitBook","lastModifiedDate":"2024-03-23"},{"lineNumber":248,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":249,"author":{"gitId":"bgopi23"},"content":"The activity diagram below illustrates what happens when a client is deleted from `FitBook`.","lastModifiedDate":"2024-03-23"},{"lineNumber":250,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":251,"author":{"gitId":"bgopi23"},"content":"![DeleteCommandActivityDiagram](images/DeleteCommandActivityDiagram.png)","lastModifiedDate":"2024-03-23"},{"lineNumber":252,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":253,"author":{"gitId":"ruijietay"},"content":"### Additional user details in FitBook","lastModifiedDate":"2024-03-26"},{"lineNumber":254,"author":{"gitId":"ruijietay"},"content":"On top of what AB3 has to offer, FitBook allows users to add additional details to each client to better track their health status. Some key features include:","lastModifiedDate":"2024-04-09"},{"lineNumber":255,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":256,"author":{"gitId":"ruijietay"},"content":"* [Note](#note-feature-in-fitbook)","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"ruijietay"},"content":"* [Weight tracking feature](#weight-tracking-feature)","lastModifiedDate":"2024-04-09"},{"lineNumber":258,"author":{"gitId":"ruijietay"},"content":"* [Height](#height-value-of-a-client)","lastModifiedDate":"2024-04-09"},{"lineNumber":259,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"ruijietay"},"content":"#### Note feature in FitBook","lastModifiedDate":"2024-03-26"},{"lineNumber":261,"author":{"gitId":"ruijietay"},"content":"The `note` feature allows users to add any relevant health information to each client.","lastModifiedDate":"2024-03-26"},{"lineNumber":262,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":263,"author":{"gitId":"ruijietay"},"content":"For more details on how the `note` field interacts with the `add` and `edit` command, refer [here](#adding-or-editing-a-client).","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":265,"author":{"gitId":"ruijietay"},"content":"##### Interacting with the `note` command","lastModifiedDate":"2024-03-26"},{"lineNumber":266,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"ruijietay"},"content":"The sequence diagram below shows how the components interact with each other when the user inputs the command `note 1 nt/Likes to eat`.","lastModifiedDate":"2024-03-30"},{"lineNumber":268,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"ruijietay"},"content":"![AddNoteSequenceDiagram](images/AddNoteSequenceDiagram.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":270,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":271,"author":{"gitId":"ruijietay"},"content":"The diagram highlights the four main components of FitBook, highlighted in their respective colors. For more information regarding the four main components, see [Main components of the architecture](#main-components-of-the-architecture).","lastModifiedDate":"2024-03-20"},{"lineNumber":272,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":273,"author":{"gitId":"ruijietay"},"content":"\u003e The above sequence diagram also applies to the removal of a note from an existing client when no input string or prefix is entered for the `note` command. (i.e. `note 1`, or `note 1 nt/`).","lastModifiedDate":"2024-03-30"},{"lineNumber":274,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"dillontkh"},"content":"#### Weight tracking feature","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"dillontkh"},"content":"The weight tracking feature allows users to keep track of past weight measurements of a client. You may refer to the [parameter constraints](#parameter-constraints) for more information.","lastModifiedDate":"2024-04-11"},{"lineNumber":277,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":278,"author":{"gitId":"ruijietay"},"content":"We can refer to the sequence diagram [above](#interacting-with-the-note-command) to see how the addition of such fields to clients interact with the components of FitBook.","lastModifiedDate":"2024-03-26"},{"lineNumber":279,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":280,"author":{"gitId":"dillontkh"},"content":"For more details on how the `weight` field interacts with the `add` and `edit` commands, refer [here](#adding-or-editing-a-client).","lastModifiedDate":"2024-04-10"},{"lineNumber":281,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":282,"author":{"gitId":"ruijietay"},"content":"The activity diagram below illustrates what happens when a user enters a `weight` command.","lastModifiedDate":"2024-04-09"},{"lineNumber":283,"author":{"gitId":"ruijietay"},"content":"![WeightCommandActivityDiagram](images/WeightCommandActivityDiagram.png)","lastModifiedDate":"2024-04-09"},{"lineNumber":284,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":285,"author":{"gitId":"ruijietay"},"content":"#### Height value of a client","lastModifiedDate":"2024-04-09"},{"lineNumber":286,"author":{"gitId":"ruijietay"},"content":"The `height` feature allows users to track a client\u0027s height. Since a client\u0027s height typically remains constant, we decided not to implement `height` as a trackable value (unlike [weight](#weight-tracking-feature)).","lastModifiedDate":"2024-04-10"},{"lineNumber":287,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":288,"author":{"gitId":"dillontkh"},"content":"* You may refer to the [parameter constraints](#parameter-constraints) for more information.","lastModifiedDate":"2024-04-11"},{"lineNumber":289,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":290,"author":{"gitId":"ruijietay"},"content":"The `height` field is similar to `note` field, except that the underlying data type is a `Float`, instead of a `String`.","lastModifiedDate":"2024-04-09"},{"lineNumber":291,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":292,"author":{"gitId":"ruijietay"},"content":"We can refer to the sequence diagram [here](#interacting-with-the-note-command) to see how the addition of such fields to clients interact with the components of FitBook.","lastModifiedDate":"2024-04-09"},{"lineNumber":293,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":294,"author":{"gitId":"dillontkh"},"content":"For more details on how the `height` field interacts with the `add` and `edit` commands, refer [here](#adding-or-editing-a-client).","lastModifiedDate":"2024-04-10"},{"lineNumber":295,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":296,"author":{"gitId":"RyanNgWH"},"content":"### Finding Clients","lastModifiedDate":"2024-04-12"},{"lineNumber":297,"author":{"gitId":"RyanNgWH"},"content":"Searching of clients is done using the `find` command. The command has been designed to be extendable, allowing for developers to easily define how new fields (attributes) in the clients can be searched.","lastModifiedDate":"2024-04-12"},{"lineNumber":298,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":299,"author":{"gitId":"RyanNgWH"},"content":"The sequence diagram below shows the logic flow of executing the command `find n/wendy`.","lastModifiedDate":"2024-03-23"},{"lineNumber":300,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":301,"author":{"gitId":"RyanNgWH"},"content":"![FindCommandSequenceDiagram-Logic](images/FindCommandSequenceDiagram-Logic.png)","lastModifiedDate":"2024-03-23"},{"lineNumber":302,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":303,"author":{"gitId":"RyanNgWH"},"content":"Note that the main searching logic is defined by creating a `Predicate` (`NameContainsSubstringPredicate` in this example), which in turn calls the `isMatch()` method of the attribute.","lastModifiedDate":"2024-04-12"},{"lineNumber":304,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":305,"author":{"gitId":"RyanNgWH"},"content":"`CombinedPredicates` is then used to allow for finding clients using multiple fields. Clients will only be matched if it passes the test for all specified `SearchPredicates` in `CombinedPredicates`. This is defined in the `FindCommandParser` class.","lastModifiedDate":"2024-04-12"},{"lineNumber":306,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":307,"author":{"gitId":"RyanNgWH"},"content":"#### Defining new methods of finding clients","lastModifiedDate":"2024-04-12"},{"lineNumber":308,"author":{"gitId":"RyanNgWH"},"content":"All attributes of a `Person` has been abstracted into an `Attribute` class. This `Attribute` class defines an abstract `isMatch()` method, thus, any attributes of a `Person` (new or existing), would be required to implement the `isMatch()` method to define how the attribute can be searched using the `find` command.","lastModifiedDate":"2024-04-12"},{"lineNumber":309,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":310,"author":{"gitId":"RyanNgWH"},"content":"This is what allows the `find` command to be extendable to any attribute of a `Person`. Each attribute can be defined to be searched in different ways. For example, searching a person\u0027s `Name` would test a substring against the `Name` attribute, searching a person\u0027s `Weight` would test the `Weight` attribute against a range specified (i.e `isMatch()` will return `true` if the person\u0027s weight falls within the specified range).","lastModifiedDate":"2024-04-12"},{"lineNumber":311,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":312,"author":{"gitId":"RyanNgWH"},"content":"Therefore, to define how an attribute is being searched, one would simply take the following steps:","lastModifiedDate":"2024-03-23"},{"lineNumber":313,"author":{"gitId":"RyanNgWH"},"content":"1. Define the implementation of the `isMatch()` method of the respective attribute. (e.g `Name::isMatch()`)","lastModifiedDate":"2024-03-23"},{"lineNumber":314,"author":{"gitId":"RyanNgWH"},"content":"1. Create a new class that extends `SearchPredicate` (e.g `NameContainsSubstringPredicate`)","lastModifiedDate":"2024-04-12"},{"lineNumber":315,"author":{"gitId":"RyanNgWH"},"content":"1. Update the `parse()` method in `FindCommandParser` to uses the new predicate","lastModifiedDate":"2024-03-23"},{"lineNumber":316,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":317,"author":{"gitId":"RyanNgWH"},"content":"#### Implementation Rationale","lastModifiedDate":"2024-04-12"},{"lineNumber":318,"author":{"gitId":"RyanNgWH"},"content":"We believe that filtering clients is one of the most important features of the application. With a large number of clients in the application, this feature will allow users to easily filter clients based on any information they have saved.","lastModifiedDate":"2024-04-12"},{"lineNumber":319,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":320,"author":{"gitId":"RyanNgWH"},"content":"Additionally, users have different requirements when searching for a client in FitBook. For example, some might simply wish to filter clients to by name, while others might wish to filter all clients within a certain weight range. This implementation of the `find` command provides flexibility to the user.","lastModifiedDate":"2024-04-12"},{"lineNumber":321,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":322,"author":{"gitId":"RyanNgWH"},"content":"For developers, the usage of the `SearchPredicate` and `CombinedPredicates` class, along with the enforcing of the `isMatch()` method within each attribute simplifies the process of defining how each attribute can be searched. Existing search methods can be easily modified by changing the implementation of the `isMatch()` method within the attribute while guaranteeing new attributes to be searchable as well.","lastModifiedDate":"2024-04-12"},{"lineNumber":323,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":324,"author":{"gitId":"RyanNgWH"},"content":"#### Alternative Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":325,"author":{"gitId":"RyanNgWH"},"content":"An alternative implementation of the `find` command was to simply create a `Predicate` for each attribute, defining the search methodology within the predicate itself.","lastModifiedDate":"2024-04-12"},{"lineNumber":326,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":327,"author":{"gitId":"RyanNgWH"},"content":"While this might be a simpler implementation, it has many restrictions such as:","lastModifiedDate":"2024-04-12"},{"lineNumber":328,"author":{"gitId":"RyanNgWH"},"content":"* Developers are required to have in-depth knowledge of how `Predicates` work.","lastModifiedDate":"2024-04-12"},{"lineNumber":329,"author":{"gitId":"RyanNgWH"},"content":"* Newly defined attributes are not guaranteed to be searchable since defining a `Predicate` for that attribute cannot be enforced.","lastModifiedDate":"2024-04-12"},{"lineNumber":330,"author":{"gitId":"RyanNgWH"},"content":"* Higher chance of regression of find feature if developer fails to properly integrate new and existing `Predicates`.","lastModifiedDate":"2024-04-12"},{"lineNumber":331,"author":{"gitId":"RyanNgWH"},"content":"* Messier code base.","lastModifiedDate":"2024-04-12"},{"lineNumber":332,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":333,"author":{"gitId":"RyanNgWH"},"content":"Due to the reasons stated above, we decided that the current implementation of the find command using the `SearchPredicate` class and `isMatch()` methods to better fit our vision for the feature, providing greater functionality to users while simplifing the development process for developers.","lastModifiedDate":"2024-04-12"},{"lineNumber":334,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":335,"author":{"gitId":"ruijietay"},"content":"### Adding or editing a client","lastModifiedDate":"2024-03-26"},{"lineNumber":336,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":337,"author":{"gitId":"ruijietay"},"content":"The following activity diagram summarizes what happens when a client is added or edited in FitBook.","lastModifiedDate":"2024-03-26"},{"lineNumber":338,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":339,"author":{"gitId":"ruijietay"},"content":"![AddAndEditCommandSequenceDiagram](images/AddAndEditCommandActivityDiagram.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":340,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":341,"author":{"gitId":"jjchee77"},"content":"### Adding, editing or deleting exercises for a client","lastModifiedDate":"2024-04-10"},{"lineNumber":342,"author":{"gitId":"jjchee77"},"content":"FitBook enables our target user (personal trainers) to add, edit and delete custom exercises for each of their clients.","lastModifiedDate":"2024-04-10"},{"lineNumber":343,"author":{"gitId":"jjchee77"},"content":"The management of these custom exercises is performed using the `fitadd` and `fitdelete` commands.","lastModifiedDate":"2024-04-10"},{"lineNumber":344,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":345,"author":{"gitId":"jjchee77"},"content":"An exercise consists of a name, number of sets, number of reps and break time between sets (in seconds).","lastModifiedDate":"2024-04-10"},{"lineNumber":346,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":347,"author":{"gitId":"jjchee77"},"content":"![ClientExercises](images/ClientExercises.png)","lastModifiedDate":"2024-04-10"},{"lineNumber":348,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":349,"author":{"gitId":"jjchee77"},"content":"#### Storing exercises","lastModifiedDate":"2024-04-10"},{"lineNumber":350,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":351,"author":{"gitId":"jjchee77"},"content":"A great deal of consideration was made regarding how the custom exercises should be stored for each client.","lastModifiedDate":"2024-04-10"},{"lineNumber":352,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":353,"author":{"gitId":"jjchee77"},"content":"The following data structures were taken into consideration during the brainstorming and design process.","lastModifiedDate":"2024-04-10"},{"lineNumber":354,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":355,"author":{"gitId":"jjchee77"},"content":"1. ArrayList","lastModifiedDate":"2024-04-10"},{"lineNumber":356,"author":{"gitId":"jjchee77"},"content":"1. Plain JSON without deserialization","lastModifiedDate":"2024-04-10"},{"lineNumber":357,"author":{"gitId":"jjchee77"},"content":"1. Java Set","lastModifiedDate":"2024-04-10"},{"lineNumber":358,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":359,"author":{"gitId":"jjchee77"},"content":"The following factors were taken into consideration when selecting a suitable data structure.","lastModifiedDate":"2024-04-10"},{"lineNumber":360,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":361,"author":{"gitId":"jjchee77"},"content":"- The requirement to store multiple exercises","lastModifiedDate":"2024-04-10"},{"lineNumber":362,"author":{"gitId":"jjchee77"},"content":"- The requirement to easily detect duplicate exercises","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"jjchee77"},"content":"- The requirement to flexibly modify the logic for detecting duplicate exercises","lastModifiedDate":"2024-04-10"},{"lineNumber":364,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":365,"author":{"gitId":"jjchee77"},"content":"Upon listing out our requirements, we found that Java `HashSet` to be the most suitable one because it implements the Java `Set` interface.","lastModifiedDate":"2024-04-10"},{"lineNumber":366,"author":{"gitId":"jjchee77"},"content":"Apart from this, the `Set` interface exposes the `contains` method to check for duplicates.","lastModifiedDate":"2024-04-10"},{"lineNumber":367,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":368,"author":{"gitId":"jjchee77"},"content":"#### Detecting duplicate exercises","lastModifiedDate":"2024-04-10"},{"lineNumber":369,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":370,"author":{"gitId":"jjchee77"},"content":"Another point of consideration was with regard to how we should determine whether two exercises belonging to the same client","lastModifiedDate":"2024-04-10"},{"lineNumber":371,"author":{"gitId":"jjchee77"},"content":"are considered duplicates since an exercise has multiple fields.","lastModifiedDate":"2024-04-10"},{"lineNumber":372,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":373,"author":{"gitId":"jjchee77"},"content":"To keep it simple for our initial iterations, we decided to only use lower-cased exercise names to determine duplicates.","lastModifiedDate":"2024-04-10"},{"lineNumber":374,"author":{"gitId":"jjchee77"},"content":"However, this may change in the future. For example, the same exercise may have different numbers of sets, reps, and break times for different","lastModifiedDate":"2024-04-10"},{"lineNumber":375,"author":{"gitId":"jjchee77"},"content":"days of the week. To modify the detection of duplicate exercises, we can simply modify the logic for the `equals` method","lastModifiedDate":"2024-04-10"},{"lineNumber":376,"author":{"gitId":"jjchee77"},"content":"in our `Exercise` class, this is made possible because of our decision to store the exercises in a Java `Set`.","lastModifiedDate":"2024-04-10"},{"lineNumber":377,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":378,"author":{"gitId":"bgopi23"},"content":"### Specialised error messages for commands","lastModifiedDate":"2024-04-07"},{"lineNumber":379,"author":{"gitId":"bgopi23"},"content":"When typing in commands, error messages guide the user on what is missing or wrong with their command format.","lastModifiedDate":"2024-04-07"},{"lineNumber":380,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":381,"author":{"gitId":"bgopi23"},"content":"Let\u0027s take the `add` command as an example.","lastModifiedDate":"2024-04-07"},{"lineNumber":382,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":383,"author":{"gitId":"bgopi23"},"content":"The correct format is as follows : `add n/NAME p/PHONE`","lastModifiedDate":"2024-04-07"},{"lineNumber":384,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":385,"author":{"gitId":"bgopi23"},"content":"|    Command    |           Error Message           |","lastModifiedDate":"2024-04-07"},{"lineNumber":386,"author":{"gitId":"bgopi23"},"content":"|:-------------:|:---------------------------------:|","lastModifiedDate":"2024-04-11"},{"lineNumber":387,"author":{"gitId":"bgopi23"},"content":"|     `add`     |    _No parameters specified!_     |","lastModifiedDate":"2024-04-07"},{"lineNumber":388,"author":{"gitId":"bgopi23"},"content":"| `add n/NAME`  | _Phone number parameter missing!_ |","lastModifiedDate":"2024-04-07"},{"lineNumber":389,"author":{"gitId":"bgopi23"},"content":"| `add p/PHONE` |     _Name parameter missing!_     |","lastModifiedDate":"2024-04-07"},{"lineNumber":390,"author":{"gitId":"bgopi23"},"content":"|  `add NAME`   |     _Invalid command format!_     |","lastModifiedDate":"2024-04-10"},{"lineNumber":391,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":392,"author":{"gitId":"bgopi23"},"content":"Now lets look at the `delete` command for another example","lastModifiedDate":"2024-04-07"},{"lineNumber":393,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":394,"author":{"gitId":"bgopi23"},"content":"The correct format is as follows : `delete INDEX`","lastModifiedDate":"2024-04-07"},{"lineNumber":395,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":396,"author":{"gitId":"bgopi23"},"content":"|   Command    |                        Error Message                         |","lastModifiedDate":"2024-04-07"},{"lineNumber":397,"author":{"gitId":"bgopi23"},"content":"|:------------:|:------------------------------------------------------------:|","lastModifiedDate":"2024-04-07"},{"lineNumber":398,"author":{"gitId":"bgopi23"},"content":"|   `delete`   |                    _No index specified!_                     |","lastModifiedDate":"2024-04-07"},{"lineNumber":399,"author":{"gitId":"bgopi23"},"content":"| `delete two` |                  _Invalid index provided!_                   |","lastModifiedDate":"2024-04-11"},{"lineNumber":400,"author":{"gitId":"bgopi23"},"content":"|   `delet`    | _Unknown command, please type \u0027help\u0027 for possible commands!_ |","lastModifiedDate":"2024-04-07"},{"lineNumber":401,"author":{"gitId":"bgopi23"},"content":"| `delete -1`  |                  _Invalid index provided!_                   |","lastModifiedDate":"2024-04-11"},{"lineNumber":402,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":403,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":404,"author":{"gitId":"bgopi23"},"content":"**_How the feature was implemented._** \u003cbr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":405,"author":{"gitId":"bgopi23"},"content":"The specialised error messages was implemented by improving the parsing of commands in the respective","lastModifiedDate":"2024-04-07"},{"lineNumber":406,"author":{"gitId":"bgopi23"},"content":"command parsers (AddCommandParser, DeleteCommandParser).","lastModifiedDate":"2024-04-07"},{"lineNumber":407,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":408,"author":{"gitId":"bgopi23"},"content":"**_Why it is implemented that way._** \u003cbr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":409,"author":{"gitId":"bgopi23"},"content":"We anticipated possible erroneous user inputs and crafted specialised outputs as we wanted to prompt the user in a","lastModifiedDate":"2024-04-07"},{"lineNumber":410,"author":{"gitId":"bgopi23"},"content":"certain direction towards the correct command format instead of just telling them the format was wrong.","lastModifiedDate":"2024-04-07"},{"lineNumber":411,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":412,"author":{"gitId":"bgopi23"},"content":"**_Alternatives considered._** \u003cbr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":413,"author":{"gitId":"bgopi23"},"content":"Alternatives such as hyper-specific error outputs were considered, but ultimately, we felt that the benefit it would add","lastModifiedDate":"2024-04-07"},{"lineNumber":414,"author":{"gitId":"bgopi23"},"content":"was trivial.","lastModifiedDate":"2024-04-07"},{"lineNumber":415,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":416,"author":{"gitId":"bgopi23"},"content":"**_Activity diagram for specialised error message outputs by AddCommandParser_**","lastModifiedDate":"2024-04-11"},{"lineNumber":417,"author":{"gitId":"bgopi23"},"content":"![SpecialisedErrorMessages](images/SpecialisedErrorMessagesDiagram.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":418,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"dillontkh"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2024-03-05"},{"lineNumber":424,"author":{"gitId":"dillontkh"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2024-03-05"},{"lineNumber":425,"author":{"gitId":"dillontkh"},"content":"following operations:","lastModifiedDate":"2024-03-05"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"RyanNgWH"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":428,"author":{"gitId":"RyanNgWH"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"RyanNgWH"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"dillontkh"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2024-03-05"},{"lineNumber":432,"author":{"gitId":"dillontkh"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-03-05"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"dillontkh"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2024-03-05"},{"lineNumber":437,"author":{"gitId":"dillontkh"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-03-05"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"bgopi23"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the address book. The `delete` command","lastModifiedDate":"2024-03-15"},{"lineNumber":442,"author":{"gitId":"dillontkh"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2024-03-05"},{"lineNumber":443,"author":{"gitId":"dillontkh"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2024-03-05"},{"lineNumber":444,"author":{"gitId":"dillontkh"},"content":"state.","lastModifiedDate":"2024-03-05"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"bgopi23"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also","lastModifiedDate":"2024-03-15"},{"lineNumber":449,"author":{"gitId":"dillontkh"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2024-03-05"},{"lineNumber":450,"author":{"gitId":"dillontkh"},"content":"the `addressBookStateList`.","lastModifiedDate":"2024-03-05"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"bgopi23"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing","lastModifiedDate":"2024-03-15"},{"lineNumber":459,"author":{"gitId":"dillontkh"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2024-03-05"},{"lineNumber":460,"author":{"gitId":"dillontkh"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-05"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":479,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":481,"author":{"gitId":"dillontkh"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2024-03-05"},{"lineNumber":482,"author":{"gitId":"dillontkh"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-03-05"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"dillontkh"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2024-03-05"},{"lineNumber":489,"author":{"gitId":"dillontkh"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2024-03-05"},{"lineNumber":490,"author":{"gitId":"dillontkh"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-05"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"dillontkh"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2024-03-05"},{"lineNumber":495,"author":{"gitId":"dillontkh"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2024-03-05"},{"lineNumber":496,"author":{"gitId":"dillontkh"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2024-03-05"},{"lineNumber":497,"author":{"gitId":"dillontkh"},"content":"desktop applications follow.","lastModifiedDate":"2024-03-05"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":510,"author":{"gitId":"RyanNgWH"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"RyanNgWH"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":513,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-03-07"},{"lineNumber":514,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"bgopi23"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2024-03-15"},{"lineNumber":516,"author":{"gitId":"RyanNgWH"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-03-07"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":525,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":530,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":531,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":532,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2024-03-07"},{"lineNumber":544,"author":{"gitId":"bgopi23"},"content":"* prefers typing to mouse interactions (i.e. should be able to type fast)","lastModifiedDate":"2024-03-15"},{"lineNumber":545,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-07"},{"lineNumber":546,"author":{"gitId":"dillontkh"},"content":"* is a personal trainer","lastModifiedDate":"2024-03-09"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"dillontkh"},"content":"**Value proposition**: FitBook will help to keep track of client-specific information such as progress, goals, and preferences all in one place, allowing the user to organize and manage their clients\u0027 information efficiently.","lastModifiedDate":"2024-03-20"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"dillontkh"},"content":"| Priority | As a ...                                      | I want to ...                                                                                | So that I can ...                                                                            |","lastModifiedDate":"2024-03-15"},{"lineNumber":555,"author":{"gitId":"ruijietay"},"content":"|----------|-----------------------------------------------|----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-08"},{"lineNumber":556,"author":{"gitId":"ruijietay"},"content":"| `* * *`  | user                                          | add a client name and phone number                                                           | quickly take down contact details even in a rush                                             |","lastModifiedDate":"2024-03-08"},{"lineNumber":557,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user                                          | add personal health information for each contact                                             | store additional information associated with the client                                      |","lastModifiedDate":"2024-03-16"},{"lineNumber":558,"author":{"gitId":"ruijietay"},"content":"| `* * *`  | user                                          | delete contact                                                                               | remove them when I no longer need to contact them                                            |","lastModifiedDate":"2024-03-08"},{"lineNumber":559,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user                                          | display all contacts                                                                         | I can see all my clients at a glance.                                                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":560,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user                                          | see usage instructions                                                                       | refer to instructions when I forget how to use the application                               |","lastModifiedDate":"2024-03-16"},{"lineNumber":561,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user with many contacts in the address book   | search for contacts by their name                                                            | locate details of persons without having to go through the entire list                       |","lastModifiedDate":"2024-03-15"},{"lineNumber":562,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | add a picture to my contacts                                                                 | easily identify my contacts and add a personal touch to them                                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":563,"author":{"gitId":"-"},"content":"| `* *`    | user                                          | hide private contact details                                                                 | minimize chance of someone else seeing them by accident                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | quickly view the available commands                                                          | view quick command help without needing to leave the application                             |","lastModifiedDate":"2024-03-13"},{"lineNumber":565,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | scan a QR code to save a contact                                                             | transfer information from FitBook to my mobile phone easily                                  |","lastModifiedDate":"2024-03-15"},{"lineNumber":566,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | update a person\u0027s contact information                                                        | keep my address book relevant and up-to-date                                                 |","lastModifiedDate":"2024-03-16"},{"lineNumber":567,"author":{"gitId":"ruijietay"},"content":"| `*`      | user                                          | have a graphical overview of the changes of my client\u0027s health details over a certain period | easily keep track of my client\u0027s progress                                                    |","lastModifiedDate":"2024-03-11"},{"lineNumber":568,"author":{"gitId":"dillontkh"},"content":"| `*`      | user who has completed dealings with a client | archive contacts                                                                             | remove them from the contact list but still have their contact information in case I need it |","lastModifiedDate":"2024-03-05"},{"lineNumber":569,"author":{"gitId":"ruijietay"},"content":"| `*`      | user with many clients                        | sort contacts based on next session                                                          | easily locate the details of the client I am going to meet next                              |","lastModifiedDate":"2024-03-08"},{"lineNumber":570,"author":{"gitId":"bgopi23"},"content":"| `*`      | user with many contacts in the address book   | sort contacts by name                                                                        | locate a client easily                                                                       |","lastModifiedDate":"2024-03-15"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"bgopi23"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":576,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC01 - Delete a client","lastModifiedDate":"2024-03-09"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-09"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"bgopi23"},"content":"1. User requests to view list","lastModifiedDate":"2024-03-07"},{"lineNumber":583,"author":{"gitId":"ruijietay"},"content":"1. FitBook shows a list of clients","lastModifiedDate":"2024-03-26"},{"lineNumber":584,"author":{"gitId":"ruijietay"},"content":"1. User requests to delete a specific client in the list","lastModifiedDate":"2024-03-26"},{"lineNumber":585,"author":{"gitId":"ruijietay"},"content":"1. FitBook deletes the client from the list","lastModifiedDate":"2024-03-26"},{"lineNumber":586,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"RyanNgWH"},"content":"    * 3a1. FitBook shows an error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"bgopi23"},"content":"      Use case resumes at step 2","lastModifiedDate":"2024-03-09"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"RyanNgWH"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":603,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":604,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC02 - See usage instructions","lastModifiedDate":"2024-03-07"},{"lineNumber":605,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":606,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-07"},{"lineNumber":607,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":608,"author":{"gitId":"bgopi23"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":609,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":610,"author":{"gitId":"bgopi23"},"content":"1. User requests to view usage instructions","lastModifiedDate":"2024-03-07"},{"lineNumber":611,"author":{"gitId":"ruijietay"},"content":"1. FitBook displays the usage instructions such as how to add, edit, delete or search for clients","lastModifiedDate":"2024-03-26"},{"lineNumber":612,"author":{"gitId":"ruijietay"},"content":"1. User reads the instructions to understand how to use the FitBook","lastModifiedDate":"2024-03-26"},{"lineNumber":613,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":614,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":615,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":616,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":617,"author":{"gitId":"RyanNgWH"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":618,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":619,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC03 - Add new contact","lastModifiedDate":"2024-03-07"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":621,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-07"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":623,"author":{"gitId":"bgopi23"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":624,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":625,"author":{"gitId":"bgopi23"},"content":"1. User requests to add a new client","lastModifiedDate":"2024-03-09"},{"lineNumber":626,"author":{"gitId":"ruijietay"},"content":"1. FitBook displays a success message after the new client is successfully added","lastModifiedDate":"2024-03-26"},{"lineNumber":627,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":628,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":629,"author":{"gitId":"bgopi23"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":630,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":631,"author":{"gitId":"bgopi23"},"content":"* 1a. User enters an invalid command","lastModifiedDate":"2024-03-07"},{"lineNumber":632,"author":{"gitId":"RyanNgWH"},"content":"    * 1a1. FitBook alerts the user that the command is invalid and displays the correct format","lastModifiedDate":"2024-03-08"},{"lineNumber":633,"author":{"gitId":"bgopi23"},"content":"    * Use case resumes","lastModifiedDate":"2024-03-07"},{"lineNumber":634,"author":{"gitId":"bgopi23"},"content":"* 1b. User tries to add a client that already exists in FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":635,"author":{"gitId":"bgopi23"},"content":"    * 1b1. FitBook alerts the user that a client with that name and details already exists","lastModifiedDate":"2024-03-09"},{"lineNumber":636,"author":{"gitId":"bgopi23"},"content":"    * 1b2. FitBook provides possible solutions (use different details if the client name is the same)","lastModifiedDate":"2024-03-09"},{"lineNumber":637,"author":{"gitId":"bgopi23"},"content":"    * Use case resumes","lastModifiedDate":"2024-03-07"},{"lineNumber":638,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":639,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":640,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":641,"author":{"gitId":"bgopi23"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":642,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":643,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC04 - Display all clients","lastModifiedDate":"2024-03-09"},{"lineNumber":644,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":645,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-07"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":647,"author":{"gitId":"bgopi23"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":648,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":649,"author":{"gitId":"bgopi23"},"content":"1. User requests to see a list of all clients","lastModifiedDate":"2024-03-09"},{"lineNumber":650,"author":{"gitId":"ruijietay"},"content":"1. FitBook displays a success message followed by the list of clients","lastModifiedDate":"2024-03-26"},{"lineNumber":651,"author":{"gitId":"ruijietay"},"content":"1. User views the list","lastModifiedDate":"2024-03-26"},{"lineNumber":652,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":653,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":654,"author":{"gitId":"bgopi23"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":655,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":656,"author":{"gitId":"bgopi23"},"content":"* 2a. User enters an invalid command","lastModifiedDate":"2024-03-07"},{"lineNumber":657,"author":{"gitId":"RyanNgWH"},"content":"    * 2b1. FitBook alerts the user that the command is invalid and displays the correct format","lastModifiedDate":"2024-03-08"},{"lineNumber":658,"author":{"gitId":"bgopi23"},"content":"    * Use case resumes","lastModifiedDate":"2024-03-07"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":660,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"RyanNgWH"},"content":"\u003ca id\u003d\"nfr-1\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":665,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":666,"author":{"gitId":"RyanNgWH"},"content":"1. Should work on any _mainstream OS_ (Windows, macOS and Linux) as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-07"},{"lineNumber":667,"author":{"gitId":"bgopi23"},"content":"1. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-15"},{"lineNumber":668,"author":{"gitId":"RyanNgWH"},"content":"1. Should provide responsive performance, users should experience minimal delays in critical functionalities such as searching and updating contacts (feedback should be within 1 second).","lastModifiedDate":"2024-03-07"},{"lineNumber":669,"author":{"gitId":"RyanNgWH"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-08"},{"lineNumber":670,"author":{"gitId":"RyanNgWH"},"content":"1. Should provide an intuitive and user-friendly interface. Users should be able to easily and quickly navigate the user interface to identify crucial information (E.g Name, Contact, Health information) at a glance.","lastModifiedDate":"2024-03-08"},{"lineNumber":671,"author":{"gitId":"RyanNgWH"},"content":"1. Should have a shallow learning curve. New users (including the non-technically savvy) should be able to pick up and start using the application efficiently within a week.","lastModifiedDate":"2024-03-07"},{"lineNumber":672,"author":{"gitId":"RyanNgWH"},"content":"1. Should be optimized to run smoothly on low-end devices with limited processing power and memory. Users on older hardware should be able to use the application as long as it meets [this requirement](#nfr-1).","lastModifiedDate":"2024-03-08"},{"lineNumber":673,"author":{"gitId":"RyanNgWH"},"content":"1. Should provide full offline functionality. Users should be able to access all functionality of FitBook even when the device is not connected to the internet.","lastModifiedDate":"2024-03-08"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"ruijietay"},"content":"## Glossary","lastModifiedDate":"2024-04-09"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"jjchee77"},"content":"* **Above average typing speed**: Typing speed of more than 40 words per minute","lastModifiedDate":"2024-03-07"},{"lineNumber":678,"author":{"gitId":"jjchee77"},"content":"* **Architecture**: The high-level design and code structure of FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":679,"author":{"gitId":"jjchee77"},"content":"* **Archive**: Moving a contact to a secondary space in FitBook that is of less importance","lastModifiedDate":"2024-03-08"},{"lineNumber":680,"author":{"gitId":"jjchee77"},"content":"* **API(Application Programming Interface)**: Defines how software components interact with each other","lastModifiedDate":"2024-03-09"},{"lineNumber":681,"author":{"gitId":"jjchee77"},"content":"* **Client**: A personal training customer of the target user (ie. people engaging the services of a Personal Trainer)","lastModifiedDate":"2024-03-08"},{"lineNumber":682,"author":{"gitId":"jjchee77"},"content":"* **Contact**: A person whose details are stored in FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":683,"author":{"gitId":"jjchee77"},"content":"* **CLI (Command Line Interface)**: A user interface that is based on interaction with the terminal or console","lastModifiedDate":"2024-03-09"},{"lineNumber":684,"author":{"gitId":"jjchee77"},"content":"* **Fit**: In good health, especially because of regular exercise","lastModifiedDate":"2024-03-09"},{"lineNumber":685,"author":{"gitId":"jjchee77"},"content":"* **Fitness**: The condition of being physically fit and healthy","lastModifiedDate":"2024-03-09"},{"lineNumber":686,"author":{"gitId":"jjchee77"},"content":"* **FitBook**: An address book with additional capabilities for managing personal training clients","lastModifiedDate":"2024-03-09"},{"lineNumber":687,"author":{"gitId":"jjchee77"},"content":"* **GUI (Graphical User Interface)**: The visual interface of FitBook that users interact with","lastModifiedDate":"2024-03-08"},{"lineNumber":688,"author":{"gitId":"jjchee77"},"content":"* **Healthy**: In a good physical or mental condition","lastModifiedDate":"2024-03-09"},{"lineNumber":689,"author":{"gitId":"dillontkh"},"content":"* **JavaFX**: A set of graphics and media packages that enables developers to design, create, test and debug applications","lastModifiedDate":"2024-03-20"},{"lineNumber":690,"author":{"gitId":"dillontkh"},"content":"* **JSON (JavaScript Object Notation)**:  A lightweight data-interchange format used for storing and transporting data","lastModifiedDate":"2024-03-31"},{"lineNumber":691,"author":{"gitId":"jjchee77"},"content":"* **Low-end devices**: Computers with lesser than average hardware resources such as processing power and memory","lastModifiedDate":"2024-03-08"},{"lineNumber":692,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-03-07"},{"lineNumber":693,"author":{"gitId":"dillontkh"},"content":"* **Personal Health Information**: Details such as weight, body mass index, allergies, medical history etc.","lastModifiedDate":"2024-03-31"},{"lineNumber":694,"author":{"gitId":"jjchee77"},"content":"* **Personal Trainer (PT)**: A person who helps others plan and implement a fitness regime","lastModifiedDate":"2024-03-09"},{"lineNumber":695,"author":{"gitId":"bgopi23"},"content":"* **PlantUML**: A tool for creating UML diagrams from plain text","lastModifiedDate":"2024-03-07"},{"lineNumber":696,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2024-03-07"},{"lineNumber":697,"author":{"gitId":"jjchee77"},"content":"* **Responsive performance**: No noticeable delay of FitBook during user interaction","lastModifiedDate":"2024-03-08"},{"lineNumber":698,"author":{"gitId":"bgopi23"},"content":"* **Sequence Diagram**: A UML diagram that depicts how objects interact with each other in a sequence","lastModifiedDate":"2024-03-07"},{"lineNumber":699,"author":{"gitId":"jjchee77"},"content":"* **Usage instructions**: Documentation detailing FitBook\u0027s features and how to navigate about them","lastModifiedDate":"2024-03-08"},{"lineNumber":700,"author":{"gitId":"jjchee77"},"content":"* **User**: The person using FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":701,"author":{"gitId":"jjchee77"},"content":"* **UI (User Interface)**: Manages user interactions with graphic interface elements","lastModifiedDate":"2024-03-09"},{"lineNumber":702,"author":{"gitId":"ruijietay"},"content":"* **AB3**: [AddressBook-Level3](https://github.com/se-edu/addressbook-level3), a project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-26"},{"lineNumber":703,"author":{"gitId":"dillontkh"},"content":"* **vCard**: A data format for contact information. Detailed information can be found in [RFC 6350](https://datatracker.ietf.org/doc/html/rfc6350).","lastModifiedDate":"2024-03-25"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"dillontkh"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2024-03-05"},{"lineNumber":723,"author":{"gitId":"dillontkh"},"content":"       optimum.","lastModifiedDate":"2024-03-05"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"bgopi23"},"content":"### Deleting a client","lastModifiedDate":"2024-03-15"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"bgopi23"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2024-03-15"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"bgopi23"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"dillontkh"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-03-05"},{"lineNumber":742,"author":{"gitId":"dillontkh"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-05"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"bgopi23"},"content":"       Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-03-15"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":760,"author":{"gitId":"bgopi23"},"content":"## Parameter Constraints","lastModifiedDate":"2024-04-11"},{"lineNumber":761,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":762,"author":{"gitId":"bgopi23"},"content":"| Parameter          | Constraints|","lastModifiedDate":"2024-04-10"},{"lineNumber":763,"author":{"gitId":"dillontkh"},"content":"|--------------------||","lastModifiedDate":"2024-04-11"},{"lineNumber":764,"author":{"gitId":"bgopi23"},"content":"| **Name**           | Must only contain alphanumeric characters, spaces, and cannot be blank.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |","lastModifiedDate":"2024-04-11"},{"lineNumber":765,"author":{"gitId":"bgopi23"},"content":"| **Phone Number**   | Must only contains digits with a minimum length of 1 (spaces between numbers will be removed).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2024-04-11"},{"lineNumber":766,"author":{"gitId":"dillontkh"},"content":"| **Email**          | Must follow `local-part@domain`. Each segment adheres to the following constraints: \u003cbr\u003e\u003cbr\u003e **Local-Part:** {::nomarkdown}\u003cul\u003e\u003cli\u003e\u003cb\u003eAllowed Characters:\u003c/b\u003e The local-part can contain alphanumeric characters (letters and numbers) and these special characters: {:/}`+`, `_`, `.`, `-`{::nomarkdown}.\u003c/li\u003e\u003cli\u003e\u003cb\u003eRestrictions:\u003c/b\u003e The local-part cannot begin or end with any of the special characters ({:/}`+`, `_`, `.`, `-`{::nomarkdown}).\u003c/li\u003e\u003c/ul\u003e \u003cb\u003eDomain:\u003c/b\u003e \u003cul\u003e\u003cli\u003eThe domain follows the {:/}`@`{::nomarkdown} symbol and consists of domain labels separated by periods ({:/}`.`{::nomarkdown}).\u003c/li\u003e\u003cli\u003e\u003cb\u003eDomain Label Constraints:\u003c/b\u003e \u003cul\u003e\u003cli\u003e\u003cb\u003eEnding Label Length:\u003c/b\u003e The final domain label must be at least 2 characters long.\u003c/li\u003e\u003cli\u003e\u003cb\u003eCharacter Use:\u003c/b\u003e Each domain label must start and end with alphanumeric characters.\u003c/li\u003e\u003cli\u003e\u003cb\u003eInternal Characters:\u003c/b\u003e Within a domain label, only hyphens ({:/}`-`{::nomarkdown}) are allowed to separate alphanumeric characters.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e{:/} |","lastModifiedDate":"2024-04-11"},{"lineNumber":767,"author":{"gitId":"bgopi23"},"content":"| **Address**        | Any text is allowed|","lastModifiedDate":"2024-04-11"},{"lineNumber":768,"author":{"gitId":"bgopi23"},"content":"| **Note**           | Any text is allowed|","lastModifiedDate":"2024-04-11"},{"lineNumber":769,"author":{"gitId":"bgopi23"},"content":"| **Tag**            | Must only contains alphanumeric characters, with no spaces and cannot be blank|","lastModifiedDate":"2024-04-11"},{"lineNumber":770,"author":{"gitId":"dillontkh"},"content":"| **Weight (kg)**    | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive number. ({:/}`w/0` will be treated as `w/`{::nomarkdown})\u003c/li\u003e\u003cli\u003e A reasonable maximum value of 5000 is allowed.\u003c/li\u003e\u003cli\u003e Although some decimal values of 5000 are allowed (e.g. 5000.000001), the weight values will still rounded off to the nearest 1 decimal place (i.e. 5000.0).\u003c/li\u003e\u003c/ul\u003e{:/}|","lastModifiedDate":"2024-04-11"},{"lineNumber":771,"author":{"gitId":"dillontkh"},"content":"| **Height (cm)**    | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive number. ({:/}`h/0` will be treated as `h/`{::nomarkdown})\u003c/li\u003e\u003cli\u003e A reasonable maximum value of 5000 is allowed.\u003c/li\u003e\u003cli\u003e Although some decimal values of 5000 are allowed (e.g. 5000.000001), the height values will still rounded off to the nearest 1 decimal place (i.e. 5000.0).\u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":772,"author":{"gitId":"bgopi23"},"content":"| **Index**          | Must be a positive number corresponding to the client in the list|","lastModifiedDate":"2024-04-11"},{"lineNumber":773,"author":{"gitId":"dillontkh"},"content":"| **Range**          | Format: `FROM, TO`{::nomarkdown}\u003cul\u003e\u003cli\u003eNote that the comma must follow immediately after \u003ccode\u003eFROM\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eFor example, to search for weights that fall between 70kg and 90kg, you can enter \u003ccode\u003ew/70, 90\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e{:/}|","lastModifiedDate":"2024-04-11"},{"lineNumber":774,"author":{"gitId":"dillontkh"},"content":"| **Exercise Name**  | Any non-empty text is allowed||","lastModifiedDate":"2024-04-11"},{"lineNumber":775,"author":{"gitId":"dillontkh"},"content":"| **Exercise Sets**  | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive integer. \u003c/li\u003e \u003cli\u003e A reasonable maximum value of 1000000 is allowed. \u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":776,"author":{"gitId":"dillontkh"},"content":"| **Exercise Reps**  | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive integer. \u003c/li\u003e \u003cli\u003e A reasonable maximum value of 1000000 is allowed. \u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":777,"author":{"gitId":"dillontkh"},"content":"| **Exercise Break** | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a non-negative integer. \u003c/li\u003e \u003cli\u003e A reasonable maximum value of 1000000 is allowed. \u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":778,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":779,"author":{"gitId":"bgopi23"},"content":"## Appendix: Planned Enhancements","lastModifiedDate":"2024-04-10"},{"lineNumber":780,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":781,"author":{"gitId":"bgopi23"},"content":"FitBook\u0027s team size is 5.","lastModifiedDate":"2024-04-10"},{"lineNumber":782,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":783,"author":{"gitId":"dillontkh"},"content":"1. **Allow for more flexible weight management**","lastModifiedDate":"2024-04-10"},{"lineNumber":784,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":785,"author":{"gitId":"dillontkh"},"content":"The current implementation of tracking clients\u0027 weights only allows users to add, modify or delete the latest weight value at the current date and time. We plan to make this feature more flexible by allowing users to add/modify a client\u0027s weight at a specified date and time of their choice.","lastModifiedDate":"2024-04-10"},{"lineNumber":786,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":787,"author":{"gitId":"dillontkh"},"content":"2. **Provide more specific error messages**","lastModifiedDate":"2024-04-10"},{"lineNumber":788,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":789,"author":{"gitId":"dillontkh"},"content":"When removing optional fields of a client, we should provide more detailed error messages. This is currently only available for the `weight` field, where removing a weight value from a client that has no weight value associated with them prompts the error message, `There are no more weight values to be removed. This client has no more weight values associated with them.`. We plan to provide more specific error messages when a client edits a field that has not changed / has nothing to remove, where the error message will be similar to the one seen in the `weight` field.","lastModifiedDate":"2024-04-10"},{"lineNumber":790,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":791,"author":{"gitId":"dillontkh"},"content":"3. **Always display details of client being modified**","lastModifiedDate":"2024-04-10"},{"lineNumber":792,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":793,"author":{"gitId":"dillontkh"},"content":"To improve clarity for users, the details pane should always show the information of the client that is being modified/had just been modified.","lastModifiedDate":"2024-04-09"},{"lineNumber":794,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":795,"author":{"gitId":"dillontkh"},"content":"\u003e Some examples where this could be implemented:","lastModifiedDate":"2024-04-09"},{"lineNumber":796,"author":{"gitId":"dillontkh"},"content":"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":797,"author":{"gitId":"dillontkh"},"content":"\u003e * Modifying exercises using `fitadd` changes the tab back to weight, if there is a weight tab. It should show the exercises tab.","lastModifiedDate":"2024-04-09"},{"lineNumber":798,"author":{"gitId":"dillontkh"},"content":"\u003e * Using `note 1 /edit` while client 2 is selected would edit client 1\u0027s note, but the details pane still shows client 2.","lastModifiedDate":"2024-04-09"},{"lineNumber":799,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":800,"author":{"gitId":"dillontkh"},"content":"4. **Better keyboard navigation support**","lastModifiedDate":"2024-04-10"},{"lineNumber":801,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":802,"author":{"gitId":"dillontkh"},"content":"For advanced users, we can provide a better keyboard navigation experience by making the element being selected with `Tab` clearer. We also plan to remove unnecessary `Tab` presses between elements of interest. e.g. to get from the command input box to the client list requires 2 `Tab`s even though the user cannot interact with the result response box.","lastModifiedDate":"2024-04-09"},{"lineNumber":803,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":804,"author":{"gitId":"RyanNgWH"},"content":"5. **Adaptive client list entries**","lastModifiedDate":"2024-04-10"},{"lineNumber":805,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":806,"author":{"gitId":"RyanNgWH"},"content":"The client list will always show the most important information at a glance. To reduce clutter, each entry of the client list will only show the following fields, each in a single line.","lastModifiedDate":"2024-04-10"},{"lineNumber":807,"author":{"gitId":"RyanNgWH"},"content":"  * Name","lastModifiedDate":"2024-04-10"},{"lineNumber":808,"author":{"gitId":"RyanNgWH"},"content":"  * Tags","lastModifiedDate":"2024-04-10"},{"lineNumber":809,"author":{"gitId":"RyanNgWH"},"content":"  * Phone Number","lastModifiedDate":"2024-04-10"},{"lineNumber":810,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":811,"author":{"gitId":"RyanNgWH"},"content":"Fields that exceed the length of the line would be truncated. Complete information can always be viewed in the client details panel.","lastModifiedDate":"2024-04-10"},{"lineNumber":812,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":813,"author":{"gitId":"RyanNgWH"},"content":"6. **Restrict the number of weight entries per day to 1**","lastModifiedDate":"2024-04-10"},{"lineNumber":814,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":815,"author":{"gitId":"RyanNgWH"},"content":"Since a client\u0027s weight won\u0027t change much within a day, we can restrict the number of weight entries per day to 1. Having multiple weight entries within a day would also distort the weight-tracking graph.","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"RyanNgWH":82,"bgopi23":132,"ruijietay":68,"jjchee77":55,"-":314,"dillontkh":164}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"## About FitBook","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"FitBook is a **desktop app for managing your clients, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you are a personal trainer that prefers typing over mouse interactions, FitBook is the perfect application for you!","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"### Key features","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"{:.no_toc}","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"With FitBook, you can:","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"* **Seamlessly save clients as contacts on your phone using QR codes**","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"* **Store personalized notes for each client**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"* **Keep track of your clients\u0027 weight**","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"_All in one app!_","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"For more details on what FitBook has to offer, check out the [Features](#features) section below!","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"## Using this guide","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"The purpose of this user guide is to **walk you through installing FitBook**, as well as be a **resource you can refer to** if you require any additional help. Think of it like an instruction manual that comes with a new gadget - You can refer to it if you get stuck, but otherwise, you\u0027re free to explore on your own!","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"You can use the [Table of contents](#table-of-contents) to navigate directly to what you\u0027re looking for.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:bulb: **Tips/Info**","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"Be on the lookout for boxes like these, they usually contain important information and helpful tips!","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning**","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"On the other hand, these boxes indicate when you should pay extra attention to avoid running into problems.","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e:rotating_light: **Caution**","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"Lastly, these boxes contain warnings about potential negative outcomes.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"(e.g. irreversible loss of data)","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"Can\u0027t wait to get started? [Click me](#setting-up-fitbook) to jump straight to the FitBook installation guide!","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"_Disclaimer: Certain portions of this guide assume you are familiar with the command line. If you aren\u0027t, check out this informative \u003ca href\u003d\"https://www.freecodecamp.org/news/command-line-for-beginners/\" target\u003d\"_blank\"\u003earticle from freeCodeCamp\u003c/a\u003e._","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"## Table of contents","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"## Setting up FitBook","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"1. Ensure you have Java **11** or above installed.","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    * [What version of Java do I have?](#what-version-of-java-do-i-have)","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"    * Need help installing Java? Check out the \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html\" target\u003d\"_blank\"\u003eJava 11 installation guide\u003c/a\u003e.","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":":question: **What is Java? Is it safe to install?**","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"Java is a versatile programming language used for developing various applications. FitBook requires it to be installed because it is written in Java and relies on the Java Virtual Machine (JVM) to run.","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"\u003ca href\u003d\"https://www.java.com/en/download/help/whatis_java.html\" target\u003d\"_blank\"\u003eLearn more about Java\u003c/a\u003e.","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"[//]: # (Continue numbering from 2, as the block above interrupts the list and resets the number)","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"{:start\u003d\"2\"}","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"1. Download the latest version of `FitBook.jar` from \u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-T17-3/tp/releases\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e.","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"1. Copy the file to the folder you want to use as the **home folder** for FitBook.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"   * FitBook will save all the data it needs in this folder.","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"1. Double-click the `FitBook.jar` file to launch it.","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"    * If that doesn\u0027t work, try the steps found [here](#why-doesnt-fitbook-start-when-i-double-click).","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"1. A GUI similar to the one depicted below should appear in a few seconds. The app contains some sample data for you to familiarize yourself with the UI.\u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"    ![Ui](images/UGUI.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"1. Read through `help`, type any command listed into the input box and press `enter` \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"   These are some example commands you can try!","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"bgopi23"},"content":"   * `add n/John p/98765432` Adds a client named","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"   `John Doe` with the number `98765432` to FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"bgopi23"},"content":"   * `clear` : Clears all clients from the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"bgopi23"},"content":"   * `delete 3` : Deletes the third client shown in the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"   * `list` : Lists all clients.","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"dillontkh"},"content":"\u003chr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"bgopi23"},"content":"Launches the help menu depicted below. \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"bgopi23"},"content":"Clicking `Open User Guide` leads to the User Guide website.","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"### Adding a client : `add`","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"bgopi23"},"content":"Adds a client to the FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"bgopi23"},"content":"Format: `add n/NAME p/PHONE_NUMBER [e/EMAIL] [a/ADDRESS] [w/WEIGHT] [h/HEIGHT] [nt/NOTE] [t/TAG]…​`\u003cbr\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"bgopi23"},"content":"* Refer to the [valid parameter table](#parameter-constraints) for more details about input restrictions.","lastModifiedDate":"2024-04-11"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"* When HEIGHT and/or WEIGHT is specified to be 0, no height/weight will be added to the client.","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"* HEIGHT and WEIGHT only take in one value each. For example, the following commands are invalid","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"  * `add n/Tom p/123 w/85 65`","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"  * `add n/Tom p/123 h/180 175`","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"A client can have 0 or more tags.","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Note:**","lastModifiedDate":"2024-04-09"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"FitBook does not allow addition of [duplicate clients](#duplicate-clients).","lastModifiedDate":"2024-04-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"ruijietay"},"content":"* `add n/John Doe p/98765432 e/johnd@gmail.com a/John street, block 123, #01-01 nt/john from school`","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"ruijietay"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@hotmail.com a/Newgate Prison p/1234567 nt/likes donuts t/criminal`","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"### Listing all clients : `list`","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"Displays an indexed list of all clients in FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"bgopi23"},"content":"### Editing a client : `edit`","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"ruijietay"},"content":"Edits information tagged to an existing client.","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"ruijietay"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [w/WEIGHT] [h/HEIGHT] [nt/NOTE] [t/TAG]…​`","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"bgopi23"},"content":"* Edits the clients at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"bgopi23"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"ruijietay"},"content":"* Refer to the list of valid parameters of each input for more details.","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"ruijietay"},"content":"* When no value is specified after a prefix, the value of that prefix will be removed from the client. (e.g. `edit 1 nt/` removes the note from the client at index 1).","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"ruijietay"},"content":"    * Since WEIGHT can store multiple historical values, specifying an empty weight prefix removes the latest weight value from the client. Otherwise, the latest weight value will be replaced by the specified weight in this command.","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"* HEIGHT and WEIGHT only take in one value each. For example, the following commands are invalid","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"ruijietay"},"content":"  * `add n/Tom p/123 w/85 65`","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"  * `add n/Tom p/123 h/180 175`","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"ruijietay"},"content":"* When WEIGHT is specified to be 0, the **latest** weight (if any) will be removed from the client.","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"ruijietay"},"content":"* Similarly, when HEIGHT is specified to be 0, the height value will be removed from the client.","lastModifiedDate":"2024-04-09"},{"lineNumber":191,"author":{"gitId":"bgopi23"},"content":"* When editing tags, all existing tags of the client will be removed before new specified tags are added.","lastModifiedDate":"2024-04-11"},{"lineNumber":192,"author":{"gitId":"bgopi23"},"content":"* You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"bgopi23"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"bgopi23"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"ruijietay"},"content":"### Adding a note to a client : `note`","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"dillontkh"},"content":"Format: `note INDEX [NOTE] `","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"ruijietay"},"content":"* Edits the note of the client specified by `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"dillontkh"},"content":"* Existing note will be updated to the note specified.","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"dillontkh"},"content":"* If no note is given, the note for the client at the specified index will be deleted.","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"ruijietay"},"content":"\u003e While this can also be done using the `edit` command, this `note` command serves as a faster way for users to directly modify a note.","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"RyanNgWH"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Note:**","lastModifiedDate":"2024-04-09"},{"lineNumber":211,"author":{"gitId":"RyanNgWH"},"content":"FitBook does not allow any edits that might result in [duplicate clients](#duplicate-clients).","lastModifiedDate":"2024-04-11"},{"lineNumber":212,"author":{"gitId":"RyanNgWH"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":213,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":214,"author":{"gitId":"ruijietay"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"dillontkh"},"content":"* `note 1 History of asthma` - Changes the note of the 1st client to `History of asthma`.","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"dillontkh"},"content":"* `note 2 Previously sprained both ankles` - Changes the note of the 2nd client to `Previously sprained both ankles`.","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"dillontkh"},"content":"If `/edit` is supplied instead of a note, (e.g. `note 1 /edit`), `/edit` will be replaced with the existing note after pressing the `Enter` key. This provides greater convenience to the user when editing an existing note.","lastModifiedDate":"2024-04-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"dillontkh"},"content":"\u003e For example: Client at index 1 has the note \"Wants to gain muscle\".","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"dillontkh"},"content":"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"dillontkh"},"content":"\u003e Executing the command `note 1 /edit` will replace the contents of the command box with `note 1 Wants to gain muscle`.","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"ruijietay"},"content":"### Adding or overwriting exercise(s) of clients : `fitadd`","lastModifiedDate":"2024-04-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"dillontkh"},"content":"Format: `fitadd INDEX n/EXERCISE_NAME [s/SETS] [r/REPS] [b/BREAK_BETWEEN_SETS_IN_SECONDS]`","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"jjchee77"},"content":"* Adds the specified exercise to the client specified by `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-09"},{"lineNumber":231,"author":{"gitId":"jjchee77"},"content":"* `EXERCISE_NAME` is **case-insensitive**.","lastModifiedDate":"2024-04-09"},{"lineNumber":232,"author":{"gitId":"jjchee77"},"content":"* Overwrites the specified exercise and its values if the exercise already exists for the client.","lastModifiedDate":"2024-04-09"},{"lineNumber":233,"author":{"gitId":"jjchee77"},"content":"* An exercise is deemed to already exist if the case-insensitive user-supplied exercise name completely matches an existing exercise name of the client.","lastModifiedDate":"2024-04-09"},{"lineNumber":234,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"jjchee77"},"content":"Alternatively, you can use **one or more** of the supported prefixes to quickly add a predefined set of related exercises to the specified client.","lastModifiedDate":"2024-04-09"},{"lineNumber":236,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"dillontkh"},"content":"Format: `fitadd INDEX [/arms] [/legs] [/chest] [/back] [/shoulders] [/abs] [/all]`","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"jjchee77"},"content":"| Prefix     | Exercises                                                                                                                                             |","lastModifiedDate":"2024-04-09"},{"lineNumber":240,"author":{"gitId":"jjchee77"},"content":"|------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-09"},{"lineNumber":241,"author":{"gitId":"jjchee77"},"content":"| `/arms`      | `bicep curls` - `sets`: 3, `reps`: 10, `break`: 60\u003cbr/\u003e`tricep dips` - `sets`: 3, `reps`: 12, `break`: 60\u003cbr/\u003e`push-ups` - `sets`: 3, `reps`: 15, `break`: 90           |","lastModifiedDate":"2024-04-10"},{"lineNumber":242,"author":{"gitId":"jjchee77"},"content":"| `/legs`      | `squats` - `sets`: 4, `reps`: 15, `break`: 90\u003cbr/\u003e`lunges` - `sets`: 3, `reps`: 12, `break`: 60\u003cbr/\u003e`calf raises` - `sets`: 3, `reps`: 20, `break`: 60                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":243,"author":{"gitId":"jjchee77"},"content":"| `/chest`     | `bench press` - `sets`: 4, `reps`: 8, `break`: 120\u003cbr/\u003e`push-ups` - `sets`: 3, `reps`: 15, `break`: 90\u003cbr/\u003e`chest fly` - `sets`: 3, `reps`: 10, `break`: 90             |","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"jjchee77"},"content":"| `/back`      | `pull-ups` - `sets`: 3, `reps`: 8, `break`: 120\u003cbr/\u003e`bent-over rows` - `sets`: 3, `reps`: 10, `break`: 90\u003cbr/\u003e`lat pull-downs` - `sets`: 3, `reps`: 12, `break`: 60     |","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"jjchee77"},"content":"| `/shoulders` | `shoulder press` - `sets`: 3, `reps`: 10, `break`: 90\u003cbr/\u003e`lateral raises` - `sets`: 3, `reps`: 12, `break`: 60\u003cbr/\u003e`front raises` - `sets`: 3, `reps`: 10, `break`: 60 |","lastModifiedDate":"2024-04-10"},{"lineNumber":246,"author":{"gitId":"jjchee77"},"content":"| `/abs`       | `crunches` - `sets`: 3, `reps`: 20, `break`: 60\u003cbr/\u003e`plank` - `sets`: 3, `reps`: 60, `break`: 90\u003cbr/\u003e`russian twists` - `sets`: 3, `reps`: 15, `break`: 60              |","lastModifiedDate":"2024-04-10"},{"lineNumber":247,"author":{"gitId":"jjchee77"},"content":"| `/all`       | A combination of all exercises from the other prefixes                                                                                                |","lastModifiedDate":"2024-04-09"},{"lineNumber":248,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":249,"author":{"gitId":"dillontkh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning**","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"jjchee77"},"content":"You must either specify an exercise name, or use one or more of the default supported prefixes, but not both together.","lastModifiedDate":"2024-04-09"},{"lineNumber":252,"author":{"gitId":"jjchee77"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":253,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":254,"author":{"gitId":"jjchee77"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning**","lastModifiedDate":"2024-04-09"},{"lineNumber":255,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":256,"author":{"gitId":"jjchee77"},"content":"If you are adding an exercise that already exists for the client, the exercise will be overwritten with the newly supplied","lastModifiedDate":"2024-04-10"},{"lineNumber":257,"author":{"gitId":"jjchee77"},"content":"exercise value(s), or a default set of exercise values (ie. `sets`: 1, `reps`: 1, `break`: 0) for the exercise value(s) that are not supplied.","lastModifiedDate":"2024-04-10"},{"lineNumber":258,"author":{"gitId":"jjchee77"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":259,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":260,"author":{"gitId":"dillontkh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning**","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"jjchee77"},"content":"Using the default supported prefixes will overwrite exercises with the predefined set of values, if any of those predefined","lastModifiedDate":"2024-04-10"},{"lineNumber":263,"author":{"gitId":"jjchee77"},"content":"default exercises already exists for the client.","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":265,"author":{"gitId":"jjchee77"},"content":"For example, if client with `INDEX` 1 already has an exercise named `push-ups` with `sets`: 20, `reps`: 5 and `break`: 60,","lastModifiedDate":"2024-04-10"},{"lineNumber":266,"author":{"gitId":"jjchee77"},"content":"entering the command `fitadd 1 /arms`, will overwrite the `push-ups` exercise values to `sets`: 3, `reps`: 15 and `break`: 90.","lastModifiedDate":"2024-04-10"},{"lineNumber":267,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":268,"author":{"gitId":"jjchee77"},"content":"As per the default exercises table above.","lastModifiedDate":"2024-04-10"},{"lineNumber":269,"author":{"gitId":"dillontkh"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"jjchee77"},"content":"* `fitadd 1 n/burpees` - Adds or overwrites the `burpees` exercise of the 1st client with a default set of 1, default repetition of 1 and default 0 seconds break time between sets.","lastModifiedDate":"2024-04-09"},{"lineNumber":274,"author":{"gitId":"jjchee77"},"content":"* `fitadd 1 n/burpees r/5` - Adds or overwrites the `burpees` exercise of the 1st client with a default set of 1, repetitions of 5 and default 0 seconds break time between sets.","lastModifiedDate":"2024-04-09"},{"lineNumber":275,"author":{"gitId":"jjchee77"},"content":"* `fitadd 1 n/burpees s/3 r/5 b/30` - Adds or overwrites the `burpees` exercise of the 1st client with sets of 3, repetitions of 5 and 30 seconds break time between sets.","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"jjchee77"},"content":"* `fitadd 2 /arms` - Adds or overwrites a default set of exercises from the `arms` category to the 2nd client.","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"jjchee77"},"content":"* `fitadd 2 /arms /legs` - Adds or overwrites a default set of exercises from the `arms` and `legs` category to the 2nd client.","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"jjchee77"},"content":"\u003chr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"jjchee77"},"content":"### Deleting exercise(s) of clients : `fitdelete`","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"jjchee77"},"content":"Format: `fitdelete INDEX n/EXERCISE_NAME`","lastModifiedDate":"2024-04-09"},{"lineNumber":283,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":284,"author":{"gitId":"jjchee77"},"content":"* Deletes the specified exercise from the client specified by `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-09"},{"lineNumber":285,"author":{"gitId":"jjchee77"},"content":"* `EXERCISE_NAME` is **case-insensitive**.","lastModifiedDate":"2024-04-09"},{"lineNumber":286,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"jjchee77"},"content":"Alternatively, you can use the `/all` prefix to delete all exercises from the specified client.","lastModifiedDate":"2024-04-09"},{"lineNumber":288,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"jjchee77"},"content":"Format: `fitdelete INDEX /all`","lastModifiedDate":"2024-04-09"},{"lineNumber":290,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"jjchee77"},"content":"* Supplying the `/all` prefix more than once will be treated as if it was only supplied once.","lastModifiedDate":"2024-04-10"},{"lineNumber":292,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"dillontkh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning**","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"jjchee77"},"content":"You must either specify an exercise name or the `/all` prefix, but not both together.","lastModifiedDate":"2024-04-10"},{"lineNumber":296,"author":{"gitId":"dillontkh"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"jjchee77"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"jjchee77"},"content":"* `fitdelete 1 n/burpees` - Deletes the exercise with name `burpees` from the 1st client.","lastModifiedDate":"2024-04-04"},{"lineNumber":301,"author":{"gitId":"jjchee77"},"content":"* `fitdelete 2 /all` - Deletes all exercise(s) from the 2nd client.","lastModifiedDate":"2024-04-04"},{"lineNumber":302,"author":{"gitId":"jjchee77"},"content":"\u003chr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":303,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"ruijietay"},"content":"### Adding or removing weight of a client : `weight`","lastModifiedDate":"2024-04-10"},{"lineNumber":305,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"ruijietay"},"content":"Format: `weight INDEX [WEIGHT] `","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"ruijietay"},"content":"* Adds a weight value to a client specified by `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"dillontkh"},"content":"* Weight values specified in this command will be added as a new weight value to the specified client. To edit the latest weight of the client, use the [`edit`](#editing-a-client--edit) command.","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"ruijietay"},"content":"* If more than one value is entered, only the first value will be parsed. Extraneous parameters after the first value will be ignored.","lastModifiedDate":"2024-04-09"},{"lineNumber":311,"author":{"gitId":"ruijietay"},"content":"  * For example, `weight 1 85 95` only adds the weight value of `85` to the first client in the list. The value of `95` will be ignored.","lastModifiedDate":"2024-04-10"},{"lineNumber":312,"author":{"gitId":"ruijietay"},"content":"* If no weight value is given, or the weight value entered is 0, the latest weight for the client at the specified index will be deleted.","lastModifiedDate":"2024-04-09"},{"lineNumber":313,"author":{"gitId":"ruijietay"},"content":"* Refer to the list of valid parameters of each input for more details.","lastModifiedDate":"2024-04-10"},{"lineNumber":314,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"ruijietay"},"content":"\u003e While the `edit` command allows one to **edit** a client\u0027s latest weight value, this `weight` command serves as a way for users to **add** a client\u0027s weight.","lastModifiedDate":"2024-04-04"},{"lineNumber":316,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"ruijietay"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":318,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"ruijietay"},"content":"* `weight 1 90` - Adds a new weight value of 90 to the client at index 1.","lastModifiedDate":"2024-04-04"},{"lineNumber":320,"author":{"gitId":"ruijietay"},"content":"* `weight 2` - Deletes the latest weight value of the client at index 2.","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"dillontkh"},"content":"\u003chr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":323,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":324,"author":{"gitId":"dillontkh"},"content":"### Finding clients : `find`","lastModifiedDate":"2024-04-10"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"ruijietay"},"content":"Finds all clients that match the specified attributes.","lastModifiedDate":"2024-03-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"ruijietay"},"content":"Format: `find [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [w/RANGE] [h/RANGE] [nt/NOTE] [t/TAG]…​`","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"ruijietay"},"content":"* The search is case-insensitive for inputs that accept characters (i.e. `NAME, PHONE, EMAIL, ADDRESS, NOTE, TAG`). e.g `hans` will match `Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"dillontkh"},"content":"* `RANGE` allows the user to search for a value that falls within the specified `RANGE`. Refer to the [parameter constraints](#parameter-constraints) for more info.","lastModifiedDate":"2024-04-11"},{"lineNumber":332,"author":{"gitId":"ruijietay"},"content":"* Any fields specified in the format above can be searched.","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"bgopi23"},"content":"* When an empty input is specified for an optional field, only users that have value(s) available for that field will be shown. (e.g. `find w/` returns all clients that have at least one weight value associated with them).","lastModifiedDate":"2024-04-10"},{"lineNumber":334,"author":{"gitId":"ruijietay"},"content":"* Multiple fields can be searched in one command.","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"bgopi23"},"content":"    * All fields must match (e.g `find n/Wendy p/91234567` will match with a client whose name **contains** `wendy` and phone number **contains** `91234567`)","lastModifiedDate":"2024-04-10"},{"lineNumber":336,"author":{"gitId":"RyanNgWH"},"content":"* All fields except `TAG` will be matched based on substring (e.g `Wen` will match `Wendy`)","lastModifiedDate":"2024-03-19"},{"lineNumber":337,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":338,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Take note:**","lastModifiedDate":"2024-03-30"},{"lineNumber":339,"author":{"gitId":"ruijietay"},"content":"* Unlike other fields, `TAG` must be an exact match (case-insensitive)","lastModifiedDate":"2024-03-30"},{"lineNumber":340,"author":{"gitId":"RyanNgWH"},"content":"* E.g `find t/fri` will not match the tag `friend`","lastModifiedDate":"2024-03-19"},{"lineNumber":341,"author":{"gitId":"ruijietay"},"content":"* But `find t/fRieNd` will match the tag `friend`","lastModifiedDate":"2024-03-30"},{"lineNumber":342,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":343,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":344,"author":{"gitId":"dillontkh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-11"},{"lineNumber":345,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":346,"author":{"gitId":"bgopi23"},"content":"* If no prefix is specified for the first argument, it will be used to search for a client\u0027s name.","lastModifiedDate":"2024-04-11"},{"lineNumber":347,"author":{"gitId":"bgopi23"},"content":"    * e.g. `find roy t/friends` is allowed.","lastModifiedDate":"2024-04-11"},{"lineNumber":348,"author":{"gitId":"bgopi23"},"content":"* If no prefix is specified to search for a client\u0027s name, it must be the first field to search.","lastModifiedDate":"2024-04-11"},{"lineNumber":349,"author":{"gitId":"bgopi23"},"content":"    * e.g. `find t/friends roy` will result in an error.","lastModifiedDate":"2024-04-11"},{"lineNumber":350,"author":{"gitId":"bgopi23"},"content":"* If name prefix is specified it will take precedence over the non-prefixed argument.","lastModifiedDate":"2024-04-11"},{"lineNumber":351,"author":{"gitId":"bgopi23"},"content":"    * e.g. `find roys n/roy` will use n/roy to search for a client\u0027s name instead of roys.","lastModifiedDate":"2024-04-11"},{"lineNumber":352,"author":{"gitId":"bgopi23"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":353,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"RyanNgWH"},"content":"* `find n/Wendy` returns `Wendy Son` and `Wendy Kim`","lastModifiedDate":"2024-03-19"},{"lineNumber":357,"author":{"gitId":"RyanNgWH"},"content":"* `find n/Wendy t/Lover` returns `Wendy` (`Name` contains `Wendy` and is tagged with `Lover`)","lastModifiedDate":"2024-03-19"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":360,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":361,"author":{"gitId":"bgopi23"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2024-03-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"bgopi23"},"content":"Deletes the specified client from FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"bgopi23"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2024-03-15"},{"lineNumber":368,"author":{"gitId":"bgopi23"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-15"},{"lineNumber":369,"author":{"gitId":"bgopi23"},"content":"* The index **must be a single positive integer** (e.g. 1, 2, 3…​).","lastModifiedDate":"2024-04-11"},{"lineNumber":370,"author":{"gitId":"bgopi23"},"content":"* Anything after `delete` is treated as the index.","lastModifiedDate":"2024-04-11"},{"lineNumber":371,"author":{"gitId":"bgopi23"},"content":"* The index cannot be followed by any text (`delete 1 2` will be regarded as an invalid index).","lastModifiedDate":"2024-04-11"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"bgopi23"},"content":"* `list` followed by `delete 2` deletes the second client in the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":375,"author":{"gitId":"bgopi23"},"content":"* `find Betsy` followed by `delete 1` deletes the first client in the results of the `find` command.","lastModifiedDate":"2024-03-21"},{"lineNumber":376,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":377,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"bgopi23"},"content":"Clears all client information from FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":384,"author":{"gitId":"ruijietay"},"content":":rotating_light: **This command is irreversible. Use with caution.**","lastModifiedDate":"2024-03-30"},{"lineNumber":385,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":386,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":387,"author":{"gitId":"ruijietay"},"content":"If you are sure of your decision to clear all client information, use the `/confirm` prefix with this command to execute it.","lastModifiedDate":"2024-03-19"},{"lineNumber":388,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":389,"author":{"gitId":"ruijietay"},"content":"Format: `clear /confirm`","lastModifiedDate":"2024-03-19"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"bgopi23"},"content":"Exits FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"bgopi23"},"content":"FitBook data is saved to your hard disk automatically after any command that changes the data.","lastModifiedDate":"2024-04-04"},{"lineNumber":403,"author":{"gitId":"bgopi23"},"content":"There is no need to save manually.","lastModifiedDate":"2024-03-21"},{"lineNumber":404,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":405,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":409,"author":{"gitId":"bgopi23"},"content":"FitBook data is saved automatically as a JSON file `[JAR file location]/data/addressbook.json`.","lastModifiedDate":"2024-03-21"},{"lineNumber":410,"author":{"gitId":"bgopi23"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-21"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":412,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning:**","lastModifiedDate":"2024-03-30"},{"lineNumber":413,"author":{"gitId":"ruijietay"},"content":"If your changes to the data file make its format invalid, FitBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to make a backup of the file before editing it.","lastModifiedDate":"2024-03-30"},{"lineNumber":414,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":415,"author":{"gitId":"ruijietay"},"content":"Furthermore, certain edits can cause FitBook to behave in unexpected ways (e.g. if a value entered is outside of the acceptable range, or an invalid field is specified). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-09"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":417,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":419,"author":{"gitId":"bgopi23"},"content":"### Save contact to phone","lastModifiedDate":"2024-03-21"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":421,"author":{"gitId":"dillontkh"},"content":"![QrCodeContactCard](images/QrCodeContactCard.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":423,"author":{"gitId":"dillontkh"},"content":"To save a contact to your mobile phone from FitBook, simply scan the QR code next to the contact using your phone\u0027s default camera app!","lastModifiedDate":"2024-04-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":425,"author":{"gitId":"dillontkh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning:","lastModifiedDate":"2024-04-07"},{"lineNumber":426,"author":{"gitId":"dillontkh"},"content":"Due to the limited availability of mobile devices for testing, this feature has only been tested on the following devices:","lastModifiedDate":"2024-04-07"},{"lineNumber":427,"author":{"gitId":"dillontkh"},"content":"* iPhone 15 Pro Max running iOS 17.4.1","lastModifiedDate":"2024-04-07"},{"lineNumber":428,"author":{"gitId":"dillontkh"},"content":"* Samsung S23 Ultra running OneUI 6.0","lastModifiedDate":"2024-04-07"},{"lineNumber":429,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":430,"author":{"gitId":"dillontkh"},"content":"While most modern smartphones are able to scan QR codes with the default camera app, we are unable to provide any guarantee that it will work with all smartphones.","lastModifiedDate":"2024-04-10"},{"lineNumber":431,"author":{"gitId":"dillontkh"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":432,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":433,"author":{"gitId":"ruijietay"},"content":"\u003cimg src\u003d\"images/QRScanning.png\" height\u003d\"480\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":434,"author":{"gitId":"ruijietay"},"content":"\u003cimg src\u003d\"images/QRContact.png\" height\u003d\"480\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":435,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":436,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"ruijietay"},"content":"###### How do I transfer my data to another Computer?","lastModifiedDate":"2024-03-30"},{"lineNumber":441,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":442,"author":{"gitId":"bgopi23"},"content":"**A**: Install FitBook in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FitBook home folder.","lastModifiedDate":"2024-03-21"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"ruijietay"},"content":"###### What version of Java do I have?","lastModifiedDate":"2024-03-30"},{"lineNumber":445,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":446,"author":{"gitId":"ruijietay"},"content":"**A**: Open a command prompt, and run the command `java --version`","lastModifiedDate":"2024-03-30"},{"lineNumber":447,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":448,"author":{"gitId":"ruijietay"},"content":"###### Why doesn\u0027t FitBook start when I double-click?","lastModifiedDate":"2024-03-30"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":450,"author":{"gitId":"ruijietay"},"content":"**A**: If double-clicking to open FitBook doesn\u0027t work, try running it via the command line:","lastModifiedDate":"2024-03-30"},{"lineNumber":451,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":452,"author":{"gitId":"ruijietay"},"content":"1. Open a command prompt (**cmd** for Windows, **Terminal** for Mac)","lastModifiedDate":"2024-03-30"},{"lineNumber":453,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":454,"author":{"gitId":"ruijietay"},"content":"1. Use `cd` to navigate to the folder containing `FitBook.jar`","lastModifiedDate":"2024-03-30"},{"lineNumber":455,"author":{"gitId":"ruijietay"},"content":"    * e.g. `cd ~/Downloads/FitBook/`","lastModifiedDate":"2024-03-30"},{"lineNumber":456,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":457,"author":{"gitId":"ruijietay"},"content":"1. Run `java -jar FitBook.jar` to launch FitBook.","lastModifiedDate":"2024-03-30"},{"lineNumber":458,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":459,"author":{"gitId":"dillontkh"},"content":"\u003chr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":465,"author":{"gitId":"dillontkh"},"content":"1. **When scanning a client\u0027s QR code with the Google Lens app**, an irrelevant country code might be added to the front of the phone number. The remedy is to use your phone\u0027s default camera app to scan the QR code.","lastModifiedDate":"2024-04-10"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":467,"author":{"gitId":"dillontkh"},"content":"1. **When trying to scan the QR code of a client with a lot of information stored**, the QR code may become too dense and difficult to scan. The remedy is to reduce the amount of information stored in the client.","lastModifiedDate":"2024-04-09"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"dillontkh"},"content":"\u003e We have verified that the QR code can still be scanned for clients with no more than 100 characters in each of the following fields:","lastModifiedDate":"2024-04-10"},{"lineNumber":470,"author":{"gitId":"dillontkh"},"content":"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":471,"author":{"gitId":"dillontkh"},"content":"\u003e * Name","lastModifiedDate":"2024-04-09"},{"lineNumber":472,"author":{"gitId":"dillontkh"},"content":"\u003e * Phone Number","lastModifiedDate":"2024-04-09"},{"lineNumber":473,"author":{"gitId":"dillontkh"},"content":"\u003e * Address","lastModifiedDate":"2024-04-09"},{"lineNumber":474,"author":{"gitId":"dillontkh"},"content":"\u003e * Email","lastModifiedDate":"2024-04-09"},{"lineNumber":475,"author":{"gitId":"dillontkh"},"content":"\u003e * Notes","lastModifiedDate":"2024-04-09"},{"lineNumber":476,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":477,"author":{"gitId":"dillontkh"},"content":"\u003chr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":481,"author":{"gitId":"ruijietay"},"content":"| Command                                                           | Format, Examples                                                                                                                                                                                                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":482,"author":{"gitId":"dillontkh"},"content":"|-------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":483,"author":{"gitId":"dillontkh"},"content":"| [**add**](#adding-a-client--add)                                  | `add n/NAME p/PHONE_NUMBER [e/EMAIL] [a/ADDRESS] [nt/NOTE] [h/HEIGHT] [w/WEIGHT] [t/TAG]…​` \u003cbr\u003e\u003cbr\u003ee.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 nt/likes pizzas w/70 h/170 t/friend t/colleague` |","lastModifiedDate":"2024-04-11"},{"lineNumber":484,"author":{"gitId":"dillontkh"},"content":"| [**clear**](#clearing-all-entries--clear)                         | `clear`                                                                                                                                                                                                                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":485,"author":{"gitId":"dillontkh"},"content":"| [**delete**](#deleting-a-client--delete)                          | `delete INDEX`\u003cbr\u003e\u003cbr\u003ee.g. `delete 3`                                                                                                                                                                                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":486,"author":{"gitId":"dillontkh"},"content":"| [**edit**](#editing-a-client--edit)                               | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [nt/NOTE] [h/HEIGHT] [w/WEIGHT] [t/TAG]…​`\u003cbr\u003e\u003cbr\u003ee.g. `edit 2 n/James Lee e/jameslee@example.com`                                                                         |","lastModifiedDate":"2024-04-11"},{"lineNumber":487,"author":{"gitId":"dillontkh"},"content":"| [**exit**](#exiting-the-program--exit)                            | `exit`                                                                                                                                                                                                                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":488,"author":{"gitId":"dillontkh"},"content":"| [**find**](#finding-clients--find)                                | `find [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [nt/NOTE] [t/TAG]…​ [h/RANGE] [w/RANGE]`\u003cbr\u003e\u003cbr\u003ee.g. `find n/Alex w/40,80 nt/Wants to build muscle t/family`                                                                     |","lastModifiedDate":"2024-04-11"},{"lineNumber":489,"author":{"gitId":"dillontkh"},"content":"| [**fitadd**](#adding-or-overwriting-exercises-of-clients--fitadd) | `fitadd INDEX [n/EXERCISE_NAME] [s/SETS] [r/REPS] [b/BREAK_BETWEEN_SETS_IN_SECONDS] [/arms] [/legs] [/chest] [/back] [/shoulders] [/abs] [/all] `\u003cbr\u003e\u003cbr\u003ee.g. `fitadd 1 n/burpees s/3 r/5 b/30`\u003cbr\u003e`fitadd 1 /arms /abs`               |","lastModifiedDate":"2024-04-10"},{"lineNumber":490,"author":{"gitId":"dillontkh"},"content":"| [**fitdelete**](#deleting-exercises-of-clients--fitdelete)        | `fitdelete INDEX [n/EXERCISE_NAME] [/all]`\u003cbr\u003e\u003cbr\u003ee.g. `fitdelete 1 n/burpees`\u003cbr\u003e`fitdelete 1 /all`                                                                                                                                   |","lastModifiedDate":"2024-04-10"},{"lineNumber":491,"author":{"gitId":"dillontkh"},"content":"| [**list**](#listing-all-clients--list)                            | `list`                                                                                                                                                                                                                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":492,"author":{"gitId":"dillontkh"},"content":"| [**help**](#viewing-help--help)                                   | `help`                                                                                                                                                                                                                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":493,"author":{"gitId":"dillontkh"},"content":"| [**note**](#adding-a-note-to-a-client--note)                      | `note INDEX [NOTE] [/edit]`\u003cbr\u003e\u003cbr\u003ee.g. `note 2 Sprained right ankle in the past`\u003cbr\u003e`note 1 /edit`                                                                                                                                    |","lastModifiedDate":"2024-04-10"},{"lineNumber":494,"author":{"gitId":"dillontkh"},"content":"| [**weight**](#adding-or-removing-weight-of-a-client--weight)      | `weight INDEX [WEIGHT]`\u003cbr\u003e\u003cbr\u003e e.g. `weight 3 70`                                                                                                                                                                                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":495,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":496,"author":{"gitId":"bgopi23"},"content":"## Parameter Constraints","lastModifiedDate":"2024-04-09"},{"lineNumber":497,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":498,"author":{"gitId":"bgopi23"},"content":"| Parameter          | Constraints|","lastModifiedDate":"2024-04-09"},{"lineNumber":499,"author":{"gitId":"dillontkh"},"content":"|--------------------||","lastModifiedDate":"2024-04-11"},{"lineNumber":500,"author":{"gitId":"bgopi23"},"content":"| **Name**           | Must only contain alphanumeric characters, spaces, and cannot be blank|","lastModifiedDate":"2024-04-11"},{"lineNumber":501,"author":{"gitId":"bgopi23"},"content":"| **Phone Number**   | Must only contains digits with a minimum length of 1 (spaces between numbers will be removed|","lastModifiedDate":"2024-04-11"},{"lineNumber":502,"author":{"gitId":"dillontkh"},"content":"| **Email**          | Must follow `local-part@domain`. Each segment adheres to the following constraints: \u003cbr\u003e\u003cbr\u003e **Local-Part:** {::nomarkdown}\u003cul\u003e\u003cli\u003e\u003cb\u003eAllowed Characters:\u003c/b\u003e The local-part can contain alphanumeric characters (letters and numbers) and these special characters: {:/}`+`, `_`, `.`, `-`{::nomarkdown}.\u003c/li\u003e\u003cli\u003e\u003cb\u003eRestrictions:\u003c/b\u003e The local-part cannot begin or end with any of the special characters ({:/}`+`, `_`, `.`, `-`{::nomarkdown}).\u003c/li\u003e\u003c/ul\u003e \u003cb\u003eDomain:\u003c/b\u003e \u003cul\u003e\u003cli\u003eThe domain follows the {:/}`@`{::nomarkdown} symbol and consists of domain labels separated by periods ({:/}`.`{::nomarkdown}).\u003c/li\u003e\u003cli\u003e\u003cb\u003eDomain Label Constraints:\u003c/b\u003e \u003cul\u003e\u003cli\u003e\u003cb\u003eEnding Label Length:\u003c/b\u003e The final domain label must be at least 2 characters long.\u003c/li\u003e\u003cli\u003e\u003cb\u003eCharacter Use:\u003c/b\u003e Each domain label must start and end with alphanumeric characters.\u003c/li\u003e\u003cli\u003e\u003cb\u003eInternal Characters:\u003c/b\u003e Within a domain label, only hyphens ({:/}`-`{::nomarkdown}) are allowed to separate alphanumeric characters.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e{:/} |","lastModifiedDate":"2024-04-11"},{"lineNumber":503,"author":{"gitId":"bgopi23"},"content":"| **Address**        | Any text is allowed|","lastModifiedDate":"2024-04-11"},{"lineNumber":504,"author":{"gitId":"bgopi23"},"content":"| **Note**           | Any text is allowed|","lastModifiedDate":"2024-04-11"},{"lineNumber":505,"author":{"gitId":"bgopi23"},"content":"| **Tag**            | Must only contains alphanumeric characters, with no spaces and cannot be blank|","lastModifiedDate":"2024-04-11"},{"lineNumber":506,"author":{"gitId":"dillontkh"},"content":"| **Weight (kg)**    | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive number. ({:/}`w/0` will be treated as `w/`{::nomarkdown})\u003c/li\u003e\u003cli\u003e A reasonable maximum value of 5000 is allowed.\u003c/li\u003e\u003cli\u003e Although some decimal values of 5000 are allowed (e.g. 5000.000001), the weight values will still rounded off to the nearest 1 decimal place (i.e. 5000.0).\u003c/li\u003e\u003c/ul\u003e{:/}|","lastModifiedDate":"2024-04-11"},{"lineNumber":507,"author":{"gitId":"dillontkh"},"content":"| **Height (cm)**    | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive number. ({:/}`h/0` will be treated as `h/`{::nomarkdown})\u003c/li\u003e\u003cli\u003e A reasonable maximum value of 5000 is allowed.\u003c/li\u003e\u003cli\u003e Although some decimal values of 5000 are allowed (e.g. 5000.000001), the height values will still rounded off to the nearest 1 decimal place (i.e. 5000.0).\u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":508,"author":{"gitId":"bgopi23"},"content":"| **Index**          | Must be a positive number corresponding to the client in the list|","lastModifiedDate":"2024-04-11"},{"lineNumber":509,"author":{"gitId":"dillontkh"},"content":"| **Range**          | Format: `FROM, TO`{::nomarkdown}\u003cul\u003e\u003cli\u003eNote that the comma must follow immediately after \u003ccode\u003eFROM\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eFor example, to search for weights that fall between 70kg and 90kg, you can enter \u003ccode\u003ew/70, 90\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e{:/}|","lastModifiedDate":"2024-04-11"},{"lineNumber":510,"author":{"gitId":"dillontkh"},"content":"| **Exercise Name**  | Any non-empty text is allowed.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |","lastModifiedDate":"2024-04-11"},{"lineNumber":511,"author":{"gitId":"dillontkh"},"content":"| **Exercise Sets**  | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive integer. \u003c/li\u003e \u003cli\u003e A reasonable maximum value of 1000000 is allowed. \u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":512,"author":{"gitId":"dillontkh"},"content":"| **Exercise Reps**  | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a positive integer. \u003c/li\u003e \u003cli\u003e A reasonable maximum value of 1000000 is allowed. \u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":513,"author":{"gitId":"dillontkh"},"content":"| **Exercise Break** | {::nomarkdown}\u003cul\u003e\u003cli\u003e Must be a non-negative integer. \u003c/li\u003e \u003cli\u003e A reasonable maximum value of 1000000 is allowed. \u003c/li\u003e\u003c/ul\u003e{:/}||","lastModifiedDate":"2024-04-11"},{"lineNumber":514,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":515,"author":{"gitId":"RyanNgWH"},"content":"### Duplicate Clients","lastModifiedDate":"2024-04-09"},{"lineNumber":516,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":517,"author":{"gitId":"RyanNgWH"},"content":"FitBook does not allow duplicate clients. Clients are considered duplicates if they have the same values for the all of the following fields.","lastModifiedDate":"2024-04-11"},{"lineNumber":518,"author":{"gitId":"dillontkh"},"content":"* Name (case-insensitive)","lastModifiedDate":"2024-04-11"},{"lineNumber":519,"author":{"gitId":"RyanNgWH"},"content":"* Phone number","lastModifiedDate":"2024-04-09"},{"lineNumber":520,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":521,"author":{"gitId":"RyanNgWH"},"content":"\u003e Examples:","lastModifiedDate":"2024-04-09"},{"lineNumber":522,"author":{"gitId":"RyanNgWH"},"content":"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":523,"author":{"gitId":"RyanNgWH"},"content":"\u003e 1. Using the `add` command to add a client that already exists in the Fitbook.","lastModifiedDate":"2024-04-09"},{"lineNumber":524,"author":{"gitId":"RyanNgWH"},"content":"\u003e 1. Using the `edit` command to modify an existing client to have the same name and phone number as another client in Fitbook.","lastModifiedDate":"2024-04-09"},{"lineNumber":525,"author":{"gitId":"RyanNgWH"},"content":"\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":526,"author":{"gitId":"RyanNgWH"},"content":"\u003e Any command that would result in duplicate clients will result in the error *\"This person already exists in the address book\"*.","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"RyanNgWH":20,"bgopi23":79,"ruijietay":148,"jjchee77":57,"-":141,"dillontkh":81}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"dillontkh"},"content":"    content: \"FitBook\";","lastModifiedDate":"2024-03-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"dillontkh":1}},{"path":"docs/diagrams/AddCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"skin rose","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"start","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":":User sends an \u0027add\u0027 command;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":":AddCommandParser generates a Person object;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"if () then ([person already exists])","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"    :Throw CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"stop","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"else","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":":Person is added to the address book;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"stop","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"endif","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"dillontkh":16}},{"path":"docs/diagrams/AddEditCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"skin rose","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"start","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":":Add/Edit CommandParser parses arguments;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":":ArgumentTokenizer tokenizes attributes;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"if () then ([has certain duplicated prefixes])","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"    :Display duplicate prefix error;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"    stop","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"else","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"    :Parse attributes into classes;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    if () then ([has attribute parsing error])","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"        :Display attribute parsing error;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"        stop","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    else ()","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"        :Create Person instance with supplied attributes;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"        :Create Add/Edit Command instance with Person instance;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"        :Execute Add/Edit Command instance;","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"        if () then ([person already exists in FitBook])","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"            :Display duplicate person error;","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"            stop","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"        else ()","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"            :Add person to FitBook;","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"            :Save persons to JSON file;","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"            :Display successful add/edit command result;","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"            stop","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        endif","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    endif","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"endif","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"jjchee77":31}},{"path":"docs/diagrams/AddNoteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"@startuml","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"!include style.puml","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"Actor User as User USER_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"participant \":Ui\" as Ui UI_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"box LogicManager LOGIC_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"participant \":NoteCommandParser\" as NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"participant \"n:NoteCommand\" as NoteCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"User -[USER_COLOR]\u003e Ui : \"note 1 nt/Hi\"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"activate Ui UI_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"Ui -[UI_COLOR]\u003e LogicManager : execute(...)","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"LogicManager -[LOGIC_COLOR]\u003e AddressBookParser : parseCommand(...)","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"create NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"AddressBookParser -[LOGIC_COLOR]\u003e NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"activate NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser --[LOGIC_COLOR]\u003e AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"AddressBookParser -[LOGIC_COLOR]\u003e NoteCommandParser : parse(\" 1 nt/Hi\")","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"activate NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"create NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser -[LOGIC_COLOR]\u003e NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"activate NoteCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"NoteCommand --[LOGIC_COLOR]\u003e NoteCommandParser :","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser --[LOGIC_COLOR]\u003e AddressBookParser : n","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"\u0027This means that the instantiation of the parser is not saved in a variable.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"destroy NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"AddressBookParser --[LOGIC_COLOR]\u003e LogicManager : n","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"LogicManager -[LOGIC_COLOR]\u003e NoteCommand : execute(m)","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"activate NoteCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"NoteCommand -[LOGIC_COLOR]\u003e Model : setPerson(1, \"Hi\");","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"activate Model MODEL_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"Model --[MODEL_COLOR]\u003e NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"deactivate Model","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"create CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"NoteCommand -[LOGIC_COLOR]\u003e CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"CommandResult --[LOGIC_COLOR]\u003e NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"NoteCommand --[LOGIC_COLOR]\u003e LogicManager : r","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"LogicManager -[LOGIC_COLOR]\u003e Storage : saveAddressBook(addressBook)","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"activate Storage STORAGE_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"Storage -[STORAGE_COLOR]\u003e Storage : Save to file","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"activate Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"Storage --[STORAGE_COLOR_T1]\u003e Storage","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"deactivate Storage","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"Storage --[STORAGE_COLOR]\u003e LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"deactivate Storage","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"LogicManager --[LOGIC_COLOR]\u003e Ui : r","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"Ui --[UI_COLOR]\u003e User : r","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"deactivate Ui","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"@enduml","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ruijietay":95}},{"path":"docs/diagrams/DeleteCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"@startuml","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"skin rose","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"start","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":":DeleteCommandParser parses arguments;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":":ParseIndex gets index from parsed arguments;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"if () then ([Valid])","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    :Create DeleteCommand instance with supplied index;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    :Execute DeleteCommand instance;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"    :Delete person from FitBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"    :Display success message;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"    stop","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"else ([Invalid index])","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"    :Display invalid index error;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"    stop","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"endif","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"@enduml","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"bgopi23":18}},{"path":"docs/diagrams/FindCommandSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"box Model MODEL MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"participant \":NameContainsSubstringPredicate\" as NameContainsSubstringPredicate MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"participant \":CombinedPredictes\" as CombinedPredicates MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"[-\u003e LogicManager : execute(\"find n/wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"n/wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"create NameContainsSubstringPredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e NameContainsSubstringPredicate : NameContainsSubstringPredicate(\"wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"activate NameContainsSubstringPredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"NameContainsSubstringPredicate -\u003e FindCommandParser : namePredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"deactivate NameContainsSubstringPredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"create CombinedPredicates","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e CombinedPredicates : CombinedPredicates(namePredicate, ...)","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"activate CombinedPredicates","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"CombinedPredicates -\u003e FindCommandParser : predicates","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"deactivate CombinedPredicates","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"create FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicates)","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"FindCommand -\u003e FindCommandParser : findCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e AddressBookParser : findCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"AddressBookParser -\u003e LogicManager : findCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicates)","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"Model -\u003e FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"FindCommand -\u003e LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"RyanNgWH":65}},{"path":"docs/diagrams/QrAddPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nQrCodeGenerator\" as qrg LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"[-\u003e Model : addPerson(p)","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"activate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"Model -\u003e Person : generateQrCode()","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"activate Person","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"Person -\u003e qrg : generateQrCode(p)","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"activate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"qrg -\u003e qrg : createVCardString(p)","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"activate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"qrg --\u003e qrg : vCard String","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"deactivate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"qrg -\u003e qrg : getQrCodePath(p)","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"activate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"qrg --\u003e qrg : path to QR code for that person","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"deactivate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"qrg -\u003e] : generate QR code and write to path","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"]--\u003e qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"qrg --\u003e Person","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"deactivate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"Person --\u003e Model","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"deactivate Person","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"Model --\u003e[","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"deactivate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"dillontkh":46}},{"path":"docs/diagrams/SpecialisedErrorMessagesDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"@startuml","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"skin rose","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"start","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":":User sends an \u0027add\u0027 command;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":":AddCommandParser parses the String argument;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"if () then ([Empty parameters])","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    :Throw CommandException \\n (No Parameters Specified!);","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    stop","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"else ([Non-empty parameters])","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"    if () then ([Invalid parameters])","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"        :Throw CommandException \\n (Invalid command format!);","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"        stop","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"    else ([Valid parameters])","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"        if () then ([Insufficient parameters])","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"            if () then ([Only phone parameter supplied])","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"                :Throw CommandException \\n (Name parameter missing!);","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"                stop","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"            else ([Only name parameter supplied])","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"                :Throw CommandException \\n (Phone parameter missing!);","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"                stop","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"            endif","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"        else ([Sufficient parameters])","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"            :Client is added to FitBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"            stop","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"        endif","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"    endif","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"endif","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"@enduml","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"bgopi23":30}},{"path":"docs/diagrams/WeightCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"@startuml","lastModifiedDate":"2024-04-09"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"skin rose","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"start","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":":WeightCommandParser parses arguments;","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":":Parse index;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"if () then ([Valid Index])","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    :Parse weight;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"else ([Invalid index])","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    :Display invalid index error;","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    stop","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"endif","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"if () then ([Valid weight])","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    :Create WeightCommand instance with supplied index and weight;","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    :Execute WeightCommand instance;","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"if () then ([Weight \u003d\u003d 0])","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"else ([Weight value \u003e 0])","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    :Add a new weight to client;","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    :Display success message;","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    stop","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"endif","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"if () then ([No weight value to delete])","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    :Display no weight to delete error;","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    stop","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"else ([Client has weight to delete])","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    :Delete client\u0027s latest weight value;","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    :Display success message;","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    stop","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"endif","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"else ([Invalid weight])","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    :Display invalid weight error;","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    stop","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"endif","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"@enduml","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"ruijietay":41}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"title: FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T17-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-T17-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T17-3/tp/graph/badge.svg?token\u003dVBA5T73I01)](https://codecov.io/gh/AY2324S2-CS2103T-T17-3/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"**FitBook is a desktop application for managing your clients\u0027 details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"* If you are interested in using FitBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"* If you are interested about developing FitBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [ZXing](https://github.com/zxing/zxing)","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"bgopi23":1,"ruijietay":3,"-":12,"dillontkh":3}},{"path":"src/main/java/seedu/address/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        return this.configPath;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        return Objects.equals(this.configPath, otherAppParameters.configPath);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        return this.configPath.hashCode();","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"                .add(\"configPath\", this.configPath)","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"ruijietay":4,"-":69}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        this.config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        initLogging(this.config);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(this.config.getUserPrefsFilePath());","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        this.storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        this.model \u003d initModelManager(this.storage, userPrefs);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        this.logic \u003d new LogicManager(this.model, this.storage);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        this.ui \u003d new UiManager(this.logic);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"ruijietay"},"content":"        this.ui.start(primaryStage);","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"            this.storage.saveUserPrefs(this.model.getUserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":9,"-":176,"dillontkh":1}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        return this.logLevel;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        return this.userPrefsFilePath;","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        return Objects.equals(this.logLevel, otherConfig.logLevel)","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 Objects.equals(this.userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        return Objects.hash(this.logLevel, this.userPrefsFilePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"                .add(\"logLevel\", this.logLevel)","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"                .add(\"userPrefsFilePath\", this.userPrefsFilePath)","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":7,"-":59}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        this.windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        this.windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        this.windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        return this.windowWidth;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        return this.windowHeight;","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        return this.windowCoordinates !\u003d null ? new Point(this.windowCoordinates) : null;","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        return this.windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 Objects.equals(this.windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        return Objects.hash(this.windowWidth, this.windowHeight, this.windowCoordinates);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"                .add(\"windowWidth\", this.windowWidth)","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"                .add(\"windowHeight\", this.windowHeight)","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"                .add(\"windowCoordinates\", this.windowCoordinates)","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":14,"jjchee77":2,"-":66}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        return this.major;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        return this.minor;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        return this.patch;","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        return this.isEarlyAccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        return String.format(\"V%d.%d.%d%s\", this.major, this.minor, this.patch, this.isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        if (this.major !\u003d other.major) {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"            return this.major - other.major;","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        if (this.minor !\u003d other.minor) {","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"            return this.minor - other.minor;","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        if (this.patch !\u003d other.patch) {","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"            return this.patch - other.patch;","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        if (this.isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        if (this.isEarlyAccess) {","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        return this.major \u003d\u003d otherVersion.major","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", this.major, this.minor, this.patch);","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"        if (!this.isEarlyAccess) {","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":19,"-":102}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        return this.zeroBasedIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        return this.zeroBasedIndex + 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        return this.zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", this.zeroBasedIndex).toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ruijietay":4,"-":65}},{"path":"src/main/java/seedu/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Determines the operating system","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public static enum OS {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        WIN,","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        MAC,","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"        LINUX;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"         * Determines if the operating system is Windows","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"         *","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"         * @return True if operating system is Windows, False otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        public static boolean isWindows() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"            return System.getProperty(\"os.name\").trim().toLowerCase().contains(WIN.toString().toLowerCase());","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"         * Determines if the operating system is MacOS","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"         *","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"         * @return True if operating system is MacOS, False otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        public static boolean isMac() {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"            return System.getProperty(\"os.name\").trim().toLowerCase().contains(MAC.toString().toLowerCase());","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"         * Determines if the operating system is Linux","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"         *","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"         * @return True if operating system is Linux, False otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        public static boolean isLinux() {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"            return System.getProperty(\"os.name\").trim().toLowerCase().contains(LINUX.toString().toLowerCase());","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * methods.","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * methods.","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     *                                  {@code condition} is false.","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RyanNgWH":41,"-":39}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":" * Utility class for date and time related operations.","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yy\");","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"dillontkh":10}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"     * Checks if {@code s} represents an integer.","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"     * @return True if {@code s} represents an integer, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"            Integer i \u003d Integer.valueOf(s);","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"        return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jjchee77":18,"-":68}},{"path":"src/main/java/seedu/address/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2019-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"        this.stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        if (this.hasField) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"            this.stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        this.stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        this.hasField \u003d true;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        return this.stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"ruijietay":6,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        this.addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        this.logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        Command command \u003d this.addressBookParser.parseCommand(commandText);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        commandResult \u003d command.execute(this.model);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"            this.storage.saveAddressBook(this.model.getAddressBook());","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        return this.model.getAddressBook();","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        return this.model.getFilteredPersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        return this.model.getAddressBookFilePath();","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        return this.model.getGuiSettings();","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        this.model.setGuiSettings(guiSettings);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ruijietay":10,"-":78}},{"path":"src/main/java/seedu/address/logic/QrCodeGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.BarcodeFormat;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.EncodeHintType;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.WriterException;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.client.j2se.MatrixToImageWriter;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.common.BitMatrix;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.qrcode.QRCodeWriter;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":" * Class to generate QR Codes","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"public class QrCodeGenerator {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"     * The folder where QR codes are stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"    public static final Path QR_CODE_FOLDER \u003d Paths.get(\"data\", \"qrcodes\");","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"     * The width of the QR code.","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"    private static final int QR_CODE_WIDTH \u003d 200;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"     * The height of the QR code.","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"    private static final int QR_CODE_HEIGHT \u003d 200;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"     * Generates a QR code based on the provided person information and saves it to the specified file path","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"     * @param person the person object containing the information to encode in the QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"     * @throws WriterException if an error occurs during the encoding process","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"     * @throws IOException     if an error occurs while writing the QR code image to the file","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"    public static void generateQrCode(Person person) throws WriterException, IOException {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"        // As we generate a QR code from a person object, the person object must not be null","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"        assert (person !\u003d null);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"        String vCard \u003d createVCardString(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"        Map\u003cEncodeHintType, Object\u003e hints \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"        hints.put(EncodeHintType.CHARACTER_SET, \"UTF-8\");","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"        hints.put(EncodeHintType.MARGIN, 1); // Set the margin to avoid cutting off","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"dillontkh"},"content":"        hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"        QRCodeWriter qrCodeWriter \u003d new QRCodeWriter();","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"        BitMatrix bitMatrix \u003d qrCodeWriter.encode(vCard, BarcodeFormat.QR_CODE, QR_CODE_WIDTH, QR_CODE_HEIGHT, hints);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"        Path path \u003d getQrCodePath(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"        Files.createDirectories(path.getParent()); // Create necessary folders along the path if they do not exist","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"        MatrixToImageWriter.writeToPath(bitMatrix, \"PNG\", path);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"     * Creates a VCard string for the given {@code Person}","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"     * @param person the person for whom the VCard string is created","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"dillontkh"},"content":"     * @return the VCard string","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"    private static String createVCardString(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"dillontkh"},"content":"        return \"BEGIN:VCARD\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"dillontkh"},"content":"                + \"VERSION:4.0\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"dillontkh"},"content":"                + \"FN:\" + person.getName() + \"\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"dillontkh"},"content":"                + \"TEL;TYPE\u003dCELL:\" + person.getPhone() + \"\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"dillontkh"},"content":"                + \"EMAIL:\" + person.getEmail() + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"                + \"ADR;TYPE\u003dHOME:;;\" + person.getAddress() + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"                + \"NOTE:\" + person.getNote() + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"                + \"END:VCARD\";","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"dillontkh"},"content":"     * Generates the file path for the QR code of a specific person","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"dillontkh"},"content":"     * @param person the person for whom the QR code path is generated","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"     * @return the file path for the QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"    public static Path getQrCodePath(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"        return Paths.get(QR_CODE_FOLDER.toString(), person.hashCode() + \".png\");","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"dillontkh":89}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_SUCCESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_PHONE_WARN;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":" * Adds a person to FitBook.","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"     * Constructs an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"     * @param person object to add","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        this.toAdd \u003d person;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * Gets the warning message for the command\u0027s execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * @return The warning message, or an empty string if none.","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    private String getMessageWarn() {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        boolean isPhoneOfExpectedFormat \u003d this.toAdd.getPhone().isExpectedFormat();","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        if (!isPhoneOfExpectedFormat) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"            return MESSAGE_PHONE_WARN;","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        return \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        if (model.hasPerson(this.toAdd)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        model.addPerson(this.toAdd);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"        String messageSuccess \u003d String.format(MESSAGE_SUCCESS, this.toAdd.getFormattedMessage());","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        String messageWarn \u003d this.getMessageWarn();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        String messageResult \u003d String.format(\"%s%s\", messageSuccess, messageWarn);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        return new CommandResult(messageResult);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        return this.toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"                .add(\"toAdd\", this.toAdd)","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":9,"ruijietay":6,"jjchee77":16,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ClearCommandMessages.MESSAGE_CONFIRM;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ClearCommandMessages.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"    private final boolean confirmed;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"     * Constructs a ClearCommand object to clear the person list.","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"     * @param confirmed confirmation that the user wants to clear the list","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"    public ClearCommand(boolean confirmed) {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"        this.confirmed \u003d confirmed;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        if (!this.confirmed) {","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"            return new CommandResult(MESSAGE_CONFIRM);","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"bgopi23":7,"ruijietay":1,"-":22,"dillontkh":7}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"     * @param feedbackToUser string of user feedback","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"     * @param showHelp shows help information","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"     * @param exit whether the application should exit","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"     * @param feedbackToUser string of user feedback","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        return this.feedbackToUser;","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        return this.showHelp;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        return this.exit;","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        return this.feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        return Objects.hash(this.feedbackToUser, this.showHelp, this.exit);","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"                .add(\"feedbackToUser\", this.feedbackToUser)","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"                .add(\"showHelp\", this.showHelp)","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"                .add(\"exit\", this.exit)","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":6,"ruijietay":10,"-":72}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.DeleteCommandMessages.MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.DeleteCommandMessages.MESSAGE_INVALID_INDEX_DELETE;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"     * Creates a DeleteCommand object with the index of","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"     * the person we want to delete as specified by the person list","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"     * @param targetIndex the index of the person to delete","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"        int listIndex \u003d this.targetIndex.getZeroBased();","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        if (listIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_DELETE);","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        Person personToDelete \u003d lastShownList.get(listIndex);","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"                personToDelete.getFormattedMessage()));","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        return this.targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"                .add(\"targetIndex\", this.targetIndex)","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":14,"ruijietay":2,"-":52,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_INVALID_INDEX_EDIT;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_PHONE_WARN;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.WeightMessages.MESSAGE_EMPTY_WEIGHT_MAP;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"     * Constructs an EditCommand object with the","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"     * index of the person, and information to edit","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"            throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        // Get the weight map of the person we are editing.","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        NavigableMap\u003cLocalDateTime, Weight\u003e toEditWeightMap \u003d new TreeMap\u003c\u003e(personToEdit.getWeights());","lastModifiedDate":"2024-04-09"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        // We only modify the weight map if user has specified the weight prefix.","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        if (editPersonDescriptor.getWeight().isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"            Weight updatedWeight \u003d editPersonDescriptor.getWeight().get();","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"            // If there are no more weight values to be removed","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"            if (updatedWeight.isZero() \u0026\u0026 toEditWeightMap.isEmpty()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"                throw new CommandException(MESSAGE_EMPTY_WEIGHT_MAP);","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"            toEditWeightMap.pollLastEntry();","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bgopi23"},"content":"            if (!updatedWeight.isZero()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"                toEditWeightMap.put(WeightEntry.getTimeOfExecution(), updatedWeight);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"        Height updatedHeight \u003d editPersonDescriptor.getHeight().orElse(personToEdit.getHeight());","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"        // Modification of exercises cannot be performed as part of the edit command","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"        ExerciseSet exerciseSet \u003d personToEdit.getExerciseSet();","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"                toEditWeightMap, updatedHeight, updatedNote, updatedTags, exerciseSet);","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"     * Gets the warning message for the command\u0027s execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"jjchee77"},"content":"     * @return The warning message, or an empty string if none.","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"jjchee77"},"content":"    private String getMessageWarn(Person editedPerson) {","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"        boolean isPhoneOfExpectedFormat \u003d editedPerson.getPhone().isExpectedFormat();","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"        if (!isPhoneOfExpectedFormat) {","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"bgopi23"},"content":"            return MESSAGE_PHONE_WARN;","lastModifiedDate":"2024-04-11"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"        return \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"bgopi23"},"content":"        int listIndex \u003d this.index.getZeroBased();","lastModifiedDate":"2024-04-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"bgopi23"},"content":"        if (listIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":131,"author":{"gitId":"bgopi23"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_EDIT);","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"bgopi23"},"content":"        Person personToEdit \u003d lastShownList.get(listIndex);","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, this.editPersonDescriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"        String messageSuccess \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"        String messageWarn \u003d this.getMessageWarn(editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"        String messageResult \u003d String.format(\"%s%s\", messageSuccess, messageWarn);","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"        return new CommandResult(messageResult);","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"        return this.index.equals(otherEditCommand.index)","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"ruijietay"},"content":"                .add(\"index\", this.index)","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"                .add(\"editPersonDescriptor\", this.editPersonDescriptor)","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"     * replace the corresponding field value of the person.","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"        private Weight weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":187,"author":{"gitId":"ruijietay"},"content":"        private Height height;","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"        private Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":203,"author":{"gitId":"ruijietay"},"content":"            setWeight(toCopy.weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"ruijietay"},"content":"            setHeight(toCopy.height);","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"ruijietay"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2024-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"ruijietay"},"content":"            return CollectionUtil.isAnyNonNull(this.name, this.phone, this.email,","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"ruijietay"},"content":"                    this.address, this.weight, this.height, this.note, this.tags);","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.name);","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.phone);","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.email);","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.address);","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-03-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":249,"author":{"gitId":"ruijietay"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2024-03-13"},{"lineNumber":250,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.note);","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":253,"author":{"gitId":"ruijietay"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":254,"author":{"gitId":"ruijietay"},"content":"            this.note \u003d note;","lastModifiedDate":"2024-03-13"},{"lineNumber":255,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":256,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"ruijietay"},"content":"        public Optional\u003cWeight\u003e getWeight() {","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"ruijietay"},"content":"        public void setWeight(Weight weight) {","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"ruijietay"},"content":"            this.weight \u003d weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"ruijietay"},"content":"        public Optional\u003cHeight\u003e getHeight() {","lastModifiedDate":"2024-03-30"},{"lineNumber":266,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.height);","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":268,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"ruijietay"},"content":"        public void setHeight(Height height) {","lastModifiedDate":"2024-03-30"},{"lineNumber":270,"author":{"gitId":"ruijietay"},"content":"            this.height \u003d height;","lastModifiedDate":"2024-03-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":274,"author":{"gitId":"RyanNgWH"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2024-03-16"},{"lineNumber":275,"author":{"gitId":"RyanNgWH"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":280,"author":{"gitId":"ruijietay"},"content":"            return (this.tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(this.tags)) : Optional.empty();","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"dillontkh"},"content":"        /**","lastModifiedDate":"2024-03-24"},{"lineNumber":284,"author":{"gitId":"dillontkh"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-24"},{"lineNumber":285,"author":{"gitId":"dillontkh"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-24"},{"lineNumber":286,"author":{"gitId":"dillontkh"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"dillontkh"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-24"},{"lineNumber":288,"author":{"gitId":"dillontkh"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":303,"author":{"gitId":"ruijietay"},"content":"            return Objects.equals(this.name, otherEditPersonDescriptor.name)","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(this.phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(this.email, otherEditPersonDescriptor.email)","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(this.address, otherEditPersonDescriptor.address)","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(this.weight, otherEditPersonDescriptor.weight)","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(this.height, otherEditPersonDescriptor.height)","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(this.note, otherEditPersonDescriptor.note)","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(this.tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2024-04-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":316,"author":{"gitId":"ruijietay"},"content":"                    .add(\"name\", this.name)","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"ruijietay"},"content":"                    .add(\"phone\", this.phone)","lastModifiedDate":"2024-04-04"},{"lineNumber":318,"author":{"gitId":"ruijietay"},"content":"                    .add(\"email\", this.email)","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"ruijietay"},"content":"                    .add(\"address\", this.address)","lastModifiedDate":"2024-04-04"},{"lineNumber":320,"author":{"gitId":"ruijietay"},"content":"                    .add(\"weight\", this.weight)","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"ruijietay"},"content":"                    .add(\"height\", this.height)","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"ruijietay"},"content":"                    .add(\"note\", this.note)","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"ruijietay"},"content":"                    .add(\"tags\", this.tags)","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"RyanNgWH":6,"bgopi23":17,"ruijietay":81,"jjchee77":33,"-":184,"dillontkh":6}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ExitCommandMessages.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"        assert(model !\u003d null);","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bgopi23":3,"-":15}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_NO_CLIENTS_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_ONE_CLIENT_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FindCommandMessages.VALIDATION_REGEX_RANGE;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * Finds and lists all persons in address book whose name contains any of the","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" * argument keywords.","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    private final CombinedPredicates predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"     * Constructs a FindCommand object with the predicates we want","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"     * to use in the search","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"     * @param predicates the search information","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"    public FindCommand(CombinedPredicates predicates) {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public static boolean isValidRange(String test) {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"        return test.matches(VALIDATION_REGEX_RANGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        model.updateFilteredPersonList(this.predicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        int listSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            return new CommandResult(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"            return new CommandResult(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"                String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, listSize));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        return this.predicates.equals(otherFindCommand.predicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                .add(\"predicates\", this.predicates)","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"RyanNgWH":6,"bgopi23":16,"ruijietay":14,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/FitAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_ADD_EXERCISE_SUCCESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_INVALID_INDEX_FITADD;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseToAdd;","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":" * Adds a new exercise or overwrites an existing exercise of a person in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"public class FitAddCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    public static final Set\u003cExerciseToAdd\u003e DEFAULT_ARM_EXERCISES \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"bicep curls\", Optional.of(3), Optional.of(10), Optional.of(60)),","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"tricep dips\", Optional.of(3), Optional.of(12), Optional.of(60)),","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"push-ups\", Optional.of(3), Optional.of(15), Optional.of(90))","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    ));","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    public static final Set\u003cExerciseToAdd\u003e DEFAULT_LEG_EXERCISES \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"squats\", Optional.of(4), Optional.of(15), Optional.of(90)),","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"lunges\", Optional.of(3), Optional.of(12), Optional.of(60)),","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"calf raises\", Optional.of(3), Optional.of(20), Optional.of(60))","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    ));","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    public static final Set\u003cExerciseToAdd\u003e DEFAULT_CHEST_EXERCISES \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"bench press\", Optional.of(4), Optional.of(8), Optional.of(120)),","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"push-ups\", Optional.of(3), Optional.of(15), Optional.of(90)),","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"chest fly\", Optional.of(3), Optional.of(10), Optional.of(90))","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    ));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    public static final Set\u003cExerciseToAdd\u003e DEFAULT_BACK_EXERCISES \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"pull-ups\", Optional.of(3), Optional.of(8), Optional.of(120)),","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"bent-over rows\", Optional.of(3), Optional.of(10), Optional.of(90)),","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"lat pull-downs\", Optional.of(3), Optional.of(12), Optional.of(60))","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    ));","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    public static final Set\u003cExerciseToAdd\u003e DEFAULT_SHOULDER_EXERCISES \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"shoulder press\", Optional.of(3), Optional.of(10), Optional.of(90)),","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"lateral raises\", Optional.of(3), Optional.of(12), Optional.of(60)),","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"front raises\", Optional.of(3), Optional.of(10), Optional.of(60))","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"    ));","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    public static final Set\u003cExerciseToAdd\u003e DEFAULT_ABS_EXERCISES \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"crunches\", Optional.of(3), Optional.of(20), Optional.of(60)),","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"plank\", Optional.of(3), Optional.of(60), Optional.of(90)),","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        new ExerciseToAdd(\"russian twists\", Optional.of(3), Optional.of(15), Optional.of(60))","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"    ));","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    private final Index index;","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"    private final Set\u003cExerciseToAdd\u003e exercisesToAdd;","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new FitAddCommand instance.","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"     * @param index The index of the person in the filtered person list to add the exercise to","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"     * @param exercisesToAdd The set of exercises to be added to the person","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    public FitAddCommand(Index index, Set\u003cExerciseToAdd\u003e exercisesToAdd) {","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(exercisesToAdd);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"        this.exercisesToAdd \u003d exercisesToAdd;","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"        int listIndex \u003d this.index.getZeroBased();","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"        if (listIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_FITADD);","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"bgopi23"},"content":"        Person personToEdit \u003d lastShownList.get(listIndex);","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e updatedExercises \u003d new HashSet\u003c\u003e(personToEdit.getExerciseSet().getValue());","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        for (ExerciseToAdd exerciseToAdd : this.exercisesToAdd) {","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"            Exercise newExercise \u003d getExercise(exerciseToAdd, updatedExercises);","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"            updatedExercises.remove(newExercise);","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"            updatedExercises.add(newExercise);","lastModifiedDate":"2024-04-11"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        ExerciseSet updatedExerciseSet \u003d new ExerciseSet(updatedExercises);","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(), updatedExerciseSet);","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"        return new CommandResult(MESSAGE_ADD_EXERCISE_SUCCESS);","lastModifiedDate":"2024-04-05"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"    private static Exercise getExercise(ExerciseToAdd exerciseToAdd, Set\u003cExercise\u003e updatedExercises) {","lastModifiedDate":"2024-04-11"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"        String name \u003d exerciseToAdd.getName();","lastModifiedDate":"2024-04-11"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"        Integer sets \u003d exerciseToAdd.getSets().orElse(Exercise.DEFAULT_SETS);","lastModifiedDate":"2024-04-11"},{"lineNumber":112,"author":{"gitId":"jjchee77"},"content":"        Integer reps \u003d exerciseToAdd.getReps().orElse(Exercise.DEFAULT_REPS);","lastModifiedDate":"2024-04-11"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"        Integer breakBetweenSets \u003d exerciseToAdd.getBreakBetweenSets().orElse(Exercise.DEFAULT_BREAK);","lastModifiedDate":"2024-04-11"},{"lineNumber":114,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"        Exercise newExercise \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"            new Exercise(name, sets, reps, breakBetweenSets);","lastModifiedDate":"2024-04-11"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"        if (updatedExercises.contains(newExercise)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"            for (Exercise existingExercise : updatedExercises) {","lastModifiedDate":"2024-04-11"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"                if (existingExercise.equals(newExercise)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"                    String newName \u003d exerciseToAdd.getName();","lastModifiedDate":"2024-04-11"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"                    Integer newSets \u003d exerciseToAdd.getSets().orElse(existingExercise.getSets());","lastModifiedDate":"2024-04-11"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"                    Integer newReps \u003d exerciseToAdd.getReps().orElse(existingExercise.getReps());","lastModifiedDate":"2024-04-11"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"                    Integer newBreakBetweenSets \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"                        exerciseToAdd.getBreakBetweenSets().orElse(existingExercise.getBreakBetweenSets());","lastModifiedDate":"2024-04-11"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":127,"author":{"gitId":"jjchee77"},"content":"                    newExercise \u003d new Exercise(newName, newSets, newReps, newBreakBetweenSets);","lastModifiedDate":"2024-04-11"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"                }","lastModifiedDate":"2024-04-11"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"        return newExercise;","lastModifiedDate":"2024-04-11"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"jjchee77"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"jjchee77"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"        if (!(other instanceof FitAddCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand otherFitAddCommand \u003d (FitAddCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"        return this.index.equals(otherFitAddCommand.index)","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"            \u0026\u0026 this.exercisesToAdd.equals(otherFitAddCommand.exercisesToAdd);","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bgopi23":7,"ruijietay":2,"jjchee77":139}},{"path":"src/main/java/seedu/address/logic/commands/FitDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_DELETE_ALL_EXERCISES_FAILURE;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_DELETE_ALL_EXERCISES_SUCCESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_DELETE_EXERCISE_SUCCESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_EXERCISE_NAME_DOES_NOT_EXIST;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_INVALID_INDEX_FITDELETE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":" * Deletes an exercise from a person in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"public class FitDeleteCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    private final Index index;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    private final Optional\u003cString\u003e exerciseName;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    private final boolean deleteAll;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new FitDeleteCommand instance.","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * @param index The index of the person in the filtered person list to delete the exercise from","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     * @param exerciseName The optional exercise name to be deleted from the person","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     * @param deleteAll The boolean indicating whether all exercises should be deleted from the person","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    public FitDeleteCommand(Index index, Optional\u003cString\u003e exerciseName, boolean deleteAll) {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(exerciseName);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        this.deleteAll \u003d deleteAll;","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        int listIndex \u003d this.index.getZeroBased();","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"        if (listIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_FITDELETE);","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        Person personToEdit \u003d lastShownList.get(listIndex);","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        Person editedPerson \u003d getEditedPerson(personToEdit);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"            String.format(this.deleteAll","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"                ? MESSAGE_DELETE_ALL_EXERCISES_SUCCESS","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"                : String.format(MESSAGE_DELETE_EXERCISE_SUCCESS, this.exerciseName.orElse(\"\"))));","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"    private Person getEditedPerson(Person personToEdit) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        ExerciseSet updatedExerciseSet \u003d new ExerciseSet(new HashSet\u003c\u003e());","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        if (this.deleteAll) {","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"            Set\u003cExercise\u003e updatedExercises \u003d new HashSet\u003c\u003e(personToEdit.getExerciseSet().getValue());","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"            if (updatedExercises.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"                throw new CommandException(MESSAGE_DELETE_ALL_EXERCISES_FAILURE);","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"            Exercise exerciseToDelete \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"                new Exercise(this.exerciseName.orElse(\"\"), Exercise.DEFAULT_SETS, Exercise.DEFAULT_REPS,","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"                    Exercise.DEFAULT_BREAK);","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"            Set\u003cExercise\u003e updatedExercises \u003d new HashSet\u003c\u003e(personToEdit.getExerciseSet().getValue());","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"            if (!updatedExercises.contains(exerciseToDelete)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"                throw new CommandException(String.format(MESSAGE_EXERCISE_NAME_DOES_NOT_EXIST,","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"                    exerciseToDelete.getName()));","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"            updatedExercises.remove(exerciseToDelete);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"            updatedExerciseSet \u003d new ExerciseSet(updatedExercises);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        return new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(), updatedExerciseSet);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"        if (!(other instanceof FitDeleteCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand otherFitDeleteCommand \u003d (FitDeleteCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        return this.index.equals(otherFitDeleteCommand.index)","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"            \u0026\u0026 this.exerciseName.equals(otherFitDeleteCommand.exerciseName)","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"            \u0026\u0026 this.deleteAll \u003d\u003d otherFitDeleteCommand.deleteAll;","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bgopi23":14,"ruijietay":5,"jjchee77":92}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.HelpCommandMessages.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":2,"-":14}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ListCommandMessages.MESSAGE_ALL_CLIENTS_LISTED;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ListCommandMessages.MESSAGE_NO_CLIENTS_TO_LIST;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ListCommandMessages.MESSAGE_ONE_CLIENT_LISTED;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"        int listSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"            return new CommandResult(MESSAGE_NO_CLIENTS_TO_LIST);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"            return new CommandResult(MESSAGE_ONE_CLIENT_LISTED);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"        return new CommandResult(String.format(MESSAGE_ALL_CLIENTS_LISTED, listSize));","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":14,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_ADD_NOTE_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_INVALID_INDEX_NOTE;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.List;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":" * Changes the note of an existing person in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    private final Index index;","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    private final Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"     * Constructs a NoteCommand object with the person index and note description","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"     * @param note  of the person to be updated to","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    public NoteCommand(Index index, Note note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        //@@author bgopi23","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"        assert (model !\u003d null);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        //@@author","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        int listIndex \u003d this.index.getZeroBased();","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        if (listIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_NOTE);","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        Person personToEdit \u003d lastShownList.get(listIndex);","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getAddress(), personToEdit.getWeights(),","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"                personToEdit.getHeight(), this.note, personToEdit.getTags(), personToEdit.getExerciseSet());","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"     * the note is added to or removed from","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        String message \u003d !this.note.getValue().isEmpty() ? MESSAGE_ADD_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"dillontkh"},"content":"        return String.format(message, personToEdit.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        NoteCommand e \u003d (NoteCommand) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        return this.index.equals(e.index) \u0026\u0026 this.note.equals(e.note);","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"     * Returns the index of the object.","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"    public Index getIndex() {","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        return this.index;","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"bgopi23":12,"ruijietay":73,"jjchee77":1,"dillontkh":8}},{"path":"src/main/java/seedu/address/logic/commands/NoteEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.COMMAND_WORD;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_EDIT_FEEDBACK_TO_USER;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_INVALID_INDEX_NOTE;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":" * An extension of the Note command which allows the user to modify an existing note.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"public class NoteEditCommand extends NoteCommand {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"     * Constructs a NoteEdictCommand object with the index of the person","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"     * to edit","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"    public NoteEditCommand(Index index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"        super(index, new Note(\"\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"     * Populates the command box with the proper command syntax to edit the note for the person at the specified index.","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"        assert (model !\u003d null);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"        MainWindow mainWindow \u003d MainWindow.getInstance();","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"        int zeroBasedIndex \u003d super.getIndex().getZeroBased();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"        int oneBasedIndex \u003d super.getIndex().getOneBased();","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"        if (zeroBasedIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_NOTE);","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"        Person personToEdit \u003d lastShownList.get(zeroBasedIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"        String noteToEdit \u003d personToEdit.getNote().toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"        mainWindow.setCommandBoxText(COMMAND_WORD + \" \" + oneBasedIndex + \" \" + noteToEdit);","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"dillontkh"},"content":"        mainWindow.moveCommandBoxCursorToEnd();","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"        return new CommandResult(MESSAGE_EDIT_FEEDBACK_TO_USER + oneBasedIndex);","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"bgopi23":10,"dillontkh":46}},{"path":"src/main/java/seedu/address/logic/commands/WeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_ADD_WEIGHT_SUCCESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_DELETE_WEIGHT_SUCCESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_INDEX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.WeightMessages.MESSAGE_EMPTY_WEIGHT_MAP;","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":" * Changes the weight of an existing person in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"public class WeightCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    private final Index index;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    private final WeightEntry weightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    private LocalDateTime timeOfExecution \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"     * Constructs a WeightCommand object with a person list index and weight","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"     * @param index of the person in the filtered person list to edit the weight","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"     * @param weight of the person to be updated to","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    public WeightCommand(Index index, WeightEntry weight) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        requireAllNonNull(index, weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        this.weightEntry \u003d weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        int listIndex \u003d this.index.getZeroBased();","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"        if (listIndex \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"        Person personToEdit \u003d lastShownList.get(listIndex);","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        NavigableMap\u003cLocalDateTime, Weight\u003e toEditWeightMap \u003d new TreeMap\u003c\u003e(personToEdit.getWeights());","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"        Weight weight \u003d this.weightEntry.getValue().getValue();","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        if (weight.isZero()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"            if (toEditWeightMap.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"                throw new CommandException(MESSAGE_EMPTY_WEIGHT_MAP);","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"            toEditWeightMap.pollLastEntry();","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"            // If user created this instance without specifying time of execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"            if (this.timeOfExecution \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"                toEditWeightMap.put(WeightEntry.getTimeOfExecution(), this.weightEntry.getValue().getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"                toEditWeightMap.put(this.timeOfExecution, this.weightEntry.getValue().getValue());","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getAddress(), toEditWeightMap, personToEdit.getHeight(),","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"                personToEdit.getNote(), personToEdit.getTags(), personToEdit.getExerciseSet());","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"     * the weight is added to or removed from","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"bgopi23"},"content":"        String message \u003d !(this.weightEntry.getValue().getValue().isZero())","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"bgopi23"},"content":"                ? MESSAGE_ADD_WEIGHT_SUCCESS","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"                : MESSAGE_DELETE_WEIGHT_SUCCESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        return String.format(message, personToEdit.getFormattedMessage());","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof WeightCommand)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        WeightCommand e \u003d (WeightCommand) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        return this.index.equals(e.index)","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.weightEntry.equals(e.weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"bgopi23":14,"ruijietay":93,"jjchee77":1}},{"path":"src/main/java/seedu/address/logic/messages/AddCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Messages used by AddCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class AddCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to FitBook. \\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_EMAIL + \"john@gmail.com \"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_ADDRESS + \"Clementi Ave 2 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_NOTE + \"BFF \"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_TAG + \"friend \";","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"    public static final String MESSAGE_CLIENT_ADDED \u003d \"Client successfully added!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"    public static final String MESSAGE_SUCCESS \u003d MESSAGE_CLIENT_ADDED + MESSAGE_RESULT_DIVIDER;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_PARAMETERS_ADD \u003d String.format(MESSAGE_NO_PARAMETERS,","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NAME_PARAMETER_MISSING_ADD \u003d String.format(MESSAGE_NAME_PARAMETER_MISSING,","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_PHONE_PARAMETER_MISSING_ADD \u003d String.format(MESSAGE_PHONE_PARAMETER_MISSING,","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_ADD \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":11,"ruijietay":34,"dillontkh":2}},{"path":"src/main/java/seedu/address/logic/messages/AddressBookParserMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by AddressBookParser and associated classes","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class AddressBookParserMessages extends Messages {","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_PARSE_EXCEPTION \u003d \"This user input caused a ParseException: \";","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"bgopi23":8}},{"path":"src/main/java/seedu/address/logic/messages/ClearCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ClearCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class ClearCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"FitBook has been cleared!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONFIRM \u003d \"Are you sure you want to clear ALL clients from FitBook? Enter \"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \"\u0027clear /confirm\u0027 to confirm.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":12}},{"path":"src/main/java/seedu/address/logic/messages/DeleteCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by DeleteCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class DeleteCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \": Deletes the client identified by their corresponding list index.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"            \"Successfully deleted client!\"","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"            + MESSAGE_RESULT_DIVIDER;","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_INDEX_DELETE \u003d String.format(MESSAGE_NO_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX_DELETE \u003d String.format(MESSAGE_INVALID_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":19}},{"path":"src/main/java/seedu/address/logic/messages/EditCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Messages used by EditCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class EditCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits a client\u0027s details specified \"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            + \"by the corresponding index in the client list.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_EMAIL + \"john@gmail.com\";","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Successfully edited client!\" + MESSAGE_RESULT_DIVIDER;","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d String.format(\"At least one field to edit must be provided.\\n%1$s\",","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX_EDIT \u003d String.format(MESSAGE_INVALID_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_EDIT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_INDEX_EDIT \u003d String.format(MESSAGE_NO_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":8,"ruijietay":34}},{"path":"src/main/java/seedu/address/logic/messages/ExitCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ExitCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class ExitCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting FitBook. Goodbye!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":10}},{"path":"src/main/java/seedu/address/logic/messages/FindCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Messages used by FindCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class FindCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            + \": Lists all clients whose specified attribute contains the specified keyword.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_EMAIL + \"lewis@hotmail.com\";","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NO_CLIENTS_FOUND \u003d \"No clients found!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_ONE_CLIENT_FOUND \u003d \"1 client found!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_PERSONS_FOUND_OVERVIEW \u003d \"%1$d clients found!\";","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"    public static final String VALIDATION_REGEX_RANGE \u003d \"^\\\\d+(\\\\.\\\\d+)?,\\\\s*\\\\d+(\\\\.\\\\d+)?$\";","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE_RANGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            + \": Finds using a specified range that is comma-delimited.\"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            + \" FROM parameter must be less than or equal to TO parameter.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: FROM, TO (both of them must be a positive number greater than or equals to 0).\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" w/70, 80\";","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_FIND \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-09"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":11,"ruijietay":32}},{"path":"src/main/java/seedu/address/logic/messages/FitAddCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ABS;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ALL;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ARM;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_BACK;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_BREAK_BETWEEN_SETS;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_CHEST;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_LEG;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_NAME;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_REPS;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_SETS;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_SHOULDER;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":" * Messages used by FitAddCommand and associated classes.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"public class FitAddCommandMessages extends Messages {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public static final String COMMAND_WORD \u003d \"fitadd\";","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an exercise to the client identified \"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"        + \"by their corresponding index.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_NAME + \"EXERCISE_NAME] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_SETS + \"SETS] \"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_REPS + \"REPETITIONS] \"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_BREAK_BETWEEN_SETS + \"REST_TIME]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_ARM + \"] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_LEG + \"] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_CHEST + \"] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_BACK + \"] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_SHOULDER + \"] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_ABS + \"] \"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_ALL + \"]\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        + PREFIX_EXERCISE_NAME + \"squats \"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        + PREFIX_EXERCISE_SETS + \"3 \"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        + PREFIX_EXERCISE_REPS + \"10 \"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        + PREFIX_EXERCISE_BREAK_BETWEEN_SETS + \"1\";","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_NO_INDEX_FITADD \u003d String.format(MESSAGE_NO_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_EXERCISE_NAME_PARAMETER_AND_DEFAULT_PREFIXES_MISSING \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        String.format(\"Either exercise name parameter or default exercise prefix(es) must be supplied\\n%1$s\",","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_ADD_EXERCISE_NAME_CONFLICTING_PREFIXES \u003d","lastModifiedDate":"2024-04-09"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        String.format(\"Exercise name parameter cannot be supplied together with default exercise prefix(es)\\n%1$s\",","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_ADD_EXERCISE_VALUES_CONFLICTING_PREFIXES \u003d","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        String.format(\"Exercise value parameter(s) cannot be supplied together with default exercise prefix(es)\\n%1$s\",","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_ADD_EXERCISE_SUCCESS \u003d \"Successfully added exercise(s) for client\";","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_ADD_EXERCISE_CONFLICTING_PREFIXES \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"            String.format(\"Exercise name parameter cannot be supplied together with default exercise prefix(es)\\n%1$s\",","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"                    MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX_FITADD \u003d String.format(MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_FITADD \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bgopi23":5,"jjchee77":54}},{"path":"src/main/java/seedu/address/logic/messages/FitDeleteCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_NAME;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FITDELETE_DELETE_ALL;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * Messages used by FitDeleteCommand and associated classes.","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"public class FitDeleteCommandMessages extends Messages {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"    public static final String COMMAND_WORD \u003d \"fitdelete\";","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes exercise(s) from the client identified \"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"        + \"by their corresponding index.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_EXERCISE_NAME + \"EXERCISE_NAME]\"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"        + \" [\" + PREFIX_FITDELETE_DELETE_ALL + \"]\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"        + PREFIX_EXERCISE_NAME + \"squats \"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"        + \"[\" + PREFIX_FITDELETE_DELETE_ALL + \"] \";","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DELETE_ALL_EXERCISES_FAILURE \u003d \"Client does not have any existing exercises\";","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_EXERCISE_NAME_DOES_NOT_EXIST \u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"            \"Exercise name \u0027%s\u0027 does not exist for the client\";","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DELETE_EXERCISE_SUCCESS \u003d \"Successfully removed exercise \u0027%s\u0027 for client\";","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DELETE_ALL_EXERCISES_SUCCESS \u003d \"Successfully removed all exercise(s) for client\";","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_CONCURRENT_PREFIX \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        String.format(\"Exercise name parameter cannot be supplied together with \u0027/all\u0027 prefix\\n%1$s\",","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_EXERCISE_NAME_PARAMETER_AND_ALL_PREFIX_MISSING \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"        String.format(\"Either exercise name parameter or \u0027/all\u0027 prefix must be supplied\\n%1$s\",","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_INDEX_FITDELETE \u003d String.format(MESSAGE_NO_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX_FITDELETE \u003d String.format(MESSAGE_INVALID_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_FITDELETE \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-06"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-06"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bgopi23":11,"jjchee77":26}},{"path":"src/main/java/seedu/address/logic/messages/HelpCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by HelpCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class HelpCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"    public static final String INVALID_COMMAND_FORMAT_HELP \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":16}},{"path":"src/main/java/seedu/address/logic/messages/ListCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ListCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class ListCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_CLIENTS_TO_LIST \u003d \"No clients to list!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_ONE_CLIENT_LISTED \u003d \"1 client listed!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_ALL_CLIENTS_LISTED \u003d \"%1$d clients listed!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":12}},{"path":"src/main/java/seedu/address/logic/messages/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PhoneMessages.MESSAGE_EXPECTED;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command, please type \u0027help\u0027 for possible commands\";","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_INDEX \u003d \"No index specified! \\n%1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index provided. \\n%1$s\";","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NO_PARAMETERS \u003d \"No parameters specified! \\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NAME_PARAMETER_MISSING \u003d \"Name parameter missing! \\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_PHONE_PARAMETER_MISSING \u003d \"Phone number parameter missing! \\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_WARN \u003d \"\\n\\nWARNING: %s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"    public static final String MESSAGE_RESULT_DIVIDER \u003d \"\\n-------------------------------------------\\n%1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_PHONE_WARN \u003d String.format(MESSAGE_WARN, MESSAGE_EXPECTED);","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"                .append(person.getNote())","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":5,"ruijietay":6,"jjchee77":1,"-":48,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/messages/NoteCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ListCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class NoteCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \": Updates and overrides the note of the client identified \"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            + \"by their corresponding index.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"            + \"Likes to swim.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_EDIT_FEEDBACK_TO_USER \u003d \"Editing note for client: \";","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"    public static final String NOTE_EDIT_TAG \u003d \"/edit\";","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_ADD_NOTE_SUCCESS \u003d \"Successfully added note to client!\"","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"            + MESSAGE_RESULT_DIVIDER;","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Successfully removed note from client!\"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"            + MESSAGE_RESULT_DIVIDER;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX_NOTE \u003d String.format(MESSAGE_INVALID_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_INDEX_NOTE \u003d String.format(MESSAGE_NO_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":22,"dillontkh":2}},{"path":"src/main/java/seedu/address/logic/messages/WeightCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by WeightCommand and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"public class WeightCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"weight\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"            + \": Adds a weight (in kg) to the client specified by the index number used in the client list.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \"If no weight or \u00270\u0027 is specified, the latest weight value will be removed from the client.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            + \"Parameters: INDEX [WEIGHT] (must be a number between 0 and 5000)\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"            + \"70.0\";","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"    public static final String WEIGHT_VALUE_HEADER \u003d \"Weight: \";","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"    public static final String WEIGHT_DATE_HEADER \u003d \"Date Recorded: \";","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_ADD_WEIGHT_SUCCESS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"            \"Successfully added weight to client!\"","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"            + MESSAGE_RESULT_DIVIDER;","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_DELETE_WEIGHT_SUCCESS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"            \"Successfully removed weight from client!\"","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"            + MESSAGE_RESULT_DIVIDER;","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_PARAMETER_WEIGHT \u003d String.format(MESSAGE_INVALID_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NO_PARAMETER_WEIGHT \u003d String.format(MESSAGE_NO_PARAMETERS, MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX_WEIGHT \u003d String.format(MESSAGE_INVALID_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":13,"ruijietay":13}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_INVALID_COMMAND_FORMAT_ADD;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_NAME_PARAMETER_MISSING_ADD;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_NO_PARAMETERS_ADD;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_PHONE_PARAMETER_MISSING_ADD;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES_EXCEPT_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"     * @param args the string to be parsed","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"     * @return an AddCommand object with the user\u0027s that will be added to FitBook","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException if the user\u0027s input does not conform the expected format","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"     **/","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, ALL_PREFIXES);","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        // (add)","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_NO_PARAMETERS_ADD);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"        // (add dwelidjpojpd)","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        if (!argMultimap.isPreambleEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_ADD);","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        // (add p/99898888)","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        if (!argMultimap.contains(PREFIX_NAME)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_NAME_PARAMETER_MISSING_ADD);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        // (add n/John)","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        if (!argMultimap.contains(PREFIX_PHONE)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_PHONE_PARAMETER_MISSING_ADD);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        // (add n/John p/98988898...)","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(ALL_PREFIXES_EXCEPT_TAG);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getStringValue(PREFIX_NAME));","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getStringValue(PREFIX_PHONE));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL));","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        NavigableMap\u003cLocalDateTime, Weight\u003e weightMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"        if (!ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT)).isZero()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"            weightMap.put(WeightEntry.getTimeOfExecution(),","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT)));","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        Height height \u003d ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT));","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE));","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        ExerciseSet exercises \u003d new ExerciseSet(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        Person person \u003d new Person(name, phone, email, address, weightMap, height, note, tagList, exercises);","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bgopi23":10,"ruijietay":38,"jjchee77":15,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.AddressBookParserMessages.MESSAGE_PARSE_EXCEPTION;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.HelpCommandMessages.INVALID_COMMAND_FORMAT_HELP;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ClearCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ExitCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.FitAddCommandMessages;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.FitDeleteCommandMessages;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.HelpCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ListCommandMessages;","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.WeightCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"     * Parses user\u0027s input into command for execution.","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"     * @return the command based on the user\u0027s input","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException if the user\u0027s input does not conform the expected format","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(INVALID_COMMAND_FORMAT_HELP);","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        // (i.e., FINE, FINER and lower) log messages such as the one below.","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        switch (commandWord.toLowerCase()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        case NoteCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"            return new NoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        case AddCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        case EditCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        case DeleteCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        case ClearCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        case FindCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        case WeightCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"            return new WeightCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"        case ListCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        case ExitCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        case HelpCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"        case FitAddCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"            return new FitAddCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        case FitDeleteCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"            return new FitDeleteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"            logger.finer(MESSAGE_PARSE_EXCEPTION + userInput);","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":3,"bgopi23":9,"ruijietay":22,"jjchee77":8,"-":61,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     **/","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.argMultimap.put(prefix, argValues);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"     * Gets  Gets the value associated with the prefix or an empty string","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"     * @param prefix the associated prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"     * @return a string value or empty string","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"    public String getValueOrEmpty(Prefix prefix) {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        return this.getValue(prefix).orElse(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"     * Gets the value associated with the prefix or a preamble if the value does not exist","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"     * @param prefix the associated prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"     * @return the associated value or preamble","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    public String getValueOrPreamble(Prefix prefix) {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        return this.getValue(prefix).orElse(getPreamble());","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"     * Gets string value associated with the given prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"     * @param prefix the associated prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"     * @return a string","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"    public String getStringValue(Prefix prefix) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"        return getValue(prefix).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        if (!this.argMultimap.containsKey(prefix)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        return new ArrayList\u003c\u003e(this.argMultimap.get(prefix));","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"        return this.getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"bgopi23"},"content":"     * Gets the number of whitespace-separated segments in a preamble","lastModifiedDate":"2024-04-06"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"     * @return an integer representing the number of the preamble segments","lastModifiedDate":"2024-04-06"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"bgopi23"},"content":"    public Integer getPreambleSegmentNumber() {","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"bgopi23"},"content":"        return getPreamble().split(\" \").length;","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"            .filter(prefix -\u003e this.argMultimap.containsKey(prefix) \u0026\u0026 this.argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"     * Checks if the argument multimap contains a non-empty value for any of the specified prefixes.","lastModifiedDate":"2024-04-09"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"     * @param prefixes the prefixes to check for argument values","lastModifiedDate":"2024-04-09"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"     * @return {@code true} if at least one of the specified prefixes has a non-empty argument value,","lastModifiedDate":"2024-04-09"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"     *      {@code false} otherwise","lastModifiedDate":"2024-04-09"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":127,"author":{"gitId":"jjchee77"},"content":"    public boolean hasArgumentValueForPrefixes(Prefix... prefixes) {","lastModifiedDate":"2024-04-09"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"        Prefix[] prefixesWithValues \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2024-04-09"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"            .filter(prefix -\u003e this.argMultimap.containsKey(prefix) \u0026\u0026 !this.argMultimap.get(prefix).isEmpty()","lastModifiedDate":"2024-04-09"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"                \u0026\u0026 !this.argMultimap.get(prefix).stream().allMatch(String::isEmpty))","lastModifiedDate":"2024-04-09"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"            .toArray(Prefix[]::new);","lastModifiedDate":"2024-04-09"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"        return prefixesWithValues.length \u003e 0;","lastModifiedDate":"2024-04-09"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":136,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"dillontkh"},"content":"     * Returns true if the prefix exists as a key in the map.","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":139,"author":{"gitId":"bgopi23"},"content":"     * @param prefix to check","lastModifiedDate":"2024-04-05"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"     * @return true if prefix is present and false otherwise","lastModifiedDate":"2024-04-05"},{"lineNumber":141,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"    public boolean contains(Prefix prefix) {","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"        return this.argMultimap.containsKey(prefix);","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"     * Checks if any number of the prefixes specified is present in the ArgumentMultimap object","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"     * @param prefixes to check","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"     * @return true if prefix/s present and false otherwise","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"    public boolean containsAny(Prefix... prefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"        return Stream.of(prefixes).anyMatch(this::contains);","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"ruijietay"},"content":"     * Checks if the preamble of the argumentMultimap object is empty","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"bgopi23"},"content":"     * @return true if the preamble is empty","lastModifiedDate":"2024-04-11"},{"lineNumber":160,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"ruijietay"},"content":"    public boolean isPreambleEmpty() {","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"ruijietay"},"content":"        return this.getPreamble().isEmpty();","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"     * Checks if the preamble of ArgumentMultimap object is made of 1 part","lastModifiedDate":"2024-04-05"},{"lineNumber":167,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"     * @return true if the preamble is by itself","lastModifiedDate":"2024-04-05"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":170,"author":{"gitId":"bgopi23"},"content":"    public boolean hasOnlyOnePreambleSegment() {","lastModifiedDate":"2024-04-11"},{"lineNumber":171,"author":{"gitId":"bgopi23"},"content":"        return (getPreambleSegmentNumber() \u003d\u003d 1);","lastModifiedDate":"2024-04-05"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"bgopi23":28,"ruijietay":33,"jjchee77":32,"-":73,"dillontkh":7}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tokenizes arguments string of the form:","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July} where prefixes","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * the above example.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" * 2. Leading and trailing whitespaces of an argument value will be","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":" * discarded.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":" * the value of {@code t/}","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * that maps prefixes to their","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * respective argument values. Only the given prefixes will be recognized in the","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * arguments string.","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param argsString Arguments string of the form:","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     *                   {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @param argsString Arguments string of the form:","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     *                   {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        int prefixIndex \u003d argsString.toLowerCase().indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * Extracts prefixes and their argument values, and returns an","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     * {@code ArgumentMultimap} object that maps the extracted prefixes to their","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"     * respective arguments. Prefixes are extracted based on their zero-based","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"     * positions in {@code argsString}.","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"     * @param argsString      Arguments string of the form:","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"     *                        {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"     *                        {@code argsString}","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"     * Returns the trimmed value of the argument in the arguments string specified","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"     * by {@code currentPrefixPosition}.","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"            return this.startPosition;","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"ruijietay"},"content":"            return this.prefix;","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"RyanNgWH":29,"ruijietay":2,"-":130}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAR_CONFIRM;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":" * Parses input arguments and creates a new ClearCommand object","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"     * and returns a ClearCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLEAR_CONFIRM);","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"        if (argMultimap.contains(PREFIX_CLEAR_CONFIRM)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"            return new ClearCommand(true);","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"            return new ClearCommand(false);","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"dillontkh":27}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix PREFIX_HEIGHT \u003d new Prefix(\"h/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"nt/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_SETS \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_REPS \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_ARM \u003d new Prefix(\"/arms\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_LEG \u003d new Prefix(\"/legs\");","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_CHEST \u003d new Prefix(\"/chest\");","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_BACK \u003d new Prefix(\"/back\");","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_SHOULDER \u003d new Prefix(\"/shoulders\");","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_ABS \u003d new Prefix(\"/abs\");","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_ALL \u003d new Prefix(\"/all\");","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_EXERCISE_BREAK_BETWEEN_SETS \u003d new Prefix(\"b/\");","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    public static final Prefix PREFIX_FITDELETE_DELETE_ALL \u003d new Prefix(\"/all\");","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix[] ALL_PREFIXES \u003d {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NAME,","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        PREFIX_ADDRESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        PREFIX_HEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        PREFIX_WEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NOTE,","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        PREFIX_TAG","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    };","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix[] ALL_PREFIXES_EXCEPT_TAG \u003d {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NAME,","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        PREFIX_ADDRESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        PREFIX_HEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        PREFIX_WEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NOTE,","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    };","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix[] PREFIXES_NAME_PHONE_EMAIL_ADDRESS \u003d {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NAME,","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        PREFIX_ADDRESS","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"    };","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"    public static final Prefix[] ALL_EXERCISE_PREFIXES \u003d {","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_NAME,","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_SETS,","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_REPS,","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_BREAK_BETWEEN_SETS,","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_ARM,","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_LEG,","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_CHEST,","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_BACK,","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_SHOULDER,","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_ABS,","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_ALL","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"    };","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"    public static final Prefix[] DEFAULT_EXERCISE_PREFIXES \u003d {","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_ARM,","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_LEG,","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_CHEST,","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_BACK,","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_SHOULDER,","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_ABS,","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_ALL","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"    };","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"    public static final Prefix[] EXERCISE_VALUE_PREFIXES \u003d {","lastModifiedDate":"2024-04-11"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_SETS,","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_REPS,","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"        PREFIX_EXERCISE_BREAK_BETWEEN_SETS","lastModifiedDate":"2024-04-11"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"    };","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"    public static final Prefix PREFIX_CLEAR_CONFIRM \u003d new Prefix(\"/confirm\");","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bgopi23":27,"ruijietay":28,"jjchee77":14,"-":15,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.DeleteCommandMessages.MESSAGE_INVALID_INDEX_DELETE;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.DeleteCommandMessages.MESSAGE_NO_INDEX_DELETE;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.ParserUtil.parseIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_NO_INDEX_DELETE);","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"            Index index \u003d parseIndex(args);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_DELETE, pe);","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bgopi23":10,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_INVALID_COMMAND_FORMAT_EDIT;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_INVALID_INDEX_EDIT;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_NOT_EDITED;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_NO_INDEX_EDIT;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES_EXCEPT_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"                ArgumentTokenizer.tokenize(args, ALL_PREFIXES);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        // (edit) or (edit n/John)","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        if (args.isEmpty() || argMultimap.isPreambleEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_NO_INDEX_EDIT);","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        // (edit 1 name) or (edit name 1)","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"        if (!argMultimap.hasOnlyOnePreambleSegment()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_EDIT);","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_EDIT, pe);","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(ALL_PREFIXES_EXCEPT_TAG);","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_NAME)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getStringValue(PREFIX_NAME)));","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_PHONE)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getStringValue(PREFIX_PHONE)));","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_EMAIL)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL)));","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_ADDRESS)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS)));","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_WEIGHT)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"            editPersonDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT)));","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_HEIGHT)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"            editPersonDescriptor.setHeight(ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT)));","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_NOTE)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"            editPersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE)));","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bgopi23":24,"ruijietay":12,"jjchee77":2,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_INVALID_COMMAND_FORMAT_FIND;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIXES_NAME_PHONE_EMAIL_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.tag.Tag.EMPTY_TAG_SET;","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AddressContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AlwaysTruePredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.EmailContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.HeightContainsRangePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NoteContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.SearchPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.TagSetContainsAllTagsPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.WeightMapContainsWeightRangePredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * FindCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_FIND);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, ALL_PREFIXES);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"        AlwaysTruePredicate alwaysTruePredicate \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIXES_NAME_PHONE_EMAIL_ADDRESS);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchString(argMultimap.getValueOrPreamble(PREFIX_NAME)));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchString(argMultimap.getValueOrEmpty(PREFIX_PHONE)));","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"        SearchPredicate\u003c?\u003e emailPredicate \u003d argMultimap.contains(PREFIX_EMAIL)","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"                ? new EmailContainsSubstringPredicate(ParserUtil.parseSearchString(","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"                        argMultimap.getStringValue(PREFIX_EMAIL)))","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"                : alwaysTruePredicate;","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"        SearchPredicate\u003c?\u003e addressPredicate \u003d argMultimap.contains(PREFIX_ADDRESS)","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"                ? new AddressContainsSubstringPredicate(ParserUtil.parseSearchString(","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"                        argMultimap.getStringValue(PREFIX_ADDRESS)))","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"                : alwaysTruePredicate;","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"        SearchPredicate\u003c?\u003e weightPredicate \u003d argMultimap.contains(PREFIX_WEIGHT)","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"                ? new WeightMapContainsWeightRangePredicate(ParserUtil.parseSearchRange(","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"                        argMultimap.getValue(PREFIX_WEIGHT)))","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"                : alwaysTruePredicate;","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"        SearchPredicate\u003c?\u003e heightPredicate \u003d argMultimap.contains(PREFIX_HEIGHT)","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"                ? new HeightContainsRangePredicate(ParserUtil.parseSearchRange(","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"                        argMultimap.getValue(PREFIX_HEIGHT)))","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"                : alwaysTruePredicate;","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        SearchPredicate\u003c?\u003e notePredicate \u003d argMultimap.contains(PREFIX_NOTE)","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"                ? new NoteContainsSubstringPredicate(ParserUtil.parseSearchString(","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"                        argMultimap.getStringValue(PREFIX_NOTE)))","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"                : alwaysTruePredicate;","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"        SearchPredicate\u003c?\u003e tagsPredicate \u003d argMultimap.contains(PREFIX_TAG)","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"                ? argMultimap.getAllValues(PREFIX_TAG).toString().equals(\"[]\")","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"                        ? new TagSetContainsAllTagsPredicate(EMPTY_TAG_SET)","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"                        : new TagSetContainsAllTagsPredicate(ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)))","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"                : alwaysTruePredicate;","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates predicates \u003d new CombinedPredicates(namePredicate, phonePredicate, emailPredicate,","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"                addressPredicate, weightPredicate, heightPredicate, notePredicate, tagsPredicate);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        return new FindCommand(predicates);","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RyanNgWH":20,"bgopi23":34,"ruijietay":19,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/FitAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_ADD_EXERCISE_NAME_CONFLICTING_PREFIXES;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_ADD_EXERCISE_VALUES_CONFLICTING_PREFIXES;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_EXERCISE_NAME_PARAMETER_AND_DEFAULT_PREFIXES_MISSING;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_INVALID_COMMAND_FORMAT_FITADD;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_INVALID_INDEX_FITADD;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitAddCommandMessages.MESSAGE_NO_INDEX_FITADD;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_EXERCISE_PREFIXES;","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.DEFAULT_EXERCISE_PREFIXES;","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.EXERCISE_VALUE_PREFIXES;","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ABS;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ALL;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ARM;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_BACK;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_BREAK_BETWEEN_SETS;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_CHEST;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_LEG;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_NAME;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_REPS;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_SETS;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_SHOULDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.commands.FitAddCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseToAdd;","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":" * Parses input arguments and creates a new FitAddCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"public class FitAddCommandParser implements Parser\u003cFitAddCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"     * Parses the input arguments to create an {@link ArgumentMultimap}","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"     * which maps each prefix to its respective arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"     * @param args The string of arguments to be tokenized and mapped.","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"     * @return An {@link ArgumentMultimap} object representing the mapping of prefixes to their arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    private ArgumentMultimap getArgMultiMap(String args) {","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"        return ArgumentTokenizer.tokenize(args, ALL_EXERCISE_PREFIXES);","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"     * Verifies that a client index is specified in the input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"     * This method checks if the preamble of the argument multimap is empty,","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"     * indicating that no client index was provided.","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the parsed input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If no client index is provided in the input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"    private void verifyClientIndexExists(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"        if (argumentMultimap.isPreambleEmpty()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_NO_INDEX_FITADD);","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"     * Ensures that the client index is specified as a single segment in the input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"     * This method checks if the preamble contains more than just the client index,","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"     * which would indicate an invalid command format.","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the parsed input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If the client index is not the only segment in the preamble.","lastModifiedDate":"2024-04-11"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"    private void verifyClientIndexSingleSegment(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        if (!argumentMultimap.hasOnlyOnePreambleSegment()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_FITADD);","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"     * Parses the client index from the preamble of the argument multimap.","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"     * This method attempts to parse the client index and throws a {@link ParseException} if the index is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the parsed input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"     * @return An {@link Index} representing the parsed client index.","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If the client index is invalid or cannot be parsed.","lastModifiedDate":"2024-04-11"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"    private Index parseIndex(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"        // Parse index of client to add exercise to","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        Index index;","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2024-04-09"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_FITADD, pe);","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        return index;","lastModifiedDate":"2024-04-09"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"     * Verifies that there are no duplicate prefixes in the input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"     * This method checks if any of the exercise prefixes are duplicated, which is not allowed.","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":103,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the parsed input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":104,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If duplicate prefixes are found.","lastModifiedDate":"2024-04-11"},{"lineNumber":105,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoDuplicatePrefixes(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":107,"author":{"gitId":"bgopi23"},"content":"        argumentMultimap.verifyNoDuplicatePrefixesFor(ALL_EXERCISE_PREFIXES);","lastModifiedDate":"2024-04-11"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":111,"author":{"gitId":"bgopi23"},"content":"     * Ensures that there are no argument values for default exercise prefixes.","lastModifiedDate":"2024-04-11"},{"lineNumber":112,"author":{"gitId":"bgopi23"},"content":"     * This method checks if any of the default exercise prefixes are accompanied by argument values, which is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":113,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":114,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the parsed input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":115,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If argument values are found for default exercise prefixes.","lastModifiedDate":"2024-04-11"},{"lineNumber":116,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoArgumentValueForPrefixes(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":118,"author":{"gitId":"bgopi23"},"content":"        if (argumentMultimap.hasArgumentValueForPrefixes(DEFAULT_EXERCISE_PREFIXES)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":119,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-04-11"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":124,"author":{"gitId":"bgopi23"},"content":"     * Checks for the presence of required prefixes in the input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":125,"author":{"gitId":"bgopi23"},"content":"     * This method ensures that either an exercise name prefix is present or default exercise prefixes are provided.","lastModifiedDate":"2024-04-11"},{"lineNumber":126,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":127,"author":{"gitId":"bgopi23"},"content":"     * @param hasExerciseNamePrefix A boolean indicating whether the exercise name prefix is present.","lastModifiedDate":"2024-04-11"},{"lineNumber":128,"author":{"gitId":"bgopi23"},"content":"     * @param hasDefaultExercisePrefixes A boolean indicating whether any default exercise prefixes are present.","lastModifiedDate":"2024-04-11"},{"lineNumber":129,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If neither an exercise name prefix nor default exercise prefixes are provided.","lastModifiedDate":"2024-04-11"},{"lineNumber":130,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoMissingPrefixes(boolean hasExerciseNamePrefix, boolean hasDefaultExercisePrefixes)","lastModifiedDate":"2024-04-09"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"        if (!hasExerciseNamePrefix \u0026\u0026 !hasDefaultExercisePrefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_EXERCISE_NAME_PARAMETER_AND_DEFAULT_PREFIXES_MISSING);","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":137,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":139,"author":{"gitId":"bgopi23"},"content":"     * Ensures that there are no conflicting prefixes in the input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"     * This method checks for conflicts between exercise name and default exercise prefixes,","lastModifiedDate":"2024-04-11"},{"lineNumber":141,"author":{"gitId":"bgopi23"},"content":"     * as well as between default exercise and exercise value prefixes.","lastModifiedDate":"2024-04-11"},{"lineNumber":142,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":143,"author":{"gitId":"bgopi23"},"content":"     * @param hasExerciseNamePrefix A boolean indicating whether the exercise name prefix is present.","lastModifiedDate":"2024-04-11"},{"lineNumber":144,"author":{"gitId":"bgopi23"},"content":"     * @param hasExerciseValuesPrefix A boolean indicating whether any exercise value prefixes are present.","lastModifiedDate":"2024-04-11"},{"lineNumber":145,"author":{"gitId":"bgopi23"},"content":"     * @param hasDefaultExercisePrefixes A boolean indicating whether any default exercise prefixes are present.","lastModifiedDate":"2024-04-11"},{"lineNumber":146,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If there are conflicting prefixes in the input arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":147,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoConflictingPrefixes(boolean hasExerciseNamePrefix, boolean hasExerciseValuesPrefix,","lastModifiedDate":"2024-04-09"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"                                             boolean hasDefaultExercisePrefixes)","lastModifiedDate":"2024-04-09"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"        if (hasExerciseNamePrefix \u0026\u0026 hasDefaultExercisePrefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_ADD_EXERCISE_NAME_CONFLICTING_PREFIXES);","lastModifiedDate":"2024-04-11"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"jjchee77"},"content":"        if (hasDefaultExercisePrefixes \u0026\u0026 hasExerciseValuesPrefix) {","lastModifiedDate":"2024-04-09"},{"lineNumber":156,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_ADD_EXERCISE_VALUES_CONFLICTING_PREFIXES);","lastModifiedDate":"2024-04-11"},{"lineNumber":157,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":159,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":161,"author":{"gitId":"bgopi23"},"content":"     * Parses the given {@link ArgumentMultimap} to create an {@link ExerciseToAdd} object containing exercise details.","lastModifiedDate":"2024-04-11"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"     * This method specifically handles the scenario where individual exercise details are provided by the user.","lastModifiedDate":"2024-04-11"},{"lineNumber":163,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the exercise details.","lastModifiedDate":"2024-04-11"},{"lineNumber":165,"author":{"gitId":"bgopi23"},"content":"     * @return An {@link ExerciseToAdd} object containing the parsed exercise name, sets, reps, and break between sets.","lastModifiedDate":"2024-04-11"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If the parsing of exercise parameters fails.","lastModifiedDate":"2024-04-11"},{"lineNumber":167,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":168,"author":{"gitId":"jjchee77"},"content":"    private ExerciseToAdd parseExerciseToAdd(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-11"},{"lineNumber":169,"author":{"gitId":"jjchee77"},"content":"        // If individual exercise details are provided, add that exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"jjchee77"},"content":"        String exerciseName \u003d ParserUtil.parseExerciseName(argumentMultimap.getValue(PREFIX_EXERCISE_NAME));","lastModifiedDate":"2024-04-09"},{"lineNumber":171,"author":{"gitId":"jjchee77"},"content":"        Optional\u003cInteger\u003e exerciseSets \u003d ParserUtil.parseExerciseSets(argumentMultimap.getValue(PREFIX_EXERCISE_SETS));","lastModifiedDate":"2024-04-11"},{"lineNumber":172,"author":{"gitId":"jjchee77"},"content":"        Optional\u003cInteger\u003e exerciseReps \u003d ParserUtil.parseExerciseReps(argumentMultimap.getValue(PREFIX_EXERCISE_REPS));","lastModifiedDate":"2024-04-11"},{"lineNumber":173,"author":{"gitId":"jjchee77"},"content":"        Optional\u003cInteger\u003e exerciseBreakBetweenSets \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":174,"author":{"gitId":"jjchee77"},"content":"            ParserUtil.parseExerciseBreakBetweenSets(argumentMultimap.getValue(PREFIX_EXERCISE_BREAK_BETWEEN_SETS));","lastModifiedDate":"2024-04-09"},{"lineNumber":175,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"jjchee77"},"content":"        return new ExerciseToAdd(exerciseName, exerciseSets, exerciseReps, exerciseBreakBetweenSets);","lastModifiedDate":"2024-04-11"},{"lineNumber":177,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":178,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":179,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":180,"author":{"gitId":"bgopi23"},"content":"     * Retrieves the default exercises based on the specified exercise body part prefixes","lastModifiedDate":"2024-04-11"},{"lineNumber":181,"author":{"gitId":"bgopi23"},"content":"     * within the {@link ArgumentMultimap}.","lastModifiedDate":"2024-04-11"},{"lineNumber":182,"author":{"gitId":"bgopi23"},"content":"     * This method is used when the user specifies one or more body parts without providing individual exercise details.","lastModifiedDate":"2024-04-11"},{"lineNumber":183,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":184,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the prefixes for body parts.","lastModifiedDate":"2024-04-11"},{"lineNumber":185,"author":{"gitId":"bgopi23"},"content":"     * @return A set of {@link ExerciseToAdd} objects representing the default exercises for the specified body parts.","lastModifiedDate":"2024-04-11"},{"lineNumber":186,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":187,"author":{"gitId":"jjchee77"},"content":"    private Set\u003cExerciseToAdd\u003e getDefaultExercises(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2024-04-11"},{"lineNumber":188,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e defaultExercises \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":189,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":190,"author":{"gitId":"jjchee77"},"content":"        if (argumentMultimap.contains(PREFIX_EXERCISE_ALL)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":191,"author":{"gitId":"jjchee77"},"content":"            defaultExercises.addAll(FitAddCommand.DEFAULT_ARM_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":192,"author":{"gitId":"jjchee77"},"content":"            defaultExercises.addAll(FitAddCommand.DEFAULT_LEG_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":193,"author":{"gitId":"jjchee77"},"content":"            defaultExercises.addAll(FitAddCommand.DEFAULT_CHEST_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":194,"author":{"gitId":"jjchee77"},"content":"            defaultExercises.addAll(FitAddCommand.DEFAULT_BACK_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":195,"author":{"gitId":"jjchee77"},"content":"            defaultExercises.addAll(FitAddCommand.DEFAULT_SHOULDER_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":196,"author":{"gitId":"jjchee77"},"content":"            defaultExercises.addAll(FitAddCommand.DEFAULT_ABS_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":197,"author":{"gitId":"jjchee77"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"jjchee77"},"content":"            if (argumentMultimap.contains(PREFIX_EXERCISE_ARM)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":199,"author":{"gitId":"jjchee77"},"content":"                defaultExercises.addAll(FitAddCommand.DEFAULT_ARM_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":200,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"jjchee77"},"content":"            if (argumentMultimap.contains(PREFIX_EXERCISE_LEG)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":202,"author":{"gitId":"jjchee77"},"content":"                defaultExercises.addAll(FitAddCommand.DEFAULT_LEG_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":203,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"jjchee77"},"content":"            if (argumentMultimap.contains(PREFIX_EXERCISE_CHEST)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":205,"author":{"gitId":"jjchee77"},"content":"                defaultExercises.addAll(FitAddCommand.DEFAULT_CHEST_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":206,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"jjchee77"},"content":"            if (argumentMultimap.contains(PREFIX_EXERCISE_BACK)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":208,"author":{"gitId":"jjchee77"},"content":"                defaultExercises.addAll(FitAddCommand.DEFAULT_BACK_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":209,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"jjchee77"},"content":"            if (argumentMultimap.contains(PREFIX_EXERCISE_SHOULDER)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":211,"author":{"gitId":"jjchee77"},"content":"                defaultExercises.addAll(FitAddCommand.DEFAULT_SHOULDER_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":212,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"jjchee77"},"content":"            if (argumentMultimap.contains(PREFIX_EXERCISE_ABS)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":214,"author":{"gitId":"jjchee77"},"content":"                defaultExercises.addAll(FitAddCommand.DEFAULT_ABS_EXERCISES);","lastModifiedDate":"2024-04-09"},{"lineNumber":215,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":218,"author":{"gitId":"jjchee77"},"content":"        return defaultExercises;","lastModifiedDate":"2024-04-09"},{"lineNumber":219,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":220,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":221,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":222,"author":{"gitId":"bgopi23"},"content":"     * Determines the set of exercises to add based on whether an exercise name prefix is present.","lastModifiedDate":"2024-04-11"},{"lineNumber":223,"author":{"gitId":"bgopi23"},"content":"     * If an exercise name prefix is present, it parses the individual exercise details to create an","lastModifiedDate":"2024-04-11"},{"lineNumber":224,"author":{"gitId":"bgopi23"},"content":"     * {@link ExerciseToAdd} object.","lastModifiedDate":"2024-04-11"},{"lineNumber":225,"author":{"gitId":"bgopi23"},"content":"     * Otherwise, it retrieves the default exercises for the specified body parts.","lastModifiedDate":"2024-04-11"},{"lineNumber":226,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":227,"author":{"gitId":"bgopi23"},"content":"     * @param argumentMultimap The {@link ArgumentMultimap} containing the parsed arguments.","lastModifiedDate":"2024-04-11"},{"lineNumber":228,"author":{"gitId":"bgopi23"},"content":"     * @param hasExerciseNamePrefix A boolean indicating whether the exercise name prefix is present.","lastModifiedDate":"2024-04-11"},{"lineNumber":229,"author":{"gitId":"bgopi23"},"content":"     * @return A set of {@link ExerciseToAdd} objects representing the exercises to add.","lastModifiedDate":"2024-04-11"},{"lineNumber":230,"author":{"gitId":"bgopi23"},"content":"     * @throws ParseException If the parsing of exercise parameters fails.","lastModifiedDate":"2024-04-11"},{"lineNumber":231,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":232,"author":{"gitId":"jjchee77"},"content":"    private Set\u003cExerciseToAdd\u003e getExercisesToAdd(ArgumentMultimap argumentMultimap, boolean hasExerciseNamePrefix)","lastModifiedDate":"2024-04-11"},{"lineNumber":233,"author":{"gitId":"jjchee77"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":234,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e exercisesToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":235,"author":{"gitId":"jjchee77"},"content":"        if (hasExerciseNamePrefix) {","lastModifiedDate":"2024-04-09"},{"lineNumber":236,"author":{"gitId":"jjchee77"},"content":"            exercisesToAdd.add(parseExerciseToAdd(argumentMultimap));","lastModifiedDate":"2024-04-11"},{"lineNumber":237,"author":{"gitId":"jjchee77"},"content":"        } else {","lastModifiedDate":"2024-04-09"},{"lineNumber":238,"author":{"gitId":"jjchee77"},"content":"            exercisesToAdd.addAll(getDefaultExercises(argumentMultimap));","lastModifiedDate":"2024-04-09"},{"lineNumber":239,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"jjchee77"},"content":"        return exercisesToAdd;","lastModifiedDate":"2024-04-09"},{"lineNumber":242,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":245,"author":{"gitId":"jjchee77"},"content":"     * Parses the given {@code String} of arguments in the context of the FitAddCommand","lastModifiedDate":"2024-04-09"},{"lineNumber":246,"author":{"gitId":"jjchee77"},"content":"     * and returns a FitAddCommand object for execution.","lastModifiedDate":"2024-04-09"},{"lineNumber":247,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":248,"author":{"gitId":"jjchee77"},"content":"     * @param args The string of arguments to be parsed","lastModifiedDate":"2024-04-09"},{"lineNumber":249,"author":{"gitId":"jjchee77"},"content":"     * @return The FitAddCommand object for execution","lastModifiedDate":"2024-04-09"},{"lineNumber":250,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the user input does not conform to the expected format","lastModifiedDate":"2024-04-09"},{"lineNumber":251,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":252,"author":{"gitId":"jjchee77"},"content":"    public FitAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":253,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-09"},{"lineNumber":254,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":255,"author":{"gitId":"jjchee77"},"content":"        ArgumentMultimap argumentMultimap \u003d getArgMultiMap(args);","lastModifiedDate":"2024-04-09"},{"lineNumber":256,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":257,"author":{"gitId":"jjchee77"},"content":"        verifyClientIndexExists(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":258,"author":{"gitId":"jjchee77"},"content":"        verifyClientIndexSingleSegment(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":259,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":260,"author":{"gitId":"jjchee77"},"content":"        Index index \u003d parseIndex(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":261,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":262,"author":{"gitId":"jjchee77"},"content":"        verifyNoArgumentValueForPrefixes(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":263,"author":{"gitId":"jjchee77"},"content":"        verifyNoDuplicatePrefixes(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":264,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":265,"author":{"gitId":"jjchee77"},"content":"        // Get existence of relevant prefixes","lastModifiedDate":"2024-04-09"},{"lineNumber":266,"author":{"gitId":"jjchee77"},"content":"        boolean hasExerciseNamePrefix \u003d argumentMultimap.contains(PREFIX_EXERCISE_NAME);","lastModifiedDate":"2024-04-09"},{"lineNumber":267,"author":{"gitId":"bgopi23"},"content":"        boolean hasExerciseValuesPrefix \u003d argumentMultimap.containsAny(EXERCISE_VALUE_PREFIXES);","lastModifiedDate":"2024-04-11"},{"lineNumber":268,"author":{"gitId":"bgopi23"},"content":"        boolean hasDefaultExercisePrefixes \u003d argumentMultimap.containsAny(DEFAULT_EXERCISE_PREFIXES);","lastModifiedDate":"2024-04-11"},{"lineNumber":269,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":270,"author":{"gitId":"jjchee77"},"content":"        verifyNoMissingPrefixes(hasExerciseNamePrefix, hasDefaultExercisePrefixes);","lastModifiedDate":"2024-04-09"},{"lineNumber":271,"author":{"gitId":"jjchee77"},"content":"        verifyNoConflictingPrefixes(hasExerciseNamePrefix, hasExerciseValuesPrefix, hasDefaultExercisePrefixes);","lastModifiedDate":"2024-04-09"},{"lineNumber":272,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":273,"author":{"gitId":"jjchee77"},"content":"        return new FitAddCommand(index, getExercisesToAdd(argumentMultimap, hasExerciseNamePrefix));","lastModifiedDate":"2024-04-09"},{"lineNumber":274,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":275,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bgopi23":113,"jjchee77":162}},{"path":"src/main/java/seedu/address/logic/parser/FitDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_CONCURRENT_PREFIX;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_EXERCISE_NAME_PARAMETER_AND_ALL_PREFIX_MISSING;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_INVALID_COMMAND_FORMAT_FITDELETE;","lastModifiedDate":"2024-04-06"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_INVALID_INDEX_FITDELETE;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FitDeleteCommandMessages.MESSAGE_NO_INDEX_FITDELETE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ALL;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_NAME;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FITDELETE_DELETE_ALL;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.commands.FitDeleteCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":" * Parses input arguments and creates a new FitDeleteCommand object.","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"public class FitDeleteCommandParser implements Parser\u003cFitDeleteCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    private ArgumentMultimap getArgMultiMap(String args) {","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"        return ArgumentTokenizer.tokenize(args, PREFIX_EXERCISE_NAME, PREFIX_FITDELETE_DELETE_ALL);","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    private void verifyClientIndexExists(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        if (argumentMultimap.isPreambleEmpty()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_NO_INDEX_FITDELETE);","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    private void verifyClientIndexSingleSegment(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"        if (!argumentMultimap.hasOnlyOnePreambleSegment()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_FITDELETE);","lastModifiedDate":"2024-04-06"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    private Index parseIndex(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        Index index;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2024-04-09"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_FITDELETE, pe);","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        return index;","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoDuplicatePrefixes(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        argumentMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EXERCISE_NAME, PREFIX_EXERCISE_ALL);","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoConflictingPrefixes(boolean containsPrefixExerciseName,","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"                                             boolean containsPrefixExerciseDeleteAll) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        if (containsPrefixExerciseName \u0026\u0026 containsPrefixExerciseDeleteAll) {","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_CONCURRENT_PREFIX);","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoMissingPrefixes(boolean containsPrefixExerciseName, boolean containsPrefixExerciseDeleteAll)","lastModifiedDate":"2024-04-09"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        if (!containsPrefixExerciseName \u0026\u0026 !containsPrefixExerciseDeleteAll) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_EXERCISE_NAME_PARAMETER_AND_ALL_PREFIX_MISSING);","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    private void verifyNoArgumentValueForPrefixes(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        if (argumentMultimap.hasArgumentValueForPrefixes(PREFIX_FITDELETE_DELETE_ALL)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_FITDELETE);","lastModifiedDate":"2024-04-11"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"     * Parses the given {@code String} of arguments in the context of the FitDeleteCommand","lastModifiedDate":"2024-04-09"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"     * and returns a FitDeleteCommand object for execution.","lastModifiedDate":"2024-04-09"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     * @param args The string of arguments to be parsed","lastModifiedDate":"2024-04-09"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     * @return The FitDeleteCommand object for execution","lastModifiedDate":"2024-04-09"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the user input does not conform to the expected format","lastModifiedDate":"2024-04-09"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    public FitDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-09"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"        ArgumentMultimap argumentMultimap \u003d getArgMultiMap(args);","lastModifiedDate":"2024-04-09"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"        verifyClientIndexExists(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        verifyClientIndexSingleSegment(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        Index index \u003d parseIndex(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"        verifyNoArgumentValueForPrefixes(argumentMultimap);","lastModifiedDate":"2024-04-09"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        // Get existence of relevant prefixes","lastModifiedDate":"2024-04-09"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        boolean containsPrefixExerciseName \u003d argumentMultimap.contains(PREFIX_EXERCISE_NAME);","lastModifiedDate":"2024-04-09"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"        boolean containsPrefixExerciseDeleteAll \u003d argumentMultimap.contains(PREFIX_FITDELETE_DELETE_ALL);","lastModifiedDate":"2024-04-09"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"        verifyNoConflictingPrefixes(containsPrefixExerciseName, containsPrefixExerciseDeleteAll);","lastModifiedDate":"2024-04-09"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"        verifyNoMissingPrefixes(containsPrefixExerciseName, containsPrefixExerciseDeleteAll);","lastModifiedDate":"2024-04-09"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"        Optional\u003cString\u003e exerciseNameOpt \u003d Optional.ofNullable(","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"            containsPrefixExerciseDeleteAll ? null","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"                : ParserUtil.parseExerciseName(argumentMultimap.getValue(PREFIX_EXERCISE_NAME)));","lastModifiedDate":"2024-04-09"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"        return new FitDeleteCommand(index, exerciseNameOpt, containsPrefixExerciseDeleteAll);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bgopi23":12,"jjchee77":96}},{"path":"src/main/java/seedu/address/logic/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_INVALID_INDEX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_NO_INDEX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.NOTE_EDIT_TAG;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.commands.NoteEditCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":" * Parses input arguments and creates a new {@code NoteCommand} object","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"public class NoteCommandParser implements Parser\u003cNoteCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * {@code NoteCommand}","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"     * and returns a {@code NoteCommand} object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"        // (note)","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_NO_INDEX_NOTE);","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        String[] argsArray \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        Index index;","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"            index \u003d ParserUtil.parseIndex(argsArray[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_NOTE, ive);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"        // (note 1 /edit)","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"        if (isEdit(argsArray)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"            return new NoteEditCommand(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        Note note;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"        // (note 1)","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        if (argsArray.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"            note \u003d new Note(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"        } else { // (note 1 valid note)","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"            note \u003d new Note(String.join(\" \", Arrays.copyOfRange(argsArray, 1, argsArray.length)).trim());","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        return new NoteCommand(index, note);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"     * Checks if the given array of arguments indicates an edit operation.","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"    private boolean isEdit(String[] argsArray) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"        String[] filteredArgs \u003d Arrays.stream(argsArray)","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"dillontkh"},"content":"                .filter(string -\u003e !string.isBlank())","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"dillontkh"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"dillontkh"},"content":"        return filteredArgs.length \u003d\u003d 2 \u0026\u0026 filteredArgs[1].equalsIgnoreCase(NOTE_EDIT_TAG);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"RyanNgWH":12,"bgopi23":9,"ruijietay":31,"dillontkh":20}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.AddressMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.EmailMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.HeightMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.NameMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.PhoneMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.TagMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.WeightMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":" * classes.","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"     * and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"     * @param oneBasedIndex The one-based index string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Index object","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the specified index is invalid (not non-zero unsigned integer)","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"     * @param name The name string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Name object","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code name} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(NameMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"     * @param phone The phone string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Phone object","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code phone} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"        String trimmedPhone \u003d phone.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(PhoneMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e address} into an {@code Address}.","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"     * @param address The optional address string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Address object","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code address} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"    public static Address parseAddress(Optional\u003cString\u003e address) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"        String trimmedAddress \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"        if (address.isPresent() \u0026\u0026 !address.get().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"            trimmedAddress \u003d address.get().trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"                throw new ParseException(AddressMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e email} into an {@code Email}.","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"     * @param email The optional email string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Email object","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code email} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"    public static Email parseEmail(Optional\u003cString\u003e email) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"        String trimmedEmail \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"        if (email.isPresent() \u0026\u0026 !email.get().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"            trimmedEmail \u003d email.get().trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"bgopi23"},"content":"                throw new ParseException(EmailMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e note} into a {@code Note}.","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"     * If the {@code Optional} is empty, return a {@code Note} with an empty string.","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"     * @param note The optional note string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Note object","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"    public static Note parseNote(Optional\u003cString\u003e note) {","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"        return note.isEmpty() ? new Note(\"\") : new Note(note.get().trim());","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e weight} into a {@code Weight}.","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"     * If the {@code Optional} is empty, return a {@code Weight} with an uninitialized value of 0f.","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"     * @param weight The optional weight string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Weight object","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code weight} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"    public static Weight parseWeight(Optional\u003cString\u003e weight) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"ruijietay"},"content":"        if (!weight.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"ruijietay"},"content":"            String trimmedWeight \u003d weight.get().trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"ruijietay"},"content":"            if (!Weight.isValidWeight(trimmedWeight)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"                throw new ParseException(WeightMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"ruijietay"},"content":"            return trimmedWeight.isEmpty() ? new Weight(0f)","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"                : new Weight(Float.valueOf(trimmedWeight));","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"ruijietay"},"content":"        return new Weight(0f);","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e height} into a {@code Height}.","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"ruijietay"},"content":"     * If the {@code Optional} is empty, return a {@code Height} with an uninitialized value of 0f.","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"jjchee77"},"content":"     * @param height The optional height string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Height object","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code height} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"ruijietay"},"content":"    public static Height parseHeight(Optional\u003cString\u003e height) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(height);","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"        if (!height.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"ruijietay"},"content":"            String trimmedHeight \u003d height.get().trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"ruijietay"},"content":"            if (!Height.isValidHeight(trimmedHeight)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"bgopi23"},"content":"                throw new ParseException(HeightMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"            return trimmedHeight.isEmpty() ? new Height(0f) : new Height(Float.valueOf(trimmedHeight));","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"        return new Height(0f);","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"jjchee77"},"content":"     * @param tag The tag string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed Tag object","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code tag} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(TagMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":210,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"jjchee77"},"content":"     * @param tags The collection of tag strings to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"jjchee77"},"content":"     * @return The set of parsed Tag objects","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If any of the given {@code tags} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":223,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"jjchee77"},"content":"     * Parses a {@code Optional\u003cString\u003e exerciseNameOpt} into a {@code String}.","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"jjchee77"},"content":"     * @param exerciseNameOpt The optional exercise name string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed exercise name string","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"jjchee77"},"content":"    public static String parseExerciseName(Optional\u003cString\u003e exerciseNameOpt) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(exerciseNameOpt);","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"jjchee77"},"content":"        String trimmedExerciseNameLowerCased \u003d exerciseNameOpt.orElse(\"\").trim().toLowerCase();","lastModifiedDate":"2024-04-11"},{"lineNumber":234,"author":{"gitId":"jjchee77"},"content":"        if (!Exercise.isValidName(trimmedExerciseNameLowerCased)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":235,"author":{"gitId":"jjchee77"},"content":"            throw new ParseException(Exercise.NAME_CONSTRAINT);","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"jjchee77"},"content":"        return trimmedExerciseNameLowerCased;","lastModifiedDate":"2024-04-11"},{"lineNumber":239,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"jjchee77"},"content":"     * Parses a {@code Optional\u003cString\u003e exerciseSetsOpt} into a {@code Integer}.","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"jjchee77"},"content":"     * If the {@code Optional} is empty, return a {@code Integer} with the default value.","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"jjchee77"},"content":"     * @param exerciseSetsOpt The optional exercise sets string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed exercise sets value","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code exerciseSetsOpt} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"jjchee77"},"content":"    public static Optional\u003cInteger\u003e parseExerciseSets(Optional\u003cString\u003e exerciseSetsOpt) throws ParseException {","lastModifiedDate":"2024-04-11"},{"lineNumber":250,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(exerciseSetsOpt);","lastModifiedDate":"2024-03-31"},{"lineNumber":251,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":252,"author":{"gitId":"jjchee77"},"content":"        if (exerciseSetsOpt.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":253,"author":{"gitId":"jjchee77"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-11"},{"lineNumber":254,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":255,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":256,"author":{"gitId":"jjchee77"},"content":"        String exerciseSetsTrimmed \u003d exerciseSetsOpt.get().trim();","lastModifiedDate":"2024-03-31"},{"lineNumber":257,"author":{"gitId":"jjchee77"},"content":"        if (!StringUtil.isInteger(exerciseSetsTrimmed)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":258,"author":{"gitId":"jjchee77"},"content":"            throw new ParseException(Exercise.SETS_CONSTRAINT);","lastModifiedDate":"2024-03-31"},{"lineNumber":259,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":260,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":261,"author":{"gitId":"jjchee77"},"content":"        Integer exerciseSets \u003d Integer.valueOf(exerciseSetsTrimmed);","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"jjchee77"},"content":"        if (!Exercise.isValidReps(exerciseSets)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"jjchee77"},"content":"            throw new ParseException(Exercise.SETS_CONSTRAINT);","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"jjchee77"},"content":"        return Optional.of(exerciseSets);","lastModifiedDate":"2024-04-11"},{"lineNumber":267,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":270,"author":{"gitId":"jjchee77"},"content":"     * Parses a {@code Optional\u003cString\u003e exerciseRepsOpt} into a {@code Integer}.","lastModifiedDate":"2024-03-31"},{"lineNumber":271,"author":{"gitId":"jjchee77"},"content":"     * If the {@code Optional} is empty, return a {@code Integer} with the default value.","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"jjchee77"},"content":"     * @param exerciseRepsOpt The optional exercise reps string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed exercise reps value","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code exerciseRepsOpt} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"jjchee77"},"content":"    public static Optional\u003cInteger\u003e parseExerciseReps(Optional\u003cString\u003e exerciseRepsOpt) throws ParseException {","lastModifiedDate":"2024-04-11"},{"lineNumber":278,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(exerciseRepsOpt);","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"jjchee77"},"content":"        if (exerciseRepsOpt.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"jjchee77"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-11"},{"lineNumber":282,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":284,"author":{"gitId":"jjchee77"},"content":"        String exerciseRepsTrimmed \u003d exerciseRepsOpt.orElse(\"\").trim();","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"jjchee77"},"content":"        if (!StringUtil.isInteger(exerciseRepsTrimmed)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":286,"author":{"gitId":"jjchee77"},"content":"            throw new ParseException(Exercise.REPS_CONSTRAINT);","lastModifiedDate":"2024-03-31"},{"lineNumber":287,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":288,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":289,"author":{"gitId":"jjchee77"},"content":"        Integer exerciseReps \u003d Integer.valueOf(exerciseRepsTrimmed);","lastModifiedDate":"2024-04-02"},{"lineNumber":290,"author":{"gitId":"jjchee77"},"content":"        if (!Exercise.isValidReps(exerciseReps)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"jjchee77"},"content":"            throw new ParseException(Exercise.REPS_CONSTRAINT);","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"jjchee77"},"content":"        return Optional.of(exerciseReps);","lastModifiedDate":"2024-04-11"},{"lineNumber":296,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":297,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":298,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":299,"author":{"gitId":"jjchee77"},"content":"     * Parses a {@code Optional\u003cString\u003e exerciseBreakBetweenSetsOpt} into a {@code Integer}.","lastModifiedDate":"2024-04-02"},{"lineNumber":300,"author":{"gitId":"jjchee77"},"content":"     * If the {@code Optional} is empty, return a {@code Integer} with the default value.","lastModifiedDate":"2024-03-31"},{"lineNumber":301,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":302,"author":{"gitId":"jjchee77"},"content":"     * @param exerciseBreakBetweenSetsOpt The optional exercise rest string to be parsed","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"jjchee77"},"content":"     * @return The parsed exercise rest value","lastModifiedDate":"2024-03-31"},{"lineNumber":304,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code exerciseBreakBetweenSetsOpt} is invalid","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":306,"author":{"gitId":"jjchee77"},"content":"    public static Optional\u003cInteger\u003e parseExerciseBreakBetweenSets(Optional\u003cString\u003e exerciseBreakBetweenSetsOpt)","lastModifiedDate":"2024-04-11"},{"lineNumber":307,"author":{"gitId":"jjchee77"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(exerciseBreakBetweenSetsOpt);","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":310,"author":{"gitId":"jjchee77"},"content":"        if (exerciseBreakBetweenSetsOpt.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"jjchee77"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-11"},{"lineNumber":312,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":313,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":314,"author":{"gitId":"jjchee77"},"content":"        String exerciseRestTrimmed \u003d exerciseBreakBetweenSetsOpt.orElse(\"\").trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"jjchee77"},"content":"        if (!StringUtil.isInteger(exerciseRestTrimmed)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":316,"author":{"gitId":"jjchee77"},"content":"            throw new ParseException(Exercise.BREAK_CONSTRAINT);","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":318,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":319,"author":{"gitId":"jjchee77"},"content":"        Integer exerciseBreakBetweenSets \u003d Integer.valueOf(exerciseRestTrimmed);","lastModifiedDate":"2024-04-02"},{"lineNumber":320,"author":{"gitId":"jjchee77"},"content":"        if (!Exercise.isValidBreakBetweenSets(exerciseBreakBetweenSets)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":321,"author":{"gitId":"jjchee77"},"content":"            throw new ParseException(Exercise.BREAK_CONSTRAINT);","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":324,"author":{"gitId":"jjchee77"},"content":"        return Optional.of(exerciseBreakBetweenSets);","lastModifiedDate":"2024-04-11"},{"lineNumber":325,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":326,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":327,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":328,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code String searchString} into a string.","lastModifiedDate":"2024-03-28"},{"lineNumber":329,"author":{"gitId":"RyanNgWH"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":330,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":331,"author":{"gitId":"jjchee77"},"content":"     * @param searchString The string to search","lastModifiedDate":"2024-03-31"},{"lineNumber":332,"author":{"gitId":"jjchee77"},"content":"     * @return The string ready to be used for searching","lastModifiedDate":"2024-03-31"},{"lineNumber":333,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":334,"author":{"gitId":"RyanNgWH"},"content":"    public static String parseSearchString(String searchString) {","lastModifiedDate":"2024-03-16"},{"lineNumber":335,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(searchString);","lastModifiedDate":"2024-03-16"},{"lineNumber":336,"author":{"gitId":"ruijietay"},"content":"        return searchString.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":338,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":339,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":340,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e searchRange} into a Pair of Floats.","lastModifiedDate":"2024-03-28"},{"lineNumber":341,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":342,"author":{"gitId":"jjchee77"},"content":"     * @param searchRange The optional range string to be parsed","lastModifiedDate":"2024-03-31"},{"lineNumber":343,"author":{"gitId":"jjchee77"},"content":"     * @return The Pair instance ready to be used for searching","lastModifiedDate":"2024-03-31"},{"lineNumber":344,"author":{"gitId":"jjchee77"},"content":"     * @throws ParseException If the given {@code searchRange} is invalid","lastModifiedDate":"2024-03-31"},{"lineNumber":345,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":346,"author":{"gitId":"ruijietay"},"content":"    public static Pair\u003cFloat, Float\u003e parseSearchRange(Optional\u003cString\u003e searchRange) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":347,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(searchRange);","lastModifiedDate":"2024-03-28"},{"lineNumber":348,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":349,"author":{"gitId":"ruijietay"},"content":"        if (searchRange.isPresent() \u0026\u0026 !searchRange.get().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":350,"author":{"gitId":"ruijietay"},"content":"            String trimmedRange \u003d searchRange.get().trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":351,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":352,"author":{"gitId":"ruijietay"},"content":"            if (!FindCommand.isValidRange(trimmedRange)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":353,"author":{"gitId":"ruijietay"},"content":"                throw new ParseException(FindCommandMessages.MESSAGE_USAGE_RANGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":354,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":355,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":356,"author":{"gitId":"ruijietay"},"content":"            String[] range \u003d searchRange.get().split(\",\\\\s*\");","lastModifiedDate":"2024-03-28"},{"lineNumber":357,"author":{"gitId":"ruijietay"},"content":"            Float fromRange \u003d Float.valueOf(range[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":358,"author":{"gitId":"ruijietay"},"content":"            Float toRange \u003d Float.valueOf(range[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":359,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":360,"author":{"gitId":"ruijietay"},"content":"            if (fromRange \u003e toRange) {","lastModifiedDate":"2024-03-28"},{"lineNumber":361,"author":{"gitId":"ruijietay"},"content":"                throw new ParseException(FindCommandMessages.MESSAGE_USAGE_RANGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":362,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":363,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":364,"author":{"gitId":"ruijietay"},"content":"            return new Pair\u003c\u003e(fromRange, toRange);","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":366,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":367,"author":{"gitId":"ruijietay"},"content":"        return new Pair\u003c\u003e(0f, Float.MAX_VALUE);","lastModifiedDate":"2024-03-31"},{"lineNumber":368,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"RyanNgWH":12,"bgopi23":14,"ruijietay":82,"jjchee77":156,"-":105}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"        return this.prefix;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        return this.prefix \u003d\u003d null ? 0 : this.prefix.hashCode();","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        return this.prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"ruijietay":3,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/WeightCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_NO_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.WeightCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":" * Parses input arguments and creates a new {@code WeightCommand} object","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"public class WeightCommandParser implements Parser\u003cWeightCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code WeightCommand}","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"     * and returns a {@code WeightCommand} object for execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public WeightCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_NO_PARAMETER_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        String[] argsArray \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        Index index;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            index \u003d ParserUtil.parseIndex(argsArray[0]);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_INVALID_PARAMETER_WEIGHT, ive);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        // If there is no value specified for the weight, user is deleting the last added weight value.","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        if (argsArray.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            return new WeightCommand(index, new WeightEntry(new AbstractMap.SimpleEntry\u003c\u003e(","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"                    WeightEntry.getTimeOfExecution(), new Weight(0f))));","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // Else, user is adding a new weight value.","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        return new WeightCommand(index, new WeightEntry(new AbstractMap.SimpleEntry\u003c\u003e(","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"                WeightEntry.getTimeOfExecution(),","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseWeight(Optional.of(argsArray[1])))));","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":54}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        this.persons \u003d new UniquePersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        return this.persons.contains(person);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        this.persons.add(p);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        this.persons.setPerson(target, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"        this.persons.remove(key);","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"                .add(\"persons\", this.persons)","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        return this.persons.asUnmodifiableObservableList();","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"        return this.persons.equals(otherAddressBook.persons);","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"        return this.persons.hashCode();","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":9,"-":121}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"        initQrCodes();","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        return this.userPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        return this.userPrefs.getGuiSettings();","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        this.userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        return this.userPrefs.getAddressBookFilePath();","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        this.userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"        // Delete QR codes of every person in the address book","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"        this.addressBook.getPersonList().forEach(Person::deleteQrCode);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"        return this.addressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        return this.addressBook.hasPerson(person);","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        this.addressBook.removePerson(target);","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"dillontkh"},"content":"        target.deleteQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"dillontkh"},"content":"        person.generateQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        this.addressBook.addPerson(person);","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"dillontkh"},"content":"        target.deleteQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"dillontkh"},"content":"        editedPerson.generateQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"        this.addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"     * Initialize QR codes for all persons in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"    public void initQrCodes() {","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"        for (Person person : this.addressBook.getPersonList()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"            person.generateQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"        return this.filteredPersons;","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"        this.filteredPersons.setPredicate(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"ruijietay"},"content":"        return this.addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":17,"-":134,"dillontkh":17}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        return this.guiSettings;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        return this.addressBookFilePath;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        return this.guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        return Objects.hash(this.guiSettings, this.addressBookFilePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        sb.append(\"Gui Settings : \" + this.guiSettings);","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        sb.append(\"\\nLocal data file location : \" + this.addressBookFilePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":7,"-":81}},{"path":"src/main/java/seedu/address/model/exercise/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.model.exercise;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * Represents an exercise in FitBook.","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"public class Exercise {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"    public static final String NAME_CONSTRAINT \u003d \"Exercise name should not be empty\";","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    public static final int SETS_LIMIT \u003d 1_000_000;","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    public static final String SETS_CONSTRAINT \u003d","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"        String.format(\"Number of sets should be a number greater than 0 and less than or equals to %d\", SETS_LIMIT);","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    public static final int REPS_LIMIT \u003d 1_000_000;","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    public static final String REPS_CONSTRAINT \u003d","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"        String.format(\"Number of reps should be a number greater than 0 and less than or equals to %d\", REPS_LIMIT);","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    public static final int BREAK_LIMIT \u003d 1_000_000;","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    public static final String BREAK_CONSTRAINT \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"        String.format(","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"            \"Break time in seconds between sets should be a number greater or equal to 0 and less than or equals to %d\",","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"            BREAK_LIMIT);","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    public static final Integer DEFAULT_SETS \u003d 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    public static final Integer DEFAULT_REPS \u003d 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    public static final Integer DEFAULT_BREAK \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    private final String name;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    private final Integer sets;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    private final Integer reps;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    private final Integer breakBetweenSets;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     * Constructs an {@code Exercise}.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     * @param name             Name of the exercise.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     * @param sets             Number of sets.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     * @param reps             Number of repetitions per set.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"     * @param breakBetweenSets Break time in seconds between sets.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    public Exercise(String name, Integer sets, Integer reps, Integer breakBetweenSets) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(sets);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(reps);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(breakBetweenSets);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        this.breakBetweenSets \u003d breakBetweenSets;","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"     * Returns true if the given string represents a valid exercise name.","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"     * @param exerciseName The exercise name to be validated.","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"     * @return true if the exercise name is valid, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    public static boolean isValidName(String exerciseName) {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        return !exerciseName.isEmpty();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"     * Returns true if the given Integer represents a valid number of sets.","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"     * @param sets The number of sets to be validated.","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"     * @return true if the number of sets is valid, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"    public static boolean isValidSets(Integer sets) {","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"        return sets \u003e 0 \u0026\u0026 sets \u003c\u003d SETS_LIMIT;","lastModifiedDate":"2024-04-09"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"     * Returns true if the given Integer represents a valid number of reps.","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     * @param reps The number of reps to be validated.","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     * @return true if the number of reps is valid, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    public static boolean isValidReps(Integer reps) {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"        return reps \u003e 0 \u0026\u0026 reps \u003c\u003d REPS_LIMIT;","lastModifiedDate":"2024-04-09"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"     * Returns true if the given Integer represents a valid break time between sets.","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"     * @param breakBetweenSets The break time to be validated.","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"     * @return true if the break time is valid, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"    public static boolean isValidBreakBetweenSets(Integer breakBetweenSets) {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"        return breakBetweenSets \u003e\u003d 0 \u0026\u0026 breakBetweenSets \u003c\u003d BREAK_LIMIT;","lastModifiedDate":"2024-04-09"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"     * Returns the name of the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"     * @return The name of the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"    public String getName() {","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        return this.name;","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"     * Returns the number of sets for the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"     * @return The number of sets for the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"    public int getSets() {","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        return this.sets;","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"     * Returns the number of reps for the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"     * @return The number of reps for the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"    public int getReps() {","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        return this.reps;","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"     * Returns the break time in seconds for the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"jjchee77"},"content":"     * @return The break time in seconds for the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"    public int getBreakBetweenSets() {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"        return this.breakBetweenSets;","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"jjchee77"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"        if (!(other instanceof Exercise)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"        Exercise otherExercise \u003d (Exercise) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"        return this.name.equals(otherExercise.getName());","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"        return Objects.hash(this.name);","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"jjchee77"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"        return String.format(\"%s: %d sets of %d reps, %d min break between sets\",","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"            this.name, this.sets, this.reps, this.breakBetweenSets);","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":8,"jjchee77":150}},{"path":"src/main/java/seedu/address/model/exercise/ExerciseSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.model.exercise;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * Represents a set of Exercises of a client.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"public class ExerciseSet extends Attribute\u003cSet\u003cExercise\u003e\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     * Constructs an {@code ExerciseSet}.","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     * @param exercises Set of valid exercises.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    public ExerciseSet(Set\u003cExercise\u003e exercises) {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"        super(exercises);","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(exercises);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Returns an immutable exercise set, which throws","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @return An immutable set of exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    public Set\u003cExercise\u003e getValue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        return Collections.unmodifiableSet(super.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * Checks if the given object matches the exercise set.","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     * @param other The object to check for a match.","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     * @return True if the object matches the exercise set, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"    public boolean isMatch(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        // Check that the other is a Set","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        if (!(other instanceof Set\u003c?\u003e)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        Set\u003c?\u003e otherSet \u003d (Set\u003c?\u003e) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        if (otherSet.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        if (!(otherSet.iterator().next() instanceof Exercise)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        // Already checked that set contains Exercise objects, so it is safe to cast","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e otherExercises \u003d (Set\u003cExercise\u003e) otherSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        return otherExercises.stream().allMatch(this::contains);","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"     * Determine if the exercise set contains the specified exercise.","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"     * @param otherValue Exercise to check against.","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"     * @return True if exercise set contains the specified exercise, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"    public boolean contains(Object otherValue) {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        if (!(otherValue instanceof Exercise)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        Exercise other \u003d (Exercise) otherValue;","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"        return this.getValue().stream().anyMatch(exercise -\u003e exercise.equals(other));","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     * Checks if the exercise set is equal to another object.","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"     * @return True if the other object is an ExerciseSet with the same set of exercises, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"        if (!(other instanceof ExerciseSet)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"        ExerciseSet otherExerciseSet \u003d (ExerciseSet) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        return this.getValue().equals(otherExerciseSet.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"     * Returns a string representation of the exercise set.","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"     * @return A string representation of the exercise set.","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jjchee77":110}},{"path":"src/main/java/seedu/address/model/exercise/ExerciseToAdd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.model.exercise;","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.util.Objects;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * Represents an exercise to be added to a client.","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"public class ExerciseToAdd {","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"    private final String name;","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    private final Optional\u003cInteger\u003e sets;","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    private final Optional\u003cInteger\u003e reps;","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    private final Optional\u003cInteger\u003e breakBetweenSets;","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * Constructs an {@code Exercise}.","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     * @param name Name of the exercise.","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * @param sets Optional number of sets.","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * @param reps Optional number of repetitions per set.","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     * @param breakBetweenSets Optional break time in seconds between sets.","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    public ExerciseToAdd(String name, Optional\u003cInteger\u003e sets, Optional\u003cInteger\u003e reps,","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"                         Optional\u003cInteger\u003e breakBetweenSets) {","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(sets);","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(reps);","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        requireNonNull(breakBetweenSets);","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        this.breakBetweenSets \u003d breakBetweenSets;","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     * Returns the optional name of the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     * @return The optional name of the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    public String getName() {","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        return this.name;","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"     * Returns the optional number of sets for the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"     * @return The optional number of sets for the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    public Optional\u003cInteger\u003e getSets() {","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        return this.sets;","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"     * Returns the optional number of reps for the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"     * @return The optional number of reps for the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"    public Optional\u003cInteger\u003e getReps() {","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        return this.reps;","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"     * Returns the optional break time in seconds for the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"     * @return The optional break time in seconds for the exercise to be added.","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"    public Optional\u003cInteger\u003e getBreakBetweenSets() {","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        return this.breakBetweenSets;","lastModifiedDate":"2024-04-11"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"            return true;","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"        if (!(other instanceof ExerciseToAdd)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-04-11"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        ExerciseToAdd otherExerciseToAdd \u003d (ExerciseToAdd) other;","lastModifiedDate":"2024-04-11"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"        return this.name.equals(otherExerciseToAdd.getName());","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        return Objects.hash(this.name);","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"jjchee77":93}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.AddressMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.AddressMessages.VALIDATION_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * {@link #isValidAddress(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class Address extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"        super(address);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"        if (!address.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the address value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the address value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherAddress.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":26,"bgopi23":2,"jjchee77":1,"-":49}},{"path":"src/main/java/seedu/address/model/person/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * Defines an attribute in a Person in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"public abstract class Attribute\u003cT extends Object\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"    private final T value;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"    protected Attribute(T value) {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"     * Gets the value stored in this attribute.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @return Value stored in this attribute.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public T getValue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        return this.value;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     * Determines if a specified value is a match with the value stored in this","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * attriute.","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    public abstract boolean isMatch(Object otherValue);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"RyanNgWH":27,"jjchee77":3}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.EmailMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.EmailMessages.VALIDATION_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class Email extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        super(email);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"        if (!email.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the email value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the email value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherEmail.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":24,"bgopi23":2,"jjchee77":1,"-":50}},{"path":"src/main/java/seedu/address/model/person/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.HeightMessages.MESSAGE_NO_HEIGHT;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.HeightMessages.MESSAGE_RANGE;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.HeightMessages.VALIDATION_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s height in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"public class Height extends Attribute\u003cFloat\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public static final Float HEIGHT_MAX_VALUE \u003d 5000f;","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code height}.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"     * @param height A height.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public Height(Float height) {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        super(height);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(height);","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     * Returns true if a given string is a valid height.","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    public static boolean isValidHeight(String test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Float.valueOf(test) \u003c\u003d HEIGHT_MAX_VALUE;","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"     * Determine if the height value stored is within the range specified in heightRange.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"     * Returns true if specified value is within heightRange.","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"     * @param heightRange Range of height to check against.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"     * @return True if value is falls within heightRange, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object heightRange) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        if (!(heightRange instanceof Pair)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        Pair\u003c?, ?\u003e pair \u003d (Pair\u003c?, ?\u003e) heightRange;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        if (!(pair.getKey() instanceof Float) || !(pair.getValue() instanceof Float)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        Float firstVal \u003d (Float) pair.getKey();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        Float secondVal \u003d (Float) pair.getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"        assert (secondVal - firstVal \u003e\u003d 0) : MESSAGE_RANGE;","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"        // if a client has no height value","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"        if (this.isZero()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"            return false;","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        return (this.getValue() \u003e\u003d firstVal \u0026\u0026 this.getValue() \u003c\u003d secondVal);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"     * Checks if the height object has a value of 0","lastModifiedDate":"2024-04-06"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"     * @return true if the weight object has a value of 0 and false otherwise","lastModifiedDate":"2024-04-06"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"    public boolean isZero() {","lastModifiedDate":"2024-04-06"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"        return getValue() \u003d\u003d 0f;","lastModifiedDate":"2024-04-06"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"     * Adds a heading for the height field.","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"     * Empty height values (i.e. 0f) will be formatted as \"N/A\" for better clarity.","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"    public String getFormattedHeight() {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"        if (this.isZero()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"            return MESSAGE_NO_HEIGHT;","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"        return \"Height: \" + this.getValue().toString() + \" cm\";","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles null types as well.","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Height)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        Height otherHeight \u003d (Height) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        // Use the equals() method of the underlying attribute to compare values","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherHeight.getValue());","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"dillontkh"},"content":"     * Check if the value is valid (i.e. greater than 0).","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"dillontkh"},"content":"    public boolean isValid() {","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"bgopi23"},"content":"        return this.getValue() \u003e 0f;","lastModifiedDate":"2024-04-06"},{"lineNumber":118,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"bgopi23":21,"ruijietay":91,"dillontkh":7}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.NameMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.NameMessages.VALIDATION_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class Name extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        super(name);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the name value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the name value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherName.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":23,"bgopi23":2,"-":51}},{"path":"src/main/java/seedu/address/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s note in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class Note extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code note}.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"     * @param note A note.","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    public Note(String note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        super(note);","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the note value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the note value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherNote.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"RyanNgWH":23,"ruijietay":41}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PersonMessages.MESSAGE_CANT_DELETE_QR;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PersonMessages.MESSAGE_DELETED_QR;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PersonMessages.MESSAGE_DOES_NOT_EXIST;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PersonMessages.MESSAGE_GENERATED_QR;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.WriterException;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.QrCodeGenerator;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.exceptions.AttributeNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.TagSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":" * immutable.","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Person.class);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    private final WeightMap weights;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    private final Height height;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    private final Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    private final TagSet tags;","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"    private final ExerciseSet exerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"    public Person(Name name, Phone phone, Email email, Address address, NavigableMap\u003cLocalDateTime, Weight\u003e weights,","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"                  Height height, Note note, Set\u003cTag\u003e tags, ExerciseSet exerciseSet) {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        requireAllNonNull(name, phone, email, address, weights, height, note, tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d new WeightMap(weights);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d height;","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        tagSet.addAll(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        this.tags \u003d new TagSet(tagSet);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        this.exerciseSet \u003d exerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"     * Get the value of the specified attribute.","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     * @param attribute Attribute to retrieve","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"     * @return Value of the specified attribute","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"    public Attribute\u003c? extends Object\u003e getAttribute(PersonAttribute attribute) {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        switch (attribute) {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        case NAME:","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"            return this.name;","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        case PHONE:","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"            return this.phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        case EMAIL:","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"            return this.email;","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        case ADDRESS:","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"            return this.address;","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        case NOTE:","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"            return this.note;","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        case WEIGHT:","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"            return this.weights;","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        case HEIGHT:","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"            return this.height;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"        case TAGS:","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"            return this.tags;","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        case EXERCISES:","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"            return this.exerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"            throw new AttributeNotFoundException();","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        return this.name;","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        return this.phone;","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        return this.email;","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"        return this.address;","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"    public Optional\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e getLatestWeight() {","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        return Optional.ofNullable(this.weights.getValue().lastEntry());","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"     * Returns an immutable navigable map, which throws","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"    public NavigableMap\u003cLocalDateTime, Weight\u003e getWeights() {","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        return this.weights.getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"    public Height getHeight() {","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"        return this.height;","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"    public Note getNote() {","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"        return this.note;","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"        return this.tags.getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"    public ExerciseSet getExerciseSet() {","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"        return this.exerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"dillontkh"},"content":"     * Retrieves the QR code path.","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"dillontkh"},"content":"     * @return the path of the generated QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"dillontkh"},"content":"    public Path getQrCodePath() {","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"dillontkh"},"content":"        return QrCodeGenerator.getQrCodePath(this);","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"dillontkh"},"content":"     * Generates a QR code for the person.","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"dillontkh"},"content":"    public void generateQrCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"dillontkh"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"dillontkh"},"content":"            QrCodeGenerator.generateQrCode(this);","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"            logger.info(MESSAGE_GENERATED_QR + this);","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"dillontkh"},"content":"        } catch (WriterException | IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":171,"author":{"gitId":"dillontkh"},"content":"            logger.warning(\"Unable to generate QR code for \" + this);","lastModifiedDate":"2024-03-15"},{"lineNumber":172,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"                \u0026\u0026 otherPerson.getAttribute(PersonAttribute.NAME).equals(getAttribute(PersonAttribute.NAME))","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"                \u0026\u0026 otherPerson.getAttribute(PersonAttribute.PHONE).equals(getAttribute(PersonAttribute.PHONE));","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"ruijietay"},"content":"        return this.name.equals(otherPerson.name)","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.phone.equals(otherPerson.phone)","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.email.equals(otherPerson.email)","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.address.equals(otherPerson.address)","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.tags.equals(otherPerson.tags)","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.note.equals(otherPerson.note)","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.exerciseSet.equals(otherPerson.exerciseSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":217,"author":{"gitId":"ruijietay"},"content":"        return Objects.hash(this.name, this.phone, this.email, this.address, this.tags, this.exerciseSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"ruijietay"},"content":"                .add(\"name\", this.name)","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"ruijietay"},"content":"                .add(\"phone\", this.phone)","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"ruijietay"},"content":"                .add(\"email\", this.email)","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"ruijietay"},"content":"                .add(\"address\", this.address)","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"ruijietay"},"content":"                .add(\"note\", this.note)","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"ruijietay"},"content":"                .add(\"tags\", this.tags)","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":232,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":233,"author":{"gitId":"dillontkh"},"content":"     * Deletes the QR code for the person.","lastModifiedDate":"2024-03-15"},{"lineNumber":234,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":235,"author":{"gitId":"dillontkh"},"content":"     * @return true if a QR code was deleted, false otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":236,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"dillontkh"},"content":"    public boolean deleteQrCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"dillontkh"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":239,"author":{"gitId":"dillontkh"},"content":"            boolean result \u003d Files.deleteIfExists(this.getQrCodePath());","lastModifiedDate":"2024-03-15"},{"lineNumber":240,"author":{"gitId":"dillontkh"},"content":"            if (result) {","lastModifiedDate":"2024-03-15"},{"lineNumber":241,"author":{"gitId":"bgopi23"},"content":"                logger.info(MESSAGE_DELETED_QR + this);","lastModifiedDate":"2024-04-10"},{"lineNumber":242,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":243,"author":{"gitId":"bgopi23"},"content":"                logger.info(String.format(MESSAGE_DOES_NOT_EXIST, this));","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":245,"author":{"gitId":"dillontkh"},"content":"            return result;","lastModifiedDate":"2024-03-15"},{"lineNumber":246,"author":{"gitId":"dillontkh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":247,"author":{"gitId":"bgopi23"},"content":"            logger.warning(String.format(MESSAGE_CANT_DELETE_QR, this));","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"dillontkh"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":249,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":250,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":252,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":253,"author":{"gitId":"dillontkh"},"content":"     * Generates a formatted message for the Person.","lastModifiedDate":"2024-03-24"},{"lineNumber":254,"author":{"gitId":"dillontkh"},"content":"     * Only fields with values are included.","lastModifiedDate":"2024-03-24"},{"lineNumber":255,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":256,"author":{"gitId":"dillontkh"},"content":"    public String getFormattedMessage() {","lastModifiedDate":"2024-03-24"},{"lineNumber":257,"author":{"gitId":"dillontkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-24"},{"lineNumber":258,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":259,"author":{"gitId":"ruijietay"},"content":"        sb.append(\"Name: \").append(this.name);","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"ruijietay"},"content":"        sb.append(\" | Phone: \").append(this.phone);","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":262,"author":{"gitId":"ruijietay"},"content":"        if (!this.email.getValue().isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"ruijietay"},"content":"            sb.append(\" | Email: \").append(this.email);","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":265,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":266,"author":{"gitId":"ruijietay"},"content":"        if (!this.address.getValue().isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"ruijietay"},"content":"            sb.append(\"\\nAddress: \").append(this.address);","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":269,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":270,"author":{"gitId":"ruijietay"},"content":"        if (!this.note.getValue().isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"ruijietay"},"content":"            sb.append(\" | Note: \").append(this.note);","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":273,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":274,"author":{"gitId":"ruijietay"},"content":"        if (!this.weights.getValue().isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"ruijietay"},"content":"            sb.append(\" | Latest Weight: \").append(this.getLatestWeight().get().getValue().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":276,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":277,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":278,"author":{"gitId":"bgopi23"},"content":"        if (!(this.height.isZero())) {","lastModifiedDate":"2024-04-06"},{"lineNumber":279,"author":{"gitId":"ruijietay"},"content":"            sb.append(\" | Height: \").append(this.height);","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":281,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":282,"author":{"gitId":"ruijietay"},"content":"        if (!this.getTags().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":283,"author":{"gitId":"ruijietay"},"content":"            sb.append(\" | Tags: \").append(this.tags);","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":285,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":286,"author":{"gitId":"dillontkh"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":288,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"dillontkh"},"content":"     * Attributes of a Person","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":292,"author":{"gitId":"dillontkh"},"content":"    public enum PersonAttribute {","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"dillontkh"},"content":"        NAME,","lastModifiedDate":"2024-03-24"},{"lineNumber":294,"author":{"gitId":"dillontkh"},"content":"        PHONE,","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"dillontkh"},"content":"        EMAIL,","lastModifiedDate":"2024-03-24"},{"lineNumber":296,"author":{"gitId":"dillontkh"},"content":"        ADDRESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":297,"author":{"gitId":"ruijietay"},"content":"        WEIGHT,","lastModifiedDate":"2024-03-26"},{"lineNumber":298,"author":{"gitId":"ruijietay"},"content":"        HEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":299,"author":{"gitId":"ruijietay"},"content":"        NOTE,","lastModifiedDate":"2024-03-26"},{"lineNumber":300,"author":{"gitId":"jjchee77"},"content":"        TAGS,","lastModifiedDate":"2024-03-30"},{"lineNumber":301,"author":{"gitId":"jjchee77"},"content":"        EXERCISES","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":32,"bgopi23":9,"ruijietay":81,"jjchee77":12,"-":98,"dillontkh":71}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PhoneMessages.EXPECTED_FORMAT_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PhoneMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.PhoneMessages.REQUIRED_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class Phone extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        super(phone);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        return test.matches(REQUIRED_REGEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * Determines if the phone value stored is of an expected format.","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     * @return true if the phone number is of an expected format, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    public boolean isExpectedFormat() {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        String phoneNumber \u003d this.getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        if (!phoneNumber.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"            return phoneNumber.matches(EXPECTED_FORMAT_REGEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the phone value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the phone value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherPhone.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":21,"bgopi23":3,"jjchee77":16,"-":50}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            FXCollections.unmodifiableObservableList(this.internalList);","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        return this.internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        this.internalList.add(toAdd);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        int index \u003d this.internalList.indexOf(target);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        this.internalList.set(index, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        if (!this.internalList.remove(toRemove)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        this.internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        this.internalList.setAll(persons);","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"        return this.internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        return this.internalList.hashCode();","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"        return this.internalList.toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruijietay":13,"-":137}},{"path":"src/main/java/seedu/address/model/person/exceptions/AttributeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * Signals that the operation is unable to find the specified attribute.","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"public class AttributeNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":7}},{"path":"src/main/java/seedu/address/model/person/messages/AddressMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Address and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class AddressMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    /*","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":14}},{"path":"src/main/java/seedu/address/model/person/messages/EmailMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Email and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class EmailMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":29}},{"path":"src/main/java/seedu/address/model/person/messages/HeightMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Height and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class HeightMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_RANGE \u003d \"Range should be more than or equals to zero.\"","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"            + \" Should have been handled in Parser class\";","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_HEIGHT \u003d \"Height: N/A\";","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_JSON_EMPTY_HEIGHT \u003d \"Height value specified in JSON cannot be an empty string.\";","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"            \"Height value can only be a number between 0 and 5000 (inclusive).\";","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:[0-9]+(?:\\\\.[0-9]*)?|\\\\.[0-9]+)?$\";","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":15}},{"path":"src/main/java/seedu/address/model/person/messages/NameMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Name and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class NameMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain alphanumeric\"","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"            + \" characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    /*","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":15}},{"path":"src/main/java/seedu/address/model/person/messages/PersonMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Person and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class PersonMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_GENERATED_QR \u003d \"Generated QR code for \";","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DELETED_QR \u003d \"Deleted QR code for \";","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DOES_NOT_EXIST \u003d \"Unable to delete QR code for %1$s for as it does not exist\";","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CANT_DELETE_QR \u003d \"Unable to delete QR code for %1$s\";","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":12}},{"path":"src/main/java/seedu/address/model/person/messages/PhoneMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Phone and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class PhoneMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"            \"Phone numbers should only contain digits and have a minimum length of 1.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_EXPECTED \u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            \"The phone number supplied does not appear to be from Singapore,\\nfor other types of numbers, \"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"                    + \"please ensure that you have keyed it in correctly.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"    public static final String EXPECTED_FORMAT_REGEX \u003d \"^[689]\\\\d{7}$\";","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"    public static final String REQUIRED_REGEX \u003d \"^\\\\d+$\";","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":15}},{"path":"src/main/java/seedu/address/model/person/messages/TagMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Tag and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class TagMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":11}},{"path":"src/main/java/seedu/address/model/person/messages/WeightMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.model.person.messages;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by Weight and associated classes.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class WeightMessages {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_RANGE \u003d \"Range should be more than or equals to zero.\"","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"            + \" Should have been handled in Parser class\";","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_EMPTY_WEIGHT_MAP \u003d \"There are no more weight values to be removed. \"","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \"This client has no more weight values associated with them.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"            \"Weight value can only be a number between 0 and 5000 (inclusive).\";","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONSTRAINTS_DATE \u003d \"Date value is invalid. Should follow the format \"","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"            + \"YYYY-MM-DDTHH:mm:ss, e.g. 2024-03-27T10:15:30\";","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_JSON_KEY_NOT_FOUND \u003d \"Key value not found in JSON file.\";","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_JSON_EMPTY_WEIGHT \u003d \"Weight value specified in JSON cannot be an empty string.\";","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:[0-9]+(?:\\\\.[0-9]*)?|\\\\.[0-9]+)?$\";","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"bgopi23":19}},{"path":"src/main/java/seedu/address/model/person/predicates/AddressContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Address} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class AddressContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Address}","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * contains a given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public AddressContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.ADDRESS);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/AlwaysTruePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" * Tests that always returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"public class AlwaysTruePredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"     * Constructs a predicate to that is always true","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    public AlwaysTruePredicate() {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"        super(\"\", null);","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"RyanNgWH":21}},{"path":"src/main/java/seedu/address/model/person/predicates/CombinedPredicates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * Defines a Predicate which combines multiple {@code SearchPredicates}.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class CombinedPredicates implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    private final SearchPredicate\u003c? extends Object\u003e[] predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    @SafeVarargs","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    public CombinedPredicates(SearchPredicate\u003c? extends Object\u003e... predicates) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        return Arrays.stream(this.predicates).allMatch(predicate -\u003e predicate.test(person));","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        if (!(other instanceof CombinedPredicates)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates otherCombinedPredicate \u003d (CombinedPredicates) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        return Arrays.equals(this.predicates, otherCombinedPredicate.predicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        return new ToStringBuilder(this).add(\"predicates\", this.predicates).toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":42,"ruijietay":3}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Email} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class EmailContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Email} contains","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * a given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public EmailContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.EMAIL);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/HeightContainsRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":" * Tests that a {@code Person}\u0027s {@code Height} falls within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"public class HeightContainsRangePredicate extends SearchPredicate\u003cPair\u003cFloat, Float\u003e\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Height} falls within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"     * @param range range to test against","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    public HeightContainsRangePredicate(Pair\u003cFloat, Float\u003e range) {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"        super(range, PersonAttribute.HEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(range);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        return new ToStringBuilder(this).add(\"height\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"ruijietay":27}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Name} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class NameContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Name} contains a","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public NameContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.NAME);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/NoteContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Note} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class NoteContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Note} contains a","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public NoteContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.NOTE);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class PhoneContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Phone} contains","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * a given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public PhoneContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.PHONE);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/SearchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * Defines a Predicate in which a {@code Person}\u0027s is to be searched by.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public abstract class SearchPredicate\u003cT extends Object\u003e implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    private final T searchValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    private final PersonAttribute attribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    protected SearchPredicate(T searchValue, PersonAttribute attribute) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        this.searchValue \u003d searchValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * Get the search value of this predicate","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * @return Search value of this predicate","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    protected T getSearchValue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        return this.searchValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"        String attributeString \u003d person.getAttribute(this.attribute).toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"        if (searchValue.toString().isEmpty()) {","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"            return !attributeString.isEmpty();","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"        } else {","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            return person.getAttribute(this.attribute).isMatch(this.searchValue);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        if (!(other instanceof SearchPredicate\u003c?\u003e)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        SearchPredicate\u003c?\u003e otherSearchPredicate \u003d (SearchPredicate\u003c?\u003e) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        return this.searchValue.equals(otherSearchPredicate.searchValue);","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        return new ToStringBuilder(this).add(\"searchValue\", this.searchValue).toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":51,"bgopi23":6,"ruijietay":3}},{"path":"src/main/java/seedu/address/model/person/predicates/TagSetContainsAllTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code TagSet} contains any tags in a given","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * TagSet.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"public class TagSetContainsAllTagsPredicate extends SearchPredicate\u003cSet\u003cTag\u003e\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code TagSet} contains","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     * any tags in a given TagSet.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * @param tags tags to test against","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    public TagSetContainsAllTagsPredicate(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"        super(tags, PersonAttribute.TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"tagset\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"    @Override","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"        String attributeString \u003d person.getAttribute(PersonAttribute.TAGS).toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"        String searchValue \u003d getSearchValue().toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"        if (searchValue.toString().equals(\"[]\")) {","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"            return !attributeString.toString().equals(\"[]\");","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"        } else {","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"            return person.getAttribute(PersonAttribute.TAGS).isMatch(getSearchValue());","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":31,"bgopi23":12}},{"path":"src/main/java/seedu/address/model/person/predicates/WeightMapContainsWeightRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":" * Tests that a {@code Person}\u0027s latest weight value in {@code WeightMap}","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" * contains a weight within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"public class WeightMapContainsWeightRangePredicate extends SearchPredicate\u003cPair\u003cFloat, Float\u003e\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s latest weight value in {@code WeightMap}","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"     *  * contains a weight within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     * @param range range to test against","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public WeightMapContainsWeightRangePredicate(Pair\u003cFloat, Float\u003e range) {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        super(range, PersonAttribute.WEIGHT);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(range);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        return new ToStringBuilder(this).add(\"weightmap\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ruijietay":29}},{"path":"src/main/java/seedu/address/model/person/weight/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.WeightMessages.MESSAGE_RANGE;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.WeightMessages.VALIDATION_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s weight in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"public class Weight extends Attribute\u003cFloat\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public static final Float WEIGHT_MAX_VALUE \u003d 5000f;","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"     * @param weight A weight.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public Weight(Float weight) {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        super(weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     * Returns true if a given string is a valid weight.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    public static boolean isValidWeight(String test) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Float.valueOf(test) \u003c\u003d WEIGHT_MAX_VALUE;","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"     * Checks if the weight object has a value of 0","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"     * @return true if the weight object has a value of 0 and false otherwise","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"    public boolean isZero() {","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        return getValue() \u003d\u003d 0f;","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"     * Determine if the weight value stored is within the range specified in weightRange.","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"     * Returns true if specified value is within weightRange.","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"     * @param weightRange Range of weight to check against.","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"     * @return True if value is falls within weightRange, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object weightRange) {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        if (!(weightRange instanceof Pair)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Pair\u003c?, ?\u003e pair \u003d (Pair\u003c?, ?\u003e) weightRange;","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        if (!(pair.getKey() instanceof Float) || !(pair.getValue() instanceof Float)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        Float firstVal \u003d (Float) pair.getKey();","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        Float secondVal \u003d (Float) pair.getValue();","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"        assert (secondVal - firstVal \u003e\u003d 0) : MESSAGE_RANGE;","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        return (this.getValue() \u003e\u003d firstVal \u0026\u0026 this.getValue() \u003c\u003d secondVal);","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles null types as well.","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Weight)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        Weight otherWeight \u003d (Weight) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        // Use the equals() method of the underlying attribute to compare values","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherWeight.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"bgopi23":11,"ruijietay":84,"dillontkh":1}},{"path":"src/main/java/seedu/address/model/person/weight/WeightEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s weight in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"public class WeightEntry extends Attribute\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code WeightEntry}.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     * @param weightEntry A weight entry containing the date of the recorded weight.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    public WeightEntry(Map.Entry\u003cLocalDateTime, Weight\u003e weightEntry) {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        super(weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"     * Returns a {@code LocalDateTime} that is rounded down to the nearest second.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    public static LocalDateTime getTimeOfExecution() {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        return LocalDateTime.now().withNano(0);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object weightRange) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        return (this.equals(weightRange));","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles null types as well.","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Weight)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        Weight otherWeight \u003d (Weight) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        // Use the equals() method of the underlying attribute to compare values","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherWeight.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ruijietay":64}},{"path":"src/main/java/seedu/address/model/person/weight/WeightMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Represents a map of date-weight values in the address book belonging to a Person.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class WeightMap extends Attribute\u003cNavigableMap\u003cLocalDateTime, Weight\u003e\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code WeightMap}","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"     * @param weightMap Set of valid weights","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public WeightMap(NavigableMap\u003cLocalDateTime, Weight\u003e weightMap) {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        super(weightMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weightMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     * Returns an immutable weight map, which throws","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    public NavigableMap\u003cLocalDateTime, Weight\u003e getValue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        return Collections.unmodifiableNavigableMap(super.getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"     * Determines if the weight values stored falls within the range specified.","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"     * Returns true if any values in the weight map falls within the specified range.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"     * @return True if there exists a weight value that falls within the range, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        if (!(otherValue instanceof Pair)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        Pair\u003c?, ?\u003e pair \u003d (Pair\u003c?, ?\u003e) otherValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        if (!(pair.getKey() instanceof Float) || !(pair.getValue() instanceof Float)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        // Already checked that set contains Float objects, so it is safe to cast","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        Pair\u003cFloat, Float\u003e weightRange \u003d (Pair\u003cFloat, Float\u003e) otherValue;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assert (weightRange.getValue() - weightRange.getKey() \u003e\u003d 0)","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"                : \"Range should be more than or equals to zero. Should have been handled in Parser class\";","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"        // If Person has no weights saved","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"        if (this.getValue().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        Float latestWeight \u003d this.getValue().lastEntry().getValue().getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        return (latestWeight \u003e\u003d weightRange.getKey()) \u0026\u0026 (latestWeight \u003c\u003d weightRange.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof WeightMap)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        WeightMap otherMap \u003d (WeightMap) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherMap.getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ruijietay":84,"dillontkh":5}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.TagMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.TagMessages.VALIDATION_REGEX;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" * {@link #isValidTagName(String)}","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"public class Tag extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"    public static final Set\u003cTag\u003e EMPTY_TAG_SET \u003d Set.of(new Tag(false));","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        super(tagName);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"     * Constructs an empty tag \"[]\"","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"     * @param bool any boolean","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"    private Tag(boolean bool) {","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        super(\"\");","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the tag value stored is a match with a specified string.","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"     * Returns true if specified value is an exact match of the tag value stored (case-insensitive).","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"        return this.getValue().trim().equalsIgnoreCase(other.trim());","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherTag.getValue());","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":24,"bgopi23":12,"-":55,"dillontkh":3}},{"path":"src/main/java/seedu/address/model/tag/TagSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * Represents a set of Tags in the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class TagSet extends Attribute\u003cSet\u003cTag\u003e\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * Constructs a {@code TagSet}","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     * @param tags Set of valid tags","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    public TagSet(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        super(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    public Set\u003cTag\u003e getValue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        return Collections.unmodifiableSet(super.getValue());","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the tags stored is a match with a tags specified.","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"     * Returns true if the other TagSet is a subset of this TagSet.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"     * @param other Other value to check against","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        // Check that other is a Set","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Set\u003c?\u003e)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        Set\u003c?\u003e otherSet \u003d ((Set\u003c?\u003e) other);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // If the set is empty, the user has not specified any tags. Return true to not match by any tags.","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        if (otherSet.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        // Check that other is a Set of Tags","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        if (!(otherSet.iterator().next() instanceof Tag)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        // Already checked that set contains Tag objects, so it is safe to cast","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Set\u003cTag\u003e otherTags \u003d (Set\u003cTag\u003e) otherSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        return otherTags.stream().allMatch(tag -\u003e this.contains(tag));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the tagset contains the specified tag","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Tag to check against","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"     * @return True if tagset contains the specified tag, false otherwise","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    public boolean contains(Object otherValue) {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof Tag)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        Tag other \u003d ((Tag) otherValue);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().stream().anyMatch(tag -\u003e tag.isMatch(other.getValue()));","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        if (!(other instanceof TagSet)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        TagSet otherTag \u003d (TagSet) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherTag.getValue());","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":88,"ruijietay":12}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getWeightMap(\"2024-03-27T10:15:30\u003d80f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"                new Height(192.5f), new Note(\"Likes to swim\"), getTagSet(\"friends\"), new ExerciseSet(new HashSet\u003c\u003e())),","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 30 Lorong 3 Sgn Gardens, #07-18\"), getWeightMap(\"2023-04-21T10:12:12\u003d78f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"                new Height(150f), new Note(\"Likes to swim\"), getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"                new ExerciseSet(new HashSet\u003c\u003e())),","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getWeightMap(\"2023-06-20T10:15:30\u003d76f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"                new Height(167.5f), new Note(\"Likes to swim\"), getTagSet(\"neighbours\"),","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"                new ExerciseSet(new HashSet\u003c\u003e())),","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"                getWeightMap(\"2024-01-20T10:15:33\u003d69f\"), new Height(172.5f), new Note(\"Likes to swim\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"                getTagSet(\"family\"), new ExerciseSet(new HashSet\u003c\u003e())),","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), getWeightMap(\"2023-04-21T10:11:30\u003d73.5f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"                new Height(180.5f), new Note(\"Likes to swim\"), getTagSet(\"classmates\"),","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"                new ExerciseSet(new HashSet\u003c\u003e())),","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getWeightMap(\"2023-09-20T10:19:31\u003d71f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"                new Height(170.5f), new Note(\"Likes to snitch\"), getTagSet(\"colleagues\"),","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"                new ExerciseSet(new HashSet\u003c\u003e()))","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     * Returns an exercise set containing the list of exercises given.","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    public static Set\u003cExercise\u003e getExerciseHashSet(Exercise... exercises) {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"        return new HashSet\u003c\u003e(Arrays.asList(exercises));","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"     * Returns a NavigableMap containing the list of LocalDateTime and Weight values given as strings.","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"    public static NavigableMap\u003cLocalDateTime, Weight\u003egetWeightMap(String... strings) {","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        return Stream.of(strings)","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"            .map(str -\u003e str.split(\"\u003d\"))","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"            .collect(Collectors.toMap(","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"                arr -\u003e LocalDateTime.parse(arr[0].strip()),","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"                arr -\u003e new Weight(Float.parseFloat(arr[1].strip())), (","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"                    existing, replacement) -\u003e existing,","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"                TreeMap::new","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"            ));","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ruijietay":26,"jjchee77":23,"-":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Jackson-friendly version of {@link Exercise}.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"class JsonAdaptedExercise {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    private final String name;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    private final Integer sets;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    private final Integer reps;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    private final Integer breakBetweenSets;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     * Constructs a {@code JsonAdaptedExercise} with the given {@code exerciseName}.","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    public JsonAdaptedExercise(@JsonProperty(\"name\") String name, @JsonProperty(\"sets\") Integer sets,","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"                               @JsonProperty(\"reps\") Integer reps,","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"                               @JsonProperty(\"breakBetweenSets\") Integer breakBetweenSets) {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        this.breakBetweenSets \u003d breakBetweenSets;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * Converts a given {@code Exercise} into this class for Jackson use.","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    public JsonAdaptedExercise(Exercise source) {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        this.name \u003d source.getName();","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.sets \u003d source.getSets();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        this.reps \u003d source.getReps();","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        this.breakBetweenSets \u003d source.getBreakBetweenSets();","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"     * Converts this Jackson-friendly adapted exercise object into the model\u0027s","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"     * {@code Exercise} object.","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"     *                               the adapted exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    public Exercise toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        if (this.name \u003d\u003d null || !Exercise.isValidName(this.name)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"            throw new IllegalValueException(Exercise.NAME_CONSTRAINT);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        if (this.sets \u003d\u003d null || !Exercise.isValidSets(this.sets)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"            throw new IllegalValueException(Exercise.SETS_CONSTRAINT);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        if (this.reps \u003d\u003d null || !Exercise.isValidReps(this.reps)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"            throw new IllegalValueException(Exercise.REPS_CONSTRAINT);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        if (this.breakBetweenSets \u003d\u003d null || !Exercise.isValidBreakBetweenSets(this.breakBetweenSets)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"            throw new IllegalValueException(Exercise.BREAK_CONSTRAINT);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        return new Exercise(this.name, this.sets, this.reps, this.breakBetweenSets);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"ruijietay":5,"jjchee77":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.AddressMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.EmailMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.HeightMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.NameMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.PhoneMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    private final List\u003cJsonAdaptedWeight\u003e weights \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    private final String height;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    private final String note;","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    private final List\u003cJsonAdaptedExercise\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"                             @JsonProperty(\"weights\") List\u003cJsonAdaptedWeight\u003e weights,","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"                             @JsonProperty(\"height\") String height,","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"                             @JsonProperty(\"note\") String note, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"                             @JsonProperty(\"exercises\") List\u003cJsonAdaptedExercise\u003e exercises) {","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        if (weights !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"            this.weights.addAll(weights);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d height;","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        if (exercises !\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"            this.exercises.addAll(exercises);","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        this.name \u003d source.getName().getValue();","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        this.phone \u003d source.getPhone().getValue();","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        this.email \u003d source.getEmail().getValue();","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        this.address \u003d source.getAddress().getValue();","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        this.weights.addAll(source.getWeights().entrySet().stream()","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"            .map(WeightEntry::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"            .map(JsonAdaptedWeight::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d source.getHeight().getValue().toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d source.getNote().getValue();","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        this.tags.addAll(source.getTags().stream()","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        this.exercises.addAll(source.getExerciseSet().getValue().stream()","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"            .map(JsonAdaptedExercise::new)","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"     * {@code Person} object.","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"     *                               the adapted person.","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedTag tag : this.tags) {","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        final List\u003cWeightEntry\u003e personWeights \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedWeight weight : this.weights) {","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"            personWeights.add(weight.toModelType());","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"        final List\u003cExercise\u003e personExercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedExercise exercise : this.exercises) {","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"            personExercises.add(exercise.toModelType());","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"        final Set\u003cExercise\u003e peronExerciseHashSet \u003d new HashSet\u003c\u003e(personExercises);","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"        if (!Name.isValidName(this.name)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(NameMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"        final Name modelName \u003d new Name(this.name);","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"        if (this.phone \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"        if (!Phone.isValidPhone(this.phone)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(PhoneMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"        final Phone modelPhone \u003d new Phone(this.phone);","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"        if (this.email \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"        if (!this.email.isEmpty() \u0026\u0026 !Email.isValidEmail(this.email)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(EmailMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        final Email modelEmail \u003d new Email(this.email);","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"        if (this.address \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"ruijietay"},"content":"        if (!this.address.isEmpty() \u0026\u0026 !Address.isValidAddress(this.address)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(AddressMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"ruijietay"},"content":"        final Address modelAddress \u003d new Address(this.address);","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"ruijietay"},"content":"        final NavigableMap\u003cLocalDateTime, Weight\u003e modelWeights \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedWeight jsonAdaptedWeight : this.weights) {","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"ruijietay"},"content":"            WeightEntry weightEntry \u003d jsonAdaptedWeight.toModelType();","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"ruijietay"},"content":"            modelWeights.put(weightEntry.getValue().getKey(), weightEntry.getValue().getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"ruijietay"},"content":"        if (this.height \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"ruijietay"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Height.class.getSimpleName()));","lastModifiedDate":"2024-04-11"},{"lineNumber":172,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"        if (!this.height.isEmpty() \u0026\u0026 !Height.isValidHeight(this.height)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(HeightMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"ruijietay"},"content":"        if (this.height.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(HeightMessages.MESSAGE_JSON_EMPTY_HEIGHT);","lastModifiedDate":"2024-04-11"},{"lineNumber":178,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"ruijietay"},"content":"        final Height modelHeight \u003d new Height(Float.valueOf(this.height));","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"        if (this.note \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"ruijietay"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2024-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"ruijietay"},"content":"        final Note modelNote \u003d new Note(this.note);","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":187,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"jjchee77"},"content":"        final ExerciseSet modelExerciseSet \u003d new ExerciseSet(peronExerciseHashSet);","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"ruijietay"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelWeights,","lastModifiedDate":"2024-03-30"},{"lineNumber":191,"author":{"gitId":"jjchee77"},"content":"            modelHeight, modelNote, modelTags, modelExerciseSet);","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RyanNgWH":4,"bgopi23":11,"ruijietay":66,"jjchee77":29,"-":84}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.TagMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        this.tagName \u003d source.getValue();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        return this.tagName;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     * {@code Tag} object.","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     *                               the adapted tag.","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        if (!Tag.isValidTagName(this.tagName)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(TagMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        return new Tag(this.tagName);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RyanNgWH":4,"bgopi23":2,"ruijietay":4,"-":41}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedWeight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.WeightMessages;","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":" * Jackson-friendly version of {@link Weight} with {@code LocalDateTime} as key.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"class JsonAdaptedWeight {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    private final String weightDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    private final String weightValue;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code JsonAdaptedWeight} with the given {@code weightDate} and {@code weightValue}.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public JsonAdaptedWeight(@JsonProperty(\"weightDate\") String weightDate,","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"                             @JsonProperty(\"weightValue\") String weightValue) {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        this.weightDate \u003d weightDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        this.weightValue \u003d weightValue;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public JsonAdaptedWeight(WeightEntry source) {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.weightDate \u003d source.getValue().getKey().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        this.weightValue \u003d source.getValue().getValue().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"     * Converts this Jackson-friendly adapted date-weight key-value pair into the model\u0027s","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"     * {@code Entry\u003cLocalDateTime, Weight\u003e} object.","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"     *                               the adapted tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    public WeightEntry toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(this.weightDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"            // Invalid weight modification in JSON file","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"            if (!Weight.isValidWeight(this.weightValue)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"                throw new IllegalValueException(WeightMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"            return new WeightEntry(new AbstractMap.SimpleEntry\u003c\u003e(date, new Weight(Float.valueOf(this.weightValue))));","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"            // Invalid date modification in JSON file","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(WeightMessages.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"            // Date or weight key not found in JSON file","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(WeightMessages.MESSAGE_JSON_KEY_NOT_FOUND);","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"            // Weight specified to be an empty string. In the case of parsing from JSON, this is not allowed","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"            throw new IllegalValueException(WeightMessages.MESSAGE_JSON_EMPTY_WEIGHT);","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bgopi23":5,"ruijietay":64}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     * Constructs a {@code JsonAddressBookStorage} with the given file path.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param filePath The file path to store the json formatted address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"        assert(filePath !\u003d null);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        return this.filePath;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        return readAddressBook(this.filePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        saveAddressBook(addressBook, this.filePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruijietay":3,"jjchee77":5,"-":77}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        this.persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : this.persons) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruijietay":2,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        return this.filePath;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        return readUserPrefs(this.filePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        JsonUtil.saveJsonFile(userPrefs, this.filePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ruijietay":3,"-":44}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        return this.userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        return this.userPrefsStorage.readUserPrefs();","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        this.userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        return this.addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        return readAddressBook(this.addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        return this.addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        saveAddressBook(addressBook, this.addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        this.addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":8,"-":70}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        this.commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        String commandText \u003d this.commandTextField.getText();","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            CommandResult result \u003d this.commandExecutor.execute(commandText);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"            // Do not clear if the user is editing a note","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"            if (!result.getFeedbackToUser().contains(NoteCommandMessages.MESSAGE_EDIT_FEEDBACK_TO_USER)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"                this.commandTextField.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        this.commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        ObservableList\u003cString\u003e styleClass \u003d this.commandTextField.getStyleClass();","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"     * Disables the command input field to prevent user input.","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"    public void freezeCommandBox() {","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        this.commandTextField.setDisable(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        this.commandTextField.clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        this.commandTextField.setPromptText(\"Exiting...\");","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"dillontkh"},"content":"     * Sets the text of the commandTextField to the specified text.","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"dillontkh"},"content":"    public void setText(String text) {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        this.commandTextField.setText(text);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"dillontkh"},"content":"     * Moves the cursor to the end of the command text field.","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"dillontkh"},"content":"    public void moveCursorToEnd() {","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        this.commandTextField.positionCaret(Integer.MAX_VALUE);","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"bgopi23":6,"ruijietay":11,"-":79,"dillontkh":15}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import java.awt.Desktop;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import java.net.URI;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t17-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    public static final String[][] COMMAND_DESCRIPTIONS \u003d {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"        {\"add\", \"Adds a client to FitBook.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        {\"clear\", \"Clears all entries from FitBook. USE WITH CAUTION.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        {\"delete\", \"Deletes the specified client from FitBook.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        {\"edit\", \"Edits an existing client in FitBook.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        {\"exit\", \"Exits FitBook.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"        {\"find\", \"Finds all clients whose specified attribute contains the specified keyword\"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"                + \" (Uses name attribute if none specified).\"},","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        {\"fitadd\", \"Adds exercise(s) to an existing client in FitBook.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        {\"fitdelete\", \"Deletes exercise(s) from an existing client in FitBook.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        {\"help\", \"Shows this window.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        {\"list\", \"Shows a list of all clients saved in FitBook.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        {\"note\", \"Adds a new note to a client.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        {\"weight\", \"Adds a new weight value to a client.\"},","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    };","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    private VBox helpMessageContainer;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"    private boolean isDesktopBrowseActionSupported() {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"        return Desktop.isDesktopSupported() \u0026\u0026 Desktop.getDesktop().isSupported(Desktop.Action.BROWSE);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"     * Opens user guide URL in user\u0027s default browser.","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"    private void openUrl() {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"            if (isDesktopBrowseActionSupported()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"                Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"                final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"                final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"                url.putString(USERGUIDE_URL);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"                clipboard.setContent(url);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"            logger.warning(\"Something went wrong when opening user guide URL.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"     * Initializes a new HelpWindow.","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"    public void initialize() {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"        if (!isDesktopBrowseActionSupported()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"            this.copyButton.setText(\"Copy URL\");","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        for (String[] command : COMMAND_DESCRIPTIONS) {","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"            String commandName \u003d command[0];","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"            String commandDescription \u003d command[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"            Label commandLabel \u003d new Label(commandName);","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"            Label descriptionLabel \u003d new Label(commandDescription);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"            commandLabel.setPrefWidth(50);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"            HBox commandBox \u003d new HBox(10);","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"            commandBox.getChildren().addAll(commandLabel, descriptionLabel);","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"            this.helpMessageContainer.getChildren().add(commandBox);","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"     *                               if this method is called on a thread other than","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"     *                               the JavaFX Application Thread.","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"     *                               if this method is called during animation or","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"     *                               layout processing.","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RyanNgWH":8,"bgopi23":1,"ruijietay":3,"jjchee77":55,"-":87,"dillontkh":5}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"    private static MainWindow instance \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"    private PersonDetailsPanel personDetailsPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"    private StackPane personDetailsPanelPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"    private MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        this.helpWindow \u003d new HelpWindow();","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"dillontkh"},"content":"     * Initializes the MainWindow instance with the provided primary stage and logic.","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"dillontkh"},"content":"    public static void init(Stage primaryStage, Logic logic) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"            instance \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"     * Returns the singleton instance of the MainWindow class.","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"dillontkh"},"content":"    public static MainWindow getInstance() {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"dillontkh"},"content":"        assert instance !\u003d null : \"MainWindow must be initialized before getting instance.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"dillontkh"},"content":"        return instance;","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        return this.primaryStage;","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        setAccelerator(this.helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"        this.personListPanel \u003d new PersonListPanel(this.logic.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"        // Update the details panel when a Person in the list is selected.","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"        this.personListPanel.addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"dillontkh"},"content":"            // newValue can be null if the selection in the personListView is cleared","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"dillontkh"},"content":"            if (newValue \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"                this.personDetailsPanel.clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"                this.personDetailsPanel.update(newValue);","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"dillontkh"},"content":"        });","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"dillontkh"},"content":"        // Update the details panel when the currently displayed Person is updated.","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        this.logic.getFilteredPersonList().addListener((ListChangeListener\u003c? super Person\u003e) c -\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"dillontkh"},"content":"            while (c.next()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"dillontkh"},"content":"                // adding and editing of clients","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"dillontkh"},"content":"                if (c.wasAdded()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"dillontkh"},"content":"                    // When the address book is initialized, the AddedSubList will contain all clients.","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"dillontkh"},"content":"                    // Do not update the details panel in that case.","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"dillontkh"},"content":"                    // In all other cases when a person was added/edited, the list should be of size 1.","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"dillontkh"},"content":"                    if (c.getAddedSize() \u003d\u003d 1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"dillontkh"},"content":"                        Person p \u003d c.getAddedSubList().get(0);","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"ruijietay"},"content":"                        this.personDetailsPanel.update(p);","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"dillontkh"},"content":"                        // Select the person in the person list to ensure the details displayed is always the details","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"dillontkh"},"content":"                        // of the person selected in the person list.","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"ruijietay"},"content":"                        this.personListPanel.getFxmlObject().getSelectionModel().select(p);","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"dillontkh"},"content":"                    }","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"dillontkh"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"dillontkh"},"content":"        });","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"        this.personListPanelPlaceholder.getChildren().add(this.personListPanel.getRoot());","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":175,"author":{"gitId":"ruijietay"},"content":"        this.resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"ruijietay"},"content":"        this.resultDisplayPlaceholder.getChildren().add(this.resultDisplay.getRoot());","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":178,"author":{"gitId":"ruijietay"},"content":"        this.personDetailsPanel \u003d new PersonDetailsPanel();","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"ruijietay"},"content":"        this.personDetailsPanelPlaceholder.getChildren().add(this.personDetailsPanel.getRoot());","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(this.logic.getAddressBookFilePath());","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"ruijietay"},"content":"        this.statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":184,"author":{"gitId":"ruijietay"},"content":"        this.commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"ruijietay"},"content":"        this.commandBoxPlaceholder.getChildren().add(this.commandBox.getRoot());","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"ruijietay"},"content":"        this.primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"ruijietay"},"content":"        this.primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"ruijietay"},"content":"            this.primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"ruijietay"},"content":"            this.primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":205,"author":{"gitId":"ruijietay"},"content":"        if (!this.helpWindow.isShowing()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"ruijietay"},"content":"            this.helpWindow.show();","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"ruijietay"},"content":"            this.helpWindow.focus();","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":213,"author":{"gitId":"ruijietay"},"content":"        this.primaryStage.show();","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":221,"author":{"gitId":"ruijietay"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(this.primaryStage.getWidth(), this.primaryStage.getHeight(),","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"ruijietay"},"content":"                (int) this.primaryStage.getX(), (int) this.primaryStage.getY());","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"ruijietay"},"content":"        this.commandBox.freezeCommandBox();","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"ruijietay"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(2), exitEvent -\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"ruijietay"},"content":"            this.logic.setGuiSettings(guiSettings);","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"ruijietay"},"content":"            this.helpWindow.hide();","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"ruijietay"},"content":"            this.primaryStage.hide();","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"ruijietay"},"content":"        }));","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"ruijietay"},"content":"        timeline.play();","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":236,"author":{"gitId":"ruijietay"},"content":"        return this.personListPanel;","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"ruijietay"},"content":"            CommandResult commandResult \u003d this.logic.execute(commandText);","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"ruijietay"},"content":"            this.logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"ruijietay"},"content":"            this.resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"ruijietay"},"content":"            this.logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"ruijietay"},"content":"            this.resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"dillontkh"},"content":"     * Sets the text of the command box.","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"dillontkh"},"content":"    public void setCommandBoxText(String text) {","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"ruijietay"},"content":"        this.commandBox.setText(text);","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"dillontkh"},"content":"     * Moves the cursor of the command box to the end.","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"dillontkh"},"content":"    public void moveCommandBoxCursorToEnd() {","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"ruijietay"},"content":"        this.commandBox.moveCursorToEnd();","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruijietay":51,"-":168,"dillontkh":60}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"    private ImageView qrcode;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    private Label note;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     * display.","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"        // Set fields with information from the person","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        this.id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        this.name.setText(person.getName().toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        this.phone.setText(person.getPhone().toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"                .sorted(Comparator.comparing(Tag::toString))","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                .forEach(tag -\u003e this.tags.getChildren().add(new Label(tag.toString())));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"RyanNgWH":6,"ruijietay":6,"-":49,"dillontkh":6}},{"path":"src/main/java/seedu/address/ui/PersonDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.chart.CategoryAxis;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.chart.LineChart;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.chart.NumberAxis;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.control.Separator;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.WeightCommandMessages;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":" * A UI component that displays the details of a {@code Person}.","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"public class PersonDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"    public static final String FXML \u003d \"PersonDetailsPanel.fxml\";","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PersonDetailsPanel.class);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"    private static final String EXERCISE_ATTR_DESC_STYLE \u003d \"-fx-text-fill: white; -fx-font-size: 12px;\";","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"    private static final String EXERCISE_ATTR_VALUE_STYLE \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"            \"-fx-background-color: #2E2E2E; -fx-padding: 2 5 2 5; -fx-text-fill: white; -fx-font-size: 12px;\";","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"    private VBox detailsPane;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"    private Label name;","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"    private Label id;","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"    private Label phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"    private Label address;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"    private Label email;","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    private Label weightDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    private Label weightValue;","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"    private Label height;","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"dillontkh"},"content":"    private Label note;","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"    private ImageView qrcode;","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"    private TabPane trackableFieldsTabPane;","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"    private Tab weightTab;","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"    private Tab exerciseTab;","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    private LineChart\u003cString, Number\u003e weightChart;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    private NumberAxis weightYAxis;","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"    private VBox exercisesBox;","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"     * The person being displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"dillontkh"},"content":"    private Person person;","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"dillontkh"},"content":"     * Creates a new PersonDetailsPanel and clears all fields.","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"dillontkh"},"content":"     * Labels in the {@code .FXML} file contain text with the field name for convenience.","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"dillontkh"},"content":"    public PersonDetailsPanel() {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"dillontkh"},"content":"        super(FXML);","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"dillontkh"},"content":"        this.clear();","lastModifiedDate":"2024-04-11"},{"lineNumber":99,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"    private Tab getWeightTab() {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        return this.trackableFieldsTabPane.getTabs().get(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"    private Tab getExerciseTab() {","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"        return this.trackableFieldsTabPane.getTabs().get(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"     * Initializes a new PersonDetailsPanel.","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"jjchee77"},"content":"    public void initialize() {","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"        // Initialize tab pane","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"        this.trackableFieldsTabPane.setStyle(\"-fx-open-tab-animation: NONE; -fx-close-tab-animation: NONE;\");","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"dillontkh"},"content":"        this.initializeWeightChart();","lastModifiedDate":"2024-04-11"},{"lineNumber":117,"author":{"gitId":"dillontkh"},"content":"        ScrollPane exerciseScrollPane \u003d this.generateExercisesScrollPane();","lastModifiedDate":"2024-04-11"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"        // Add charts and notes scroll pane to respective tabs","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"dillontkh"},"content":"        this.weightTab \u003d this.getWeightTab();","lastModifiedDate":"2024-04-11"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        this.weightTab.setContent(this.weightChart);","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"dillontkh"},"content":"        this.exerciseTab \u003d this.getExerciseTab();","lastModifiedDate":"2024-04-11"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"        this.exerciseTab.setContent(exerciseScrollPane);","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"     * Updates the PersonDetailsPanel with the details of the given Person.","lastModifiedDate":"2024-04-11"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"     * @param person the Person object containing the information to update the fields with.","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"    public void update(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"dillontkh"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-04-11"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"        this.detailsPane.setVisible(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"dillontkh"},"content":"        this.updateLabels();","lastModifiedDate":"2024-04-11"},{"lineNumber":137,"author":{"gitId":"dillontkh"},"content":"        this.updateTags();","lastModifiedDate":"2024-04-11"},{"lineNumber":138,"author":{"gitId":"dillontkh"},"content":"        this.updateQrCode();","lastModifiedDate":"2024-04-11"},{"lineNumber":139,"author":{"gitId":"dillontkh"},"content":"        this.updateTabView();","lastModifiedDate":"2024-04-11"},{"lineNumber":140,"author":{"gitId":"dillontkh"},"content":"        this.updateNodeVisibility();","lastModifiedDate":"2024-04-11"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"        logger.info(\"Displayed details of person: \" + person);","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"dillontkh"},"content":"     * Clears all fields","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"dillontkh"},"content":"    public void clear() {","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"        this.name.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"        this.phone.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"        this.address.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"        this.email.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"        this.note.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        this.weightDate.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"        this.weightValue.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"        this.height.setText(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"ruijietay"},"content":"        this.tags.getChildren().clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"ruijietay"},"content":"        this.qrcode.setImage(null);","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"ruijietay"},"content":"        this.trackableFieldsTabPane.getTabs().clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":163,"author":{"gitId":"dillontkh"},"content":"     * Generates a weight series for a given person based on their weights.","lastModifiedDate":"2024-04-11"},{"lineNumber":164,"author":{"gitId":"dillontkh"},"content":"     * Used for displaying the weight graph.","lastModifiedDate":"2024-04-11"},{"lineNumber":165,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":166,"author":{"gitId":"dillontkh"},"content":"    private XYChart.Series\u003cString, Number\u003e generateWeightSeries(Person p) {","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"dillontkh"},"content":"        Float minWeight \u003d Float.MAX_VALUE;","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"dillontkh"},"content":"        Float maxWeight \u003d Float.MIN_VALUE;","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"dillontkh"},"content":"        XYChart.Series\u003cString, Number\u003e weightSeries \u003d new XYChart.Series\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"dillontkh"},"content":"        for (Map.Entry\u003cLocalDateTime, Weight\u003e entry : p.getWeights().entrySet()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"dillontkh"},"content":"            LocalDateTime date \u003d entry.getKey();","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"dillontkh"},"content":"            Weight weight \u003d entry.getValue();","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"dillontkh"},"content":"            String dateString \u003d date.format(DateTimeUtil.DATE_FORMATTER);","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"dillontkh"},"content":"            Number weightNumber \u003d weight.getValue();","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"dillontkh"},"content":"            XYChart.Data\u003cString, Number\u003e weightData \u003d new XYChart.Data\u003c\u003e(dateString, weightNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"dillontkh"},"content":"            weightData.setNode(new HoveredThresholdNode(weightNumber.toString(), \"\", \" kg\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"dillontkh"},"content":"            weightSeries.getData().add(weightData);","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"dillontkh"},"content":"            if (weight.getValue() \u003c minWeight) {","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"dillontkh"},"content":"                minWeight \u003d weight.getValue();","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"dillontkh"},"content":"            if (weight.getValue() \u003e maxWeight) {","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"dillontkh"},"content":"                maxWeight \u003d weight.getValue();","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"ruijietay"},"content":"        this.weightYAxis.setLowerBound(minWeight - 10);","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"ruijietay"},"content":"        this.weightYAxis.setUpperBound(maxWeight + 10);","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"dillontkh"},"content":"        return weightSeries;","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":197,"author":{"gitId":"dillontkh"},"content":"     * Represents a custom Node for displaying data thresholds on a chart.","lastModifiedDate":"2024-04-11"},{"lineNumber":198,"author":{"gitId":"dillontkh"},"content":"     * This Node displays a label with the data threshold value when hovered over.","lastModifiedDate":"2024-04-11"},{"lineNumber":199,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":200,"author":{"gitId":"dillontkh"},"content":"    private static class HoveredThresholdNode extends StackPane {","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"dillontkh"},"content":"        private final Label label \u003d this.createDataThresholdLabel();","lastModifiedDate":"2024-04-11"},{"lineNumber":202,"author":{"gitId":"dillontkh"},"content":"        private final Node point \u003d this.createDataPoint();","lastModifiedDate":"2024-04-11"},{"lineNumber":203,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"dillontkh"},"content":"        /**","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"dillontkh"},"content":"         * Creates a new HoveredThresholdNode.","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"dillontkh"},"content":"         */","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"dillontkh"},"content":"        public HoveredThresholdNode(String value, String prefix, String postfix) {","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"dillontkh"},"content":"            this.setPrefSize(10, 10);","lastModifiedDate":"2024-04-11"},{"lineNumber":209,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"dillontkh"},"content":"            this.setOnMouseEntered(event -\u003e {","lastModifiedDate":"2024-04-11"},{"lineNumber":211,"author":{"gitId":"dillontkh"},"content":"                this.getChildren().setAll(this.point, this.label);","lastModifiedDate":"2024-04-11"},{"lineNumber":212,"author":{"gitId":"ruijietay"},"content":"                this.label.setText(String.format(\"%s%s%s\", prefix, value, postfix));","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"dillontkh"},"content":"                this.toFront();","lastModifiedDate":"2024-04-11"},{"lineNumber":214,"author":{"gitId":"dillontkh"},"content":"            });","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"dillontkh"},"content":"            this.setOnMouseExited(event -\u003e {","lastModifiedDate":"2024-04-11"},{"lineNumber":216,"author":{"gitId":"dillontkh"},"content":"                this.getChildren().setAll(this.point);","lastModifiedDate":"2024-04-11"},{"lineNumber":217,"author":{"gitId":"dillontkh"},"content":"            });","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"dillontkh"},"content":"            this.setStyle(\"-fx-background-color: white; -fx-background-radius: 5px; -fx-padding: 2px;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":220,"author":{"gitId":"dillontkh"},"content":"            this.getChildren().setAll(this.point);","lastModifiedDate":"2024-04-11"},{"lineNumber":221,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"dillontkh"},"content":"        private Node createDataPoint() {","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"dillontkh"},"content":"            final Circle point \u003d new Circle(5);","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"dillontkh"},"content":"            point.setFill(Color.TRANSPARENT);","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"dillontkh"},"content":"            point.setStroke(Color.TRANSPARENT);","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"dillontkh"},"content":"            point.setStrokeWidth(0);","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"dillontkh"},"content":"            return point;","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"dillontkh"},"content":"        private Label createDataThresholdLabel() {","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"dillontkh"},"content":"            final Label label \u003d new Label();","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"dillontkh"},"content":"            label.getStyleClass().addAll(\"default-color0\", \"chart-line-symbol\", \"chart-series-line\");","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"dillontkh"},"content":"            label.setStyle(\"-fx-font-size: 10px; -fx-font-weight: bold;\");","lastModifiedDate":"2024-03-31"},{"lineNumber":235,"author":{"gitId":"dillontkh"},"content":"            label.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"dillontkh"},"content":"            return label;","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":240,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":241,"author":{"gitId":"dillontkh"},"content":"     * Set fields with information from the person.","lastModifiedDate":"2024-04-11"},{"lineNumber":242,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":243,"author":{"gitId":"dillontkh"},"content":"    private void updateLabels() {","lastModifiedDate":"2024-04-11"},{"lineNumber":244,"author":{"gitId":"dillontkh"},"content":"        // Set fields with information from the person","lastModifiedDate":"2024-04-11"},{"lineNumber":245,"author":{"gitId":"dillontkh"},"content":"        this.name.setText(this.person.getName().toString());","lastModifiedDate":"2024-04-11"},{"lineNumber":246,"author":{"gitId":"dillontkh"},"content":"        this.phone.setText(this.person.getPhone().toString());","lastModifiedDate":"2024-04-11"},{"lineNumber":247,"author":{"gitId":"dillontkh"},"content":"        this.address.setText(this.person.getAddress().toString());","lastModifiedDate":"2024-04-11"},{"lineNumber":248,"author":{"gitId":"dillontkh"},"content":"        this.email.setText(this.person.getEmail().toString());","lastModifiedDate":"2024-04-11"},{"lineNumber":249,"author":{"gitId":"dillontkh"},"content":"        this.height.setText(this.person.getHeight().getFormattedHeight());","lastModifiedDate":"2024-04-11"},{"lineNumber":250,"author":{"gitId":"dillontkh"},"content":"        this.note.setText(this.person.getNote().toString());","lastModifiedDate":"2024-04-11"},{"lineNumber":251,"author":{"gitId":"dillontkh"},"content":"        this.updateWeightLabels();","lastModifiedDate":"2024-04-11"},{"lineNumber":252,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":253,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":254,"author":{"gitId":"dillontkh"},"content":"    private void updateWeightLabels() {","lastModifiedDate":"2024-04-11"},{"lineNumber":255,"author":{"gitId":"dillontkh"},"content":"        Optional\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e latestWeight \u003d this.person.getLatestWeight();","lastModifiedDate":"2024-04-11"},{"lineNumber":256,"author":{"gitId":"dillontkh"},"content":"        if (latestWeight.isPresent()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":257,"author":{"gitId":"dillontkh"},"content":"            LocalDate numericDate \u003d latestWeight.get().getKey().toLocalDate();","lastModifiedDate":"2024-04-11"},{"lineNumber":258,"author":{"gitId":"dillontkh"},"content":"            String formattedDate \u003d numericDate.format(DateTimeUtil.DATE_FORMATTER);","lastModifiedDate":"2024-04-11"},{"lineNumber":259,"author":{"gitId":"dillontkh"},"content":"            this.weightDate.setText(WeightCommandMessages.WEIGHT_DATE_HEADER + formattedDate);","lastModifiedDate":"2024-04-11"},{"lineNumber":260,"author":{"gitId":"dillontkh"},"content":"            this.weightValue.setText(WeightCommandMessages.WEIGHT_VALUE_HEADER","lastModifiedDate":"2024-04-11"},{"lineNumber":261,"author":{"gitId":"dillontkh"},"content":"                    + latestWeight.get().getValue().toString() + \" kg\");","lastModifiedDate":"2024-04-11"},{"lineNumber":262,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":263,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":264,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":265,"author":{"gitId":"dillontkh"},"content":"    private void updateTags() {","lastModifiedDate":"2024-04-11"},{"lineNumber":266,"author":{"gitId":"dillontkh"},"content":"        // Clear tags and set new ones","lastModifiedDate":"2024-04-11"},{"lineNumber":267,"author":{"gitId":"dillontkh"},"content":"        this.tags.getChildren().clear();","lastModifiedDate":"2024-04-11"},{"lineNumber":268,"author":{"gitId":"dillontkh"},"content":"        this.person.getTags().stream()","lastModifiedDate":"2024-04-11"},{"lineNumber":269,"author":{"gitId":"dillontkh"},"content":"                .sorted(Comparator.comparing(Tag::toString))","lastModifiedDate":"2024-04-11"},{"lineNumber":270,"author":{"gitId":"dillontkh"},"content":"                .forEach(tag -\u003e this.tags.getChildren().add(new Label(tag.toString())));","lastModifiedDate":"2024-04-11"},{"lineNumber":271,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":272,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":273,"author":{"gitId":"dillontkh"},"content":"    private void updateQrCode() {","lastModifiedDate":"2024-04-11"},{"lineNumber":274,"author":{"gitId":"dillontkh"},"content":"        this.qrcode.setImage(new Image(this.person.getQrCodePath().toUri().toString()));","lastModifiedDate":"2024-04-11"},{"lineNumber":275,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":276,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":277,"author":{"gitId":"dillontkh"},"content":"    private void updateTabView() {","lastModifiedDate":"2024-04-11"},{"lineNumber":278,"author":{"gitId":"dillontkh"},"content":"        // Clear tabs","lastModifiedDate":"2024-04-11"},{"lineNumber":279,"author":{"gitId":"dillontkh"},"content":"        this.trackableFieldsTabPane.getTabs().clear();","lastModifiedDate":"2024-04-11"},{"lineNumber":280,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":281,"author":{"gitId":"dillontkh"},"content":"        this.updateWeightTab();","lastModifiedDate":"2024-04-11"},{"lineNumber":282,"author":{"gitId":"dillontkh"},"content":"        this.updateExercisesTab();","lastModifiedDate":"2024-04-11"},{"lineNumber":283,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":284,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":285,"author":{"gitId":"dillontkh"},"content":"    private void updateWeightTab() {","lastModifiedDate":"2024-04-11"},{"lineNumber":286,"author":{"gitId":"dillontkh"},"content":"        Optional\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e latestWeight \u003d this.person.getLatestWeight();","lastModifiedDate":"2024-04-11"},{"lineNumber":287,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":288,"author":{"gitId":"dillontkh"},"content":"        if (latestWeight.isPresent()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":289,"author":{"gitId":"dillontkh"},"content":"            this.trackableFieldsTabPane.getTabs().add(0, this.weightTab);","lastModifiedDate":"2024-04-11"},{"lineNumber":290,"author":{"gitId":"dillontkh"},"content":"            XYChart.Series\u003cString, Number\u003e weightSeries \u003d this.generateWeightSeries(this.person);","lastModifiedDate":"2024-04-11"},{"lineNumber":291,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":292,"author":{"gitId":"dillontkh"},"content":"            this.weightChart.getData().clear();","lastModifiedDate":"2024-04-11"},{"lineNumber":293,"author":{"gitId":"dillontkh"},"content":"            this.weightChart.getData().add(weightSeries);","lastModifiedDate":"2024-04-11"},{"lineNumber":294,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":295,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":296,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":297,"author":{"gitId":"dillontkh"},"content":"    private void updateExercisesTab() {","lastModifiedDate":"2024-04-11"},{"lineNumber":298,"author":{"gitId":"dillontkh"},"content":"        this.initializeExercisesTab();","lastModifiedDate":"2024-04-11"},{"lineNumber":299,"author":{"gitId":"dillontkh"},"content":"        this.populateExercisesTab();","lastModifiedDate":"2024-04-11"},{"lineNumber":300,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":301,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":302,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":303,"author":{"gitId":"dillontkh"},"content":"     * Populates the exercises tab with the given set of exercises.","lastModifiedDate":"2024-04-11"},{"lineNumber":304,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":305,"author":{"gitId":"dillontkh"},"content":"    private void populateExercisesTab() {","lastModifiedDate":"2024-04-11"},{"lineNumber":306,"author":{"gitId":"dillontkh"},"content":"        Set\u003cExercise\u003e exercises \u003d this.person.getExerciseSet().getValue();","lastModifiedDate":"2024-04-11"},{"lineNumber":307,"author":{"gitId":"dillontkh"},"content":"        if (!exercises.isEmpty()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":308,"author":{"gitId":"dillontkh"},"content":"            this.trackableFieldsTabPane.getTabs().add(this.exerciseTab);","lastModifiedDate":"2024-04-11"},{"lineNumber":309,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":310,"author":{"gitId":"dillontkh"},"content":"            List\u003cExercise\u003e sortedExercises \u003d exercises.stream()","lastModifiedDate":"2024-04-11"},{"lineNumber":311,"author":{"gitId":"dillontkh"},"content":"                    .sorted(Comparator.comparing(Exercise::getName))","lastModifiedDate":"2024-04-11"},{"lineNumber":312,"author":{"gitId":"dillontkh"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-04-11"},{"lineNumber":313,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":314,"author":{"gitId":"dillontkh"},"content":"            for (Exercise exercise : sortedExercises) {","lastModifiedDate":"2024-04-11"},{"lineNumber":315,"author":{"gitId":"dillontkh"},"content":"                Label exerciseName \u003d this.generateExerciseNameLabel(exercise);","lastModifiedDate":"2024-04-11"},{"lineNumber":316,"author":{"gitId":"dillontkh"},"content":"                HBox exerciseBox \u003d this.generateExerciseHbox(exercise);","lastModifiedDate":"2024-04-11"},{"lineNumber":317,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":318,"author":{"gitId":"dillontkh"},"content":"                this.exercisesBox.getChildren().addAll(exerciseName, exerciseBox, new Separator());","lastModifiedDate":"2024-04-11"},{"lineNumber":319,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":320,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":321,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":322,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":323,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":324,"author":{"gitId":"dillontkh"},"content":"     * Initialize the Exercises tab by setting the title label and adding it to the exercises box.","lastModifiedDate":"2024-04-11"},{"lineNumber":325,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":326,"author":{"gitId":"dillontkh"},"content":"    private void initializeExercisesTab() {","lastModifiedDate":"2024-04-11"},{"lineNumber":327,"author":{"gitId":"dillontkh"},"content":"        Label exercisesTitle \u003d new Label(\"Exercises\");","lastModifiedDate":"2024-04-11"},{"lineNumber":328,"author":{"gitId":"dillontkh"},"content":"        exercisesTitle.setStyle(\"-fx-text-fill: white; -fx-font-size: 18px;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":329,"author":{"gitId":"dillontkh"},"content":"        exercisesTitle.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2024-04-11"},{"lineNumber":330,"author":{"gitId":"dillontkh"},"content":"        exercisesTitle.setAlignment(Pos.CENTER);","lastModifiedDate":"2024-04-11"},{"lineNumber":331,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":332,"author":{"gitId":"dillontkh"},"content":"        this.exercisesBox.getChildren().clear();","lastModifiedDate":"2024-04-11"},{"lineNumber":333,"author":{"gitId":"dillontkh"},"content":"        this.exercisesBox.getChildren().add(exercisesTitle);","lastModifiedDate":"2024-04-11"},{"lineNumber":334,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":335,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":336,"author":{"gitId":"dillontkh"},"content":"    private Label generateExerciseNameLabel(Exercise exercise) {","lastModifiedDate":"2024-04-11"},{"lineNumber":337,"author":{"gitId":"dillontkh"},"content":"        Label exerciseName \u003d new Label(exercise.getName());","lastModifiedDate":"2024-04-11"},{"lineNumber":338,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":339,"author":{"gitId":"dillontkh"},"content":"        exerciseName.setWrapText(true);","lastModifiedDate":"2024-04-11"},{"lineNumber":340,"author":{"gitId":"dillontkh"},"content":"        exerciseName.setUnderline(true);","lastModifiedDate":"2024-04-11"},{"lineNumber":341,"author":{"gitId":"dillontkh"},"content":"        exerciseName.setStyle(\"-fx-text-fill: white; -fx-font-size: 15px;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":342,"author":{"gitId":"dillontkh"},"content":"        exerciseName.setPadding(new Insets(10, 0, 0, 0));","lastModifiedDate":"2024-04-11"},{"lineNumber":343,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":344,"author":{"gitId":"dillontkh"},"content":"        return exerciseName;","lastModifiedDate":"2024-04-11"},{"lineNumber":345,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":346,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":347,"author":{"gitId":"dillontkh"},"content":"    private HBox generateExerciseHbox(Exercise exercise) {","lastModifiedDate":"2024-04-11"},{"lineNumber":348,"author":{"gitId":"dillontkh"},"content":"        Label setsLabel \u003d new Label(\"Sets:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":349,"author":{"gitId":"dillontkh"},"content":"        setsLabel.setStyle(EXERCISE_ATTR_DESC_STYLE);","lastModifiedDate":"2024-04-11"},{"lineNumber":350,"author":{"gitId":"dillontkh"},"content":"        Label setsValue \u003d new Label(String.valueOf(exercise.getSets()));","lastModifiedDate":"2024-04-11"},{"lineNumber":351,"author":{"gitId":"dillontkh"},"content":"        setsValue.setStyle(EXERCISE_ATTR_VALUE_STYLE);","lastModifiedDate":"2024-04-11"},{"lineNumber":352,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":353,"author":{"gitId":"dillontkh"},"content":"        Label repsLabel \u003d new Label(\"Reps:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":354,"author":{"gitId":"dillontkh"},"content":"        repsLabel.setStyle(EXERCISE_ATTR_DESC_STYLE);","lastModifiedDate":"2024-04-11"},{"lineNumber":355,"author":{"gitId":"dillontkh"},"content":"        Label repsValue \u003d new Label(String.valueOf(exercise.getReps()));","lastModifiedDate":"2024-04-11"},{"lineNumber":356,"author":{"gitId":"dillontkh"},"content":"        repsValue.setStyle(EXERCISE_ATTR_VALUE_STYLE);","lastModifiedDate":"2024-04-11"},{"lineNumber":357,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":358,"author":{"gitId":"dillontkh"},"content":"        Label breakLabel \u003d new Label(\"Break between sets:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":359,"author":{"gitId":"dillontkh"},"content":"        breakLabel.setStyle(EXERCISE_ATTR_DESC_STYLE);","lastModifiedDate":"2024-04-11"},{"lineNumber":360,"author":{"gitId":"dillontkh"},"content":"        Label breakValue \u003d new Label(exercise.getBreakBetweenSets() + \" seconds\");","lastModifiedDate":"2024-04-11"},{"lineNumber":361,"author":{"gitId":"dillontkh"},"content":"        breakValue.setStyle(EXERCISE_ATTR_VALUE_STYLE);","lastModifiedDate":"2024-04-11"},{"lineNumber":362,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":363,"author":{"gitId":"dillontkh"},"content":"        HBox setsBox \u003d new HBox(10, setsLabel, setsValue);","lastModifiedDate":"2024-04-11"},{"lineNumber":364,"author":{"gitId":"dillontkh"},"content":"        HBox repsBox \u003d new HBox(10, repsLabel, repsValue);","lastModifiedDate":"2024-04-11"},{"lineNumber":365,"author":{"gitId":"dillontkh"},"content":"        HBox breakBox \u003d new HBox(10, breakLabel, breakValue);","lastModifiedDate":"2024-04-11"},{"lineNumber":366,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":367,"author":{"gitId":"dillontkh"},"content":"        setsBox.setPadding(new Insets(10, 0, 10, 0));","lastModifiedDate":"2024-04-11"},{"lineNumber":368,"author":{"gitId":"dillontkh"},"content":"        repsBox.setPadding(new Insets(10, 0, 10, 0));","lastModifiedDate":"2024-04-11"},{"lineNumber":369,"author":{"gitId":"dillontkh"},"content":"        breakBox.setPadding(new Insets(10, 0, 10, 0));","lastModifiedDate":"2024-04-11"},{"lineNumber":370,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":371,"author":{"gitId":"dillontkh"},"content":"        setsBox.setPrefWidth(130);","lastModifiedDate":"2024-04-11"},{"lineNumber":372,"author":{"gitId":"dillontkh"},"content":"        repsBox.setPrefWidth(130);","lastModifiedDate":"2024-04-11"},{"lineNumber":373,"author":{"gitId":"dillontkh"},"content":"        breakBox.setPrefWidth(250);","lastModifiedDate":"2024-04-11"},{"lineNumber":374,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":375,"author":{"gitId":"dillontkh"},"content":"        return new HBox(setsBox, repsBox, breakBox);","lastModifiedDate":"2024-04-11"},{"lineNumber":376,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":377,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":378,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":379,"author":{"gitId":"dillontkh"},"content":"     * Update the visibility of nodes based on the presence of valid values in the person object.","lastModifiedDate":"2024-04-11"},{"lineNumber":380,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":381,"author":{"gitId":"dillontkh"},"content":"    private void updateNodeVisibility() {","lastModifiedDate":"2024-04-11"},{"lineNumber":382,"author":{"gitId":"dillontkh"},"content":"        Optional\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e latestWeight \u003d this.person.getLatestWeight();","lastModifiedDate":"2024-04-11"},{"lineNumber":383,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":384,"author":{"gitId":"dillontkh"},"content":"        // Set visibility based on presence of valid values","lastModifiedDate":"2024-04-11"},{"lineNumber":385,"author":{"gitId":"dillontkh"},"content":"        this.address.setVisible(!this.person.getAddress().getValue().isEmpty());","lastModifiedDate":"2024-04-11"},{"lineNumber":386,"author":{"gitId":"dillontkh"},"content":"        this.email.setVisible(!this.person.getEmail().getValue().isEmpty());","lastModifiedDate":"2024-04-11"},{"lineNumber":387,"author":{"gitId":"dillontkh"},"content":"        this.note.setVisible(!this.person.getNote().getValue().isEmpty());","lastModifiedDate":"2024-04-11"},{"lineNumber":388,"author":{"gitId":"dillontkh"},"content":"        this.weightDate.setVisible(latestWeight.isPresent());","lastModifiedDate":"2024-04-11"},{"lineNumber":389,"author":{"gitId":"dillontkh"},"content":"        this.weightValue.setVisible(latestWeight.isPresent());","lastModifiedDate":"2024-04-11"},{"lineNumber":390,"author":{"gitId":"dillontkh"},"content":"        this.height.setVisible(this.person.getHeight().isValid());","lastModifiedDate":"2024-04-11"},{"lineNumber":391,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":392,"author":{"gitId":"dillontkh"},"content":"        // Bind visibility of nodes to managed properties","lastModifiedDate":"2024-04-11"},{"lineNumber":393,"author":{"gitId":"dillontkh"},"content":"        this.address.managedProperty().bind(this.address.visibleProperty());","lastModifiedDate":"2024-04-11"},{"lineNumber":394,"author":{"gitId":"dillontkh"},"content":"        this.email.managedProperty().bind(this.email.visibleProperty());","lastModifiedDate":"2024-04-11"},{"lineNumber":395,"author":{"gitId":"dillontkh"},"content":"        this.weightDate.managedProperty().bind(this.weightDate.visibleProperty());","lastModifiedDate":"2024-04-11"},{"lineNumber":396,"author":{"gitId":"dillontkh"},"content":"        this.weightValue.managedProperty().bind(this.weightValue.visibleProperty());","lastModifiedDate":"2024-04-11"},{"lineNumber":397,"author":{"gitId":"dillontkh"},"content":"        this.height.managedProperty().bind(this.height.visibleProperty());","lastModifiedDate":"2024-04-11"},{"lineNumber":398,"author":{"gitId":"dillontkh"},"content":"        this.note.managedProperty().bind(this.note.visibleProperty());","lastModifiedDate":"2024-04-11"},{"lineNumber":399,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":400,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":401,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":402,"author":{"gitId":"dillontkh"},"content":"    private void initializeWeightChart() {","lastModifiedDate":"2024-04-11"},{"lineNumber":403,"author":{"gitId":"dillontkh"},"content":"        // Initialize weight chart","lastModifiedDate":"2024-04-11"},{"lineNumber":404,"author":{"gitId":"dillontkh"},"content":"        CategoryAxis xAxis \u003d new CategoryAxis();","lastModifiedDate":"2024-04-11"},{"lineNumber":405,"author":{"gitId":"dillontkh"},"content":"        this.weightYAxis \u003d new NumberAxis();","lastModifiedDate":"2024-04-11"},{"lineNumber":406,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":407,"author":{"gitId":"dillontkh"},"content":"        xAxis.setAnimated(false); // fixes the collapsed categories bug","lastModifiedDate":"2024-04-11"},{"lineNumber":408,"author":{"gitId":"dillontkh"},"content":"        xAxis.setLabel(\"Date\");","lastModifiedDate":"2024-04-11"},{"lineNumber":409,"author":{"gitId":"dillontkh"},"content":"        xAxis.lookup(\".axis-label\").setStyle(\"-fx-text-fill: white;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":410,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":411,"author":{"gitId":"dillontkh"},"content":"        this.weightYAxis.setAnimated(false);","lastModifiedDate":"2024-04-11"},{"lineNumber":412,"author":{"gitId":"dillontkh"},"content":"        this.weightYAxis.setAutoRanging(false);","lastModifiedDate":"2024-04-11"},{"lineNumber":413,"author":{"gitId":"dillontkh"},"content":"        this.weightYAxis.setLabel(\"Weight (kg)\");","lastModifiedDate":"2024-04-11"},{"lineNumber":414,"author":{"gitId":"dillontkh"},"content":"        this.weightYAxis.lookup(\".axis-label\").setStyle(\"-fx-text-fill: white;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":415,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":416,"author":{"gitId":"dillontkh"},"content":"        this.weightChart \u003d new LineChart\u003c\u003e(xAxis, this.weightYAxis);","lastModifiedDate":"2024-04-11"},{"lineNumber":417,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.setAnimated(false);","lastModifiedDate":"2024-04-11"},{"lineNumber":418,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.setHorizontalGridLinesVisible(false);","lastModifiedDate":"2024-04-11"},{"lineNumber":419,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.setVerticalGridLinesVisible(false);","lastModifiedDate":"2024-04-11"},{"lineNumber":420,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.setTitle(\"Weight Tracking\");","lastModifiedDate":"2024-04-11"},{"lineNumber":421,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.setLegendVisible(false);","lastModifiedDate":"2024-04-11"},{"lineNumber":422,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.lookup(\".chart-title\").setStyle(\"-fx-text-fill: white;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":423,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.setPrefHeight(200);","lastModifiedDate":"2024-04-11"},{"lineNumber":424,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.lookup(\".chart-horizontal-grid-lines\").setStyle(\"-fx-stroke: white;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":425,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.lookup(\".chart-vertical-grid-lines\").setStyle(\"-fx-stroke: white;\");","lastModifiedDate":"2024-04-11"},{"lineNumber":426,"author":{"gitId":"dillontkh"},"content":"        this.weightChart.requestLayout();","lastModifiedDate":"2024-04-11"},{"lineNumber":427,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":428,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":429,"author":{"gitId":"dillontkh"},"content":"    private ScrollPane generateExercisesScrollPane() {","lastModifiedDate":"2024-04-11"},{"lineNumber":430,"author":{"gitId":"dillontkh"},"content":"        // Initialize exercises box","lastModifiedDate":"2024-04-11"},{"lineNumber":431,"author":{"gitId":"dillontkh"},"content":"        this.exercisesBox \u003d new VBox();","lastModifiedDate":"2024-04-11"},{"lineNumber":432,"author":{"gitId":"dillontkh"},"content":"        this.exercisesBox.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2024-04-11"},{"lineNumber":433,"author":{"gitId":"dillontkh"},"content":"        this.exercisesBox.setPrefHeight(200);","lastModifiedDate":"2024-04-11"},{"lineNumber":434,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":435,"author":{"gitId":"dillontkh"},"content":"        // Create a scroll pane and set the exercises box as its content","lastModifiedDate":"2024-04-11"},{"lineNumber":436,"author":{"gitId":"dillontkh"},"content":"        ScrollPane exerciseScrollPane \u003d new ScrollPane(this.exercisesBox);","lastModifiedDate":"2024-04-11"},{"lineNumber":437,"author":{"gitId":"dillontkh"},"content":"        exerciseScrollPane.setFitToWidth(true);","lastModifiedDate":"2024-04-11"},{"lineNumber":438,"author":{"gitId":"dillontkh"},"content":"        exerciseScrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);","lastModifiedDate":"2024-04-11"},{"lineNumber":439,"author":{"gitId":"dillontkh"},"content":"        exerciseScrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);","lastModifiedDate":"2024-04-11"},{"lineNumber":440,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":441,"author":{"gitId":"dillontkh"},"content":"        return exerciseScrollPane;","lastModifiedDate":"2024-04-11"},{"lineNumber":442,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":443,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"bgopi23":1,"ruijietay":35,"jjchee77":47,"dillontkh":360}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        this.personListView.setItems(personList);","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        this.personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"     * Adds a listener for the person list view.","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"    public void addListener(ChangeListener\u003cPerson\u003e listener) {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.personListView.getSelectionModel().selectedItemProperty().addListener(listener);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"    public ListView\u003cPerson\u003e getFxmlObject() {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"        return this.personListView;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruijietay":3,"-":48,"dillontkh":9}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        this.resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruijietay":1,"-":27}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        this.saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":1,"-":27}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/fitbook_logo.png\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"            MainWindow.init(primaryStage, this.logic);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"            this.mainWindow \u003d MainWindow.getInstance();","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            this.mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            this.mainWindow.fillInnerParts();","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        showAlertDialogAndWait(this.mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruijietay":5,"-":83,"dillontkh":1}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        return this.fxmlLoader.getRoot();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        this.fxmlLoader.setLocation(location);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        this.fxmlLoader.setController(this);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        this.fxmlLoader.setRoot(root);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"            this.fxmlLoader.load();","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruijietay":5,"-":83}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":350,"dillontkh":2}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":".label {","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":".button {","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"#helpWindowContainer {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jjchee77":6,"-":17}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"            \u003cHBox fx:id\u003d\"helpWindowContainer\" alignment\u003d\"CENTER\" spacing\u003d\"15.0\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"                    \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"                    \u003cLabel text\u003d\"${\u0027Available commands:\\n\u0027}\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"                    \u003cVBox fx:id\u003d\"helpMessageContainer\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"                    \u003cVBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"                        \u003cLabel text\u003d\"${\u0027\\nTo view more information about a specific command, enter the command into the input box and press \u0026lt;Enter\u0026gt;\u0027}\"\u003e\u003c/Label\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"                        \u003cLabel text\u003d\"${\u0027\\nNeed more help? Refer to the user guide at https://ay2324s2-cs2103t-t17-3.github.io/tp/UserGuide.html\u0027}\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"                \u003cAnchorPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUrl\"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"                            text\u003d\"Open User Guide\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"ruijietay":2,"jjchee77":15,"-":28,"dillontkh":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"FitBook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"130\" minHeight\u003d\"130\" prefHeight\u003d\"130\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"          \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"              \u003cVBox fx:id\u003d\"personList\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"                      \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"                  \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"              \u003cStackPane fx:id\u003d\"personDetailsPanelPlaceholder\" alignment\u003d\"TOP_RIGHT\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bgopi23":1,"-":48,"dillontkh":12}},{"path":"src/main/resources/view/PersonDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"\u003cScrollPane fx:id\u003d\"detailsScrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" style\u003d\"-fx-background:transparent; -fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    \u003cVBox fx:id\u003d\"detailsPane\" visible\u003d\"false\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"        \u003cGridPane alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"180.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"200.0\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"            \u003cColumnConstraints hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"            \u003cRowConstraints vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"        \u003cScrollPane prefHeight\u003d\"120\" style\u003d\"-fx-background:transparent; -fx-background-color: transparent;\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"name\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"phone\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"address\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"email\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"            \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"                \u003cLabel fx:id\u003d\"weightValue\" styleClass\u003d\"cell_small_label\" text\u003d\"weightValue\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"                \u003cLabel fx:id\u003d\"weightDate\" styleClass\u003d\"cell_small_label\" text\u003d\"weightDate\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        \u003cLabel fx:id\u003d\"height\" styleClass\u003d\"cell_small_label\" text\u003d\"height\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"        \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"note\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"\u003cImageView fx:id\u003d\"qrcode\" fitHeight\u003d\"150\" fitWidth\u003d\"150\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"RIGHT\" GridPane.valignment\u003d\"TOP\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"\u003cTabPane fx:id\u003d\"trackableFieldsTabPane\" prefHeight\u003d\"250\" side\u003d\"BOTTOM\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"\u003cTab text\u003d\"Weight (kg)\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"\u003c/Tab\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"\u003cTab text\u003d\"Exercises\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"\u003c/Tab\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"\u003c/TabPane\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"bgopi23":1,"ruijietay":3,"jjchee77":18,"dillontkh":32}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"70.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"0.5\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bgopi23":2,"-":28,"dillontkh":8}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        this.parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        this.expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        assertEquals(this.expected, AppParameters.parse(this.parametersStub));","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        this.parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        assertEquals(this.expected, AppParameters.parse(this.parametersStub));","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        this.expected.setConfigPath(null);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        assertEquals(this.expected, AppParameters.parse(this.parametersStub));","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"            return Collections.unmodifiableMap(this.namedParameters);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"ruijietay":9,"-":80}},{"path":"src/test/java/seedu/address/QrCodeGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.WriterException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.QrCodeGenerator;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"class QrCodeGeneratorTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"    void generateQrCode_validPerson_success() throws IOException, WriterException {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"        QrCodeGenerator.generateQrCode(ALICE);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"        assertTrue(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"    void getQrCodePath_validPerson_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"        Path path \u003d QrCodeGenerator.getQrCodePath(ALICE);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"        String expected \u003d Paths.get(QrCodeGenerator.QR_CODE_FOLDER.toString(), ALICE.hashCode() + \".png\").toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"        assertEquals(expected, path.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"dillontkh":31}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.condition.EnabledOnOs;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.condition.OS;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    @EnabledOnOs({ OS.WINDOWS })","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    public void isWindows() {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(AppUtil.OS.isWindows());","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    @EnabledOnOs({ OS.MAC })","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    public void isMac() {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(AppUtil.OS.isMac());","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    @EnabledOnOs({ OS.LINUX })","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    public void isLinux() {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(AppUtil.OS.isLinux());","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"RyanNgWH":21,"-":36}},{"path":"src/test/java/seedu/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        Path configFilePath \u003d this.tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ruijietay":1,"-":115}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"    public void isInteger() {","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"        // EP: empty strings","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"        assertFalse(StringUtil.isInteger(\"\")); // Boundary value","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"        assertFalse(StringUtil.isInteger(\"  \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"        // EP: not a number","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"        assertFalse(StringUtil.isInteger(\"a\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"        assertFalse(StringUtil.isInteger(\"aaa\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"jjchee77"},"content":"        // EP: numbers with white space","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"jjchee77"},"content":"        assertFalse(StringUtil.isInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"jjchee77"},"content":"        assertFalse(StringUtil.isInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"jjchee77"},"content":"        // EP: valid integers, should return true","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"jjchee77"},"content":"        assertTrue(StringUtil.isInteger(\"0\")); // Boundary value","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"jjchee77"},"content":"        assertTrue(StringUtil.isInteger(\"1\")); // Boundary value","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"jjchee77"},"content":"        assertTrue(StringUtil.isInteger(\"-1\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"jjchee77"},"content":"        assertTrue(StringUtil.isInteger(\"10\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"jjchee77"},"content":"        assertTrue(StringUtil.isInteger(Integer.toString(Integer.MAX_VALUE)));","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"jjchee77"},"content":"        assertTrue(StringUtil.isInteger(Integer.toString(Integer.MIN_VALUE)));","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jjchee77":23,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ListCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"                new JsonAddressBookStorage(this.temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"                new JsonUserPrefsStorage(this.temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        this.logic \u003d new LogicManager(this.model, storage);","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"        assertCommandException(deleteCommand, String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"        String listCommand \u003d ListCommandMessages.COMMAND_WORD;","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(listCommand, ListCommandMessages.MESSAGE_NO_CLIENTS_TO_LIST, this.model);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e this.logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        CommandResult result \u003d this.logic.execute(inputCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedModel, this.model);","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(this.model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e this.logic.execute(inputCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedModel, this.model);","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        Path prefPath \u003d this.temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"ruijietay"},"content":"                new JsonUserPrefsStorage(this.temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"ruijietay"},"content":"        this.logic \u003d new LogicManager(this.model, storage);","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"        String addCommand \u003d AddCommandMessages.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bgopi23":9,"ruijietay":16,"-":154}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        this.model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(this.model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(new AddCommand(validPerson), this.model,","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"                String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        Person personInList \u003d this.model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(new AddCommand(personInList), this.model,","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"                AddCommandMessages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bgopi23":3,"ruijietay":5,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        Person validPerson \u003d new PersonBuilder().withTags(\"friend\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        assertEquals(String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"    public void execute_personAcceptedByModel_addSuccessfulWithNote() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        Person validPerson \u003d new PersonBuilder().withNote(\"friend\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"        assertEquals(String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"    public void execute_personAcceptedByModel_addSuccessfulWithEmptyEmail() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"        Person validPerson \u003d new PersonBuilder().withEmail(\"\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"        assertEquals(String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        assertThrows(CommandException.class, AddCommandMessages.MESSAGE_DUPLICATE_PERSON, (","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"        ) -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"ruijietay"},"content":"            return this.personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"ruijietay"},"content":"            this.personsAdded.add(person);","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bgopi23":27,"ruijietay":2,"-":201}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ClearCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommandMessages.MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"    public void execute_nonEmptyAddressBookConfirmed_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommandMessages.MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"    public void execute_nonEmptyAddressBookUnconfirmed_confirmMessage() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ClearCommand(false), model, ClearCommandMessages.MESSAGE_CONFIRM,","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bgopi23":7,"-":29,"dillontkh":8}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_BREAK_BETWEEN_SETS;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_REPS;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_SETS;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_PHONE_ALICE \u003d \"94351253\";","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_PHONE_AMY \u003d \"87382918\";","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_PHONE_BOB \u003d \"98302172\";","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EMAIL_EMPTY \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_ADDRESS_EMPTY \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    public static final Float VALID_WEIGHT_AMY \u003d 170f;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    public static final Float VALID_WEIGHT_BOB \u003d 180f;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    public static final Float VALID_HEIGHT_AMY \u003d 60f;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public static final String VALID_NOTE_BOB \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    public static final String VALID_NOTE_AMY \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"    public static final String VALID_NOTE_NOT_EMPTY \u003d \"valid note\";","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"    public static final String EDIT_TAG_RANDOM_CASE \u003d \"/eDiT\";","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"    public static final String EDIT_TAG_WITH_MORE_WORDS \u003d \"/edit more words\";","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"    public static final String EDIT_TAG_LEADING_WHITESPACE \u003d \"          /edit\";","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"    public static final String EDIT_TAG_TRAILING_WHITESPACE \u003d \"/edit         \";","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"    public static final String EMAIL_DESC_EMPTY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"    public static final String ADDRESS_DESC_EMPTY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"    public static final String WEIGHT_DESC_AMY \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"    public static final String HEIGHT_DESC_AMY \u003d \" \" + PREFIX_HEIGHT + VALID_HEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"    public static final String NOTE_DESC_AMY \u003d \" \" + PREFIX_NOTE + VALID_NOTE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"    public static final String NOTE_DESC_BOB \u003d \" \" + PREFIX_NOTE + VALID_NOTE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"    public static final String INVALID_WEIGHT_OVER_LIMIT \u003d \" \" + \"9999999\"; // Limit to 5000","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"    public static final String INVALID_WEIGHT_NEGATIVE \u003d \" \" + \"-1\"; // No negative numbers","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_NAME \u003d \"Push Ups\";","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_SETS \u003d \"3\";","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_REPS \u003d \"12\";","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_BREAK \u003d \"60\";","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_NAME_DESC \u003d \" \" + PREFIX_EXERCISE_NAME + VALID_EXERCISE_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_SETS_DESC \u003d \" \" + PREFIX_EXERCISE_SETS + VALID_EXERCISE_SETS;","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_REPS_DESC \u003d \" \" + PREFIX_EXERCISE_REPS + VALID_EXERCISE_REPS;","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EXERCISE_BREAK_DESC \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        \" \" + PREFIX_EXERCISE_BREAK_BETWEEN_SETS + VALID_EXERCISE_BREAK;","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"    public static final String INVALID_EXERCISE_NAME_DESC \u003d \" \" + PREFIX_EXERCISE_NAME + \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"    public static final String INVALID_EXERCISE_SETS_DESC \u003d \" \" + PREFIX_EXERCISE_SETS + \"0\";","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"    public static final String INVALID_EXERCISE_REPS_DESC \u003d \" \" + PREFIX_EXERCISE_REPS + \"-10\";","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"    public static final String INVALID_EXERCISE_BREAK_DESC \u003d \" \" + PREFIX_EXERCISE_BREAK_BETWEEN_SETS + \"-5\";","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"    public static final String PREAMBLE_EMPTY \u003d \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"            .withNote(VALID_NOTE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"            .withNote(VALID_NOTE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"     * Convenience wrapper to","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"        model.updateFilteredPersonList(new NameContainsSubstringPredicate(person.getName().getValue()));","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RyanNgWH":11,"ruijietay":18,"jjchee77":29,"-":116,"dillontkh":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        Person personToDelete \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(DeleteCommandMessages.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"               personToDelete.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        ModelManager expectedModel \u003d new ModelManager(this.model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(deleteCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(this.model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(deleteCommand, this.model, String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        Person personToDelete \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(DeleteCommandMessages.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"                personToDelete.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(this.model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(deleteCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c this.model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(deleteCommand, this.model, String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bgopi23":8,"ruijietay":10,"-":103,"dillontkh":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(this.model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(editCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(this.model.getFilteredPersonList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        Person lastPerson \u003d this.model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).withNote(VALID_NOTE_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                .withPhone(VALID_PHONE_BOB).withNote(VALID_NOTE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(editCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(editCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"        Person personInFilteredList \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(this.model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(editCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(editCommand, this.model, EditCommandMessages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"        Person personInList \u003d this.model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(editCommand, this.model, EditCommandMessages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"ruijietay"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(this.model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(editCommand, this.model, String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"bgopi23"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c this.model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(editCommand, this.model, String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":154,"author":{"gitId":"bgopi23"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"dillontkh"},"content":"        assertFalse(standardCommand.equals(new ClearCommand(true)));","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"bgopi23":10,"ruijietay":26,"-":151,"dillontkh":5}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        // different weight -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withWeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        // different height -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withHeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNote(VALID_NOTE_BOB + \" DIFF_NOTE\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"                + editPersonDescriptor.getWeight().orElse(null) + \", weight\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"                + editPersonDescriptor.getHeight().orElse(null) + \", height\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"                + editPersonDescriptor.getNote().orElse(null) + \", note\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ruijietay":17,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ExitCommandMessages.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(new ExitCommand(), this.model, expectedCommandResult, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bgopi23":1,"ruijietay":1,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_NO_CLIENTS_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_ONE_CLIENT_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_WITHOUT_EMAIL;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_WITHOUT_EMAIL;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_WITHOUT_EMAIL;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookSomeWithoutEmail;","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AddressContainsSubstringPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.EmailContainsSubstringPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NoteContainsSubstringPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.TagSetContainsAllTagsPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.predicates.WeightMapContainsWeightRangePredicate;","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":" * {@code FindCommand}.","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"    private Model modelWithoutSomeAttributes \u003d new ModelManager(getTypicalAddressBookSomeWithoutEmail(),","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"            new UserPrefs());","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"    private Model expectedModelWithoutSomeAttributes \u003d new ModelManager(getTypicalAddressBookSomeWithoutEmail(),","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"            new UserPrefs());","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    public void resetModels() {","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        this.model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate firstPredicate \u003d new NameContainsSubstringPredicate(\"Alex\");","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate secondPredicate \u003d new NameContainsSubstringPredicate(\"Chris\");","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate firstPredicateClone \u003d new NameContainsSubstringPredicate(\"Alex\");","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(new CombinedPredicates(firstPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(new CombinedPredicates(secondPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(new CombinedPredicates(firstPredicateClone));","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"bgopi23"},"content":"    public void execute_searchEmptyName_allPersonsFound() {","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 7);","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        // Empty name","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"    public void execute_searchEmptyPhone_allPersonsFound() {","lastModifiedDate":"2024-04-07"},{"lineNumber":107,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 7);","lastModifiedDate":"2024-04-07"},{"lineNumber":108,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"bgopi23"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"        // Empty phone","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"bgopi23"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(phonePredicate));","lastModifiedDate":"2024-04-07"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":118,"author":{"gitId":"bgopi23"},"content":"    public void execute_searchEmptyEmail_somePersonsFound() {","lastModifiedDate":"2024-04-07"},{"lineNumber":119,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-04-07"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"bgopi23"},"content":"        EmailContainsSubstringPredicate emailPredicate \u003d new EmailContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-04-07"},{"lineNumber":122,"author":{"gitId":"bgopi23"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(emailPredicate));","lastModifiedDate":"2024-04-07"},{"lineNumber":123,"author":{"gitId":"bgopi23"},"content":"        this.expectedModelWithoutSomeAttributes.updateFilteredPersonList(emailPredicate);","lastModifiedDate":"2024-04-07"},{"lineNumber":124,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(command, this.modelWithoutSomeAttributes, expectedMessage,","lastModifiedDate":"2024-04-07"},{"lineNumber":125,"author":{"gitId":"bgopi23"},"content":"                this.expectedModelWithoutSomeAttributes);","lastModifiedDate":"2024-04-07"},{"lineNumber":126,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(DANIEL, ELLE), this.modelWithoutSomeAttributes.getFilteredPersonList());","lastModifiedDate":"2024-04-07"},{"lineNumber":127,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":130,"author":{"gitId":"bgopi23"},"content":"    public void execute_searchEmptyAddress_somePersonsFound() {","lastModifiedDate":"2024-04-07"},{"lineNumber":131,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-04-07"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"bgopi23"},"content":"        AddressContainsSubstringPredicate addressPredicate \u003d new AddressContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-04-07"},{"lineNumber":134,"author":{"gitId":"bgopi23"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(addressPredicate));","lastModifiedDate":"2024-04-07"},{"lineNumber":135,"author":{"gitId":"bgopi23"},"content":"        this.expectedModelWithoutSomeAttributes.updateFilteredPersonList(addressPredicate);","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(command, this.modelWithoutSomeAttributes, expectedMessage,","lastModifiedDate":"2024-04-07"},{"lineNumber":137,"author":{"gitId":"bgopi23"},"content":"                this.expectedModelWithoutSomeAttributes);","lastModifiedDate":"2024-04-07"},{"lineNumber":138,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(CARL_WITHOUT_EMAIL, DANIEL, ELLE),","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"bgopi23"},"content":"                this.modelWithoutSomeAttributes.getFilteredPersonList());","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"bgopi23"},"content":"    public void execute_searchEmptyTag_somePersonsFound() {","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-04-07"},{"lineNumber":145,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":146,"author":{"gitId":"bgopi23"},"content":"        TagSetContainsAllTagsPredicate tagsPredicate \u003d new TagSetContainsAllTagsPredicate(new HashSet\u003c\u003e());","lastModifiedDate":"2024-04-07"},{"lineNumber":147,"author":{"gitId":"bgopi23"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(tagsPredicate));","lastModifiedDate":"2024-04-07"},{"lineNumber":148,"author":{"gitId":"bgopi23"},"content":"        this.expectedModelWithoutSomeAttributes.updateFilteredPersonList(tagsPredicate);","lastModifiedDate":"2024-04-07"},{"lineNumber":149,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(command, this.modelWithoutSomeAttributes, expectedMessage,","lastModifiedDate":"2024-04-07"},{"lineNumber":150,"author":{"gitId":"bgopi23"},"content":"                this.expectedModelWithoutSomeAttributes);","lastModifiedDate":"2024-04-07"},{"lineNumber":151,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(BENSON_WITHOUT_EMAIL, DANIEL),","lastModifiedDate":"2024-04-07"},{"lineNumber":152,"author":{"gitId":"bgopi23"},"content":"                this.modelWithoutSomeAttributes.getFilteredPersonList());","lastModifiedDate":"2024-04-07"},{"lineNumber":153,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":154,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":155,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":156,"author":{"gitId":"bgopi23"},"content":"    public void execute_searchEmptyNote_somePersonsFound() {","lastModifiedDate":"2024-04-07"},{"lineNumber":157,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-04-07"},{"lineNumber":158,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":159,"author":{"gitId":"bgopi23"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-04-07"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(notePredicate));","lastModifiedDate":"2024-04-07"},{"lineNumber":161,"author":{"gitId":"bgopi23"},"content":"        this.expectedModelWithoutSomeAttributes.updateFilteredPersonList(notePredicate);","lastModifiedDate":"2024-04-07"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(command, this.modelWithoutSomeAttributes, expectedMessage,","lastModifiedDate":"2024-04-07"},{"lineNumber":163,"author":{"gitId":"bgopi23"},"content":"                this.expectedModelWithoutSomeAttributes);","lastModifiedDate":"2024-04-07"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(ALICE_WITHOUT_EMAIL, DANIEL),","lastModifiedDate":"2024-04-07"},{"lineNumber":165,"author":{"gitId":"bgopi23"},"content":"                this.modelWithoutSomeAttributes.getFilteredPersonList());","lastModifiedDate":"2024-04-07"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":167,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"    public void execute_searchEmptyWeight_somePersonsFound() throws ParseException {","lastModifiedDate":"2024-04-07"},{"lineNumber":170,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-04-07"},{"lineNumber":171,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"        WeightMapContainsWeightRangePredicate weightPredicate \u003d","lastModifiedDate":"2024-04-07"},{"lineNumber":173,"author":{"gitId":"bgopi23"},"content":"                new WeightMapContainsWeightRangePredicate(ParserUtil.parseSearchRange(Optional.empty()));","lastModifiedDate":"2024-04-07"},{"lineNumber":174,"author":{"gitId":"bgopi23"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(weightPredicate));","lastModifiedDate":"2024-04-07"},{"lineNumber":175,"author":{"gitId":"bgopi23"},"content":"        this.expectedModelWithoutSomeAttributes.updateFilteredPersonList(weightPredicate);","lastModifiedDate":"2024-04-07"},{"lineNumber":176,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(command, this.modelWithoutSomeAttributes, expectedMessage,","lastModifiedDate":"2024-04-07"},{"lineNumber":177,"author":{"gitId":"bgopi23"},"content":"                this.expectedModelWithoutSomeAttributes);","lastModifiedDate":"2024-04-07"},{"lineNumber":178,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(DANIEL, ELLE), this.modelWithoutSomeAttributes.getFilteredPersonList());","lastModifiedDate":"2024-04-07"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchName_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchName_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ALICE), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new NameContainsSubstringPredicate(\"meier\");","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchPhone_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate predicate \u003d new PhoneContainsSubstringPredicate(\"11111111\");","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchPhone_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate predicate \u003d new PhoneContainsSubstringPredicate(\"9435\");","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ALICE), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new PhoneContainsSubstringPredicate(\"9482\");","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ELLE, FIONA, GEORGE), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":239,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchEmail_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"RyanNgWH"},"content":"        EmailContainsSubstringPredicate predicate \u003d new EmailContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":243,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchEmail_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":252,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"RyanNgWH"},"content":"        EmailContainsSubstringPredicate predicate \u003d new EmailContainsSubstringPredicate(\"johnd\");","lastModifiedDate":"2024-03-19"},{"lineNumber":254,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(BENSON), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":259,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 7);","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new EmailContainsSubstringPredicate(\"example.com\");","lastModifiedDate":"2024-03-19"},{"lineNumber":262,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":263,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"ruijietay"},"content":"                this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":268,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":269,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":270,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchAddress_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":271,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"RyanNgWH"},"content":"        AddressContainsSubstringPredicate predicate \u003d new AddressContainsSubstringPredicate(\"Republic City\");","lastModifiedDate":"2024-03-19"},{"lineNumber":273,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":274,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":278,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":279,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":280,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchAddress_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":281,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":282,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":283,"author":{"gitId":"RyanNgWH"},"content":"        AddressContainsSubstringPredicate predicate \u003d new AddressContainsSubstringPredicate(\"tokyo\");","lastModifiedDate":"2024-03-19"},{"lineNumber":284,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":285,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(FIONA), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":289,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":290,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":291,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new AddressContainsSubstringPredicate(\"street\");","lastModifiedDate":"2024-03-19"},{"lineNumber":292,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":293,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":297,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":298,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":299,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchTags_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":300,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":301,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":302,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":303,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"Enemies\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":304,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":305,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":306,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":311,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":312,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchSingleTag_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":313,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":314,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":315,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":316,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":317,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"owesmoney\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":318,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":319,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":320,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(BENSON), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":324,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":325,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":326,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":327,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new TagSetContainsAllTagsPredicate(new HashSet\u003c\u003e(Arrays.asList(new Tag(\"friends\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":328,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":329,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":330,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":334,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":335,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":336,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchMultipleTags_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":337,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":338,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":339,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":340,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":341,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"owesmoney\"), new Tag(\"friends\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":342,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":343,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":344,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(BENSON), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":347,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":348,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":349,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":350,"author":{"gitId":"dillontkh"},"content":"    public void execute_searchPartialTag_noPersonsFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":351,"author":{"gitId":"dillontkh"},"content":"        // No persons found","lastModifiedDate":"2024-03-28"},{"lineNumber":352,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":353,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":354,"author":{"gitId":"dillontkh"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-28"},{"lineNumber":355,"author":{"gitId":"dillontkh"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"fri\"))));","lastModifiedDate":"2024-03-28"},{"lineNumber":356,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":357,"author":{"gitId":"dillontkh"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-28"},{"lineNumber":358,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":359,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":360,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":361,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":362,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":363,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":364,"author":{"gitId":"dillontkh"},"content":"    public void execute_searchCaseInsensitiveTag_personsFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"dillontkh"},"content":"        // No persons found","lastModifiedDate":"2024-03-28"},{"lineNumber":366,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":367,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":368,"author":{"gitId":"dillontkh"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-28"},{"lineNumber":369,"author":{"gitId":"dillontkh"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"FrIenDs\"))));","lastModifiedDate":"2024-03-28"},{"lineNumber":370,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":371,"author":{"gitId":"dillontkh"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-28"},{"lineNumber":372,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":373,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":376,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":377,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":378,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchNote_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":379,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":380,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate predicate \u003d new NoteContainsSubstringPredicate(\"enemy\");","lastModifiedDate":"2024-03-19"},{"lineNumber":381,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":382,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":383,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":384,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":385,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":386,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":387,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":388,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchNote_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":389,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":390,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":391,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate predicate \u003d new NoteContainsSubstringPredicate(\"love\");","lastModifiedDate":"2024-03-19"},{"lineNumber":392,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":393,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(FIONA), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":397,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":398,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":399,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new NoteContainsSubstringPredicate(\"best\");","lastModifiedDate":"2024-03-19"},{"lineNumber":400,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":401,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":402,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":403,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":404,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":405,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":406,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":407,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchMultiple_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":408,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":409,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":410,"author":{"gitId":"RyanNgWH"},"content":"        // All mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":411,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(\"enemy\");","lastModifiedDate":"2024-03-19"},{"lineNumber":412,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":413,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":414,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(notePredicate, namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":415,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":416,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(notePredicate, namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":417,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":418,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":419,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":420,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":421,"author":{"gitId":"RyanNgWH"},"content":"        // Some match, some mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":422,"author":{"gitId":"RyanNgWH"},"content":"        notePredicate \u003d new NoteContainsSubstringPredicate(\"best\");","lastModifiedDate":"2024-03-19"},{"lineNumber":423,"author":{"gitId":"RyanNgWH"},"content":"        namePredicate \u003d new NameContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":424,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":425,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(notePredicate, namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":426,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":427,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(notePredicate, namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":428,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":430,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":432,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":433,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":434,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_addPersonSearch_personFound() throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":435,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-04-03"},{"lineNumber":436,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":437,"author":{"gitId":"RyanNgWH"},"content":"        AddCommand addHoonCommand \u003d new AddCommand(HOON);","lastModifiedDate":"2024-04-03"},{"lineNumber":438,"author":{"gitId":"ruijietay"},"content":"        addHoonCommand.execute(this.model);","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"ruijietay"},"content":"        addHoonCommand.execute(this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":440,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":441,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"Hoon Meier\");","lastModifiedDate":"2024-04-03"},{"lineNumber":442,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":443,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(namePredicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":444,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":445,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(namePredicate));","lastModifiedDate":"2024-04-03"},{"lineNumber":446,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":447,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":448,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(HOON),","lastModifiedDate":"2024-04-03"},{"lineNumber":449,"author":{"gitId":"ruijietay"},"content":"                this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":450,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":451,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":452,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":453,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchMultiple_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":454,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":455,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":456,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":457,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(\"best\");","lastModifiedDate":"2024-03-19"},{"lineNumber":458,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":459,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":460,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(notePredicate, namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":461,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":462,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(notePredicate, namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":463,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":464,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":465,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(ALICE), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":466,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":467,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":468,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":469,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":470,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate tagsPredicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":471,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"friends\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":472,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"8765\");","lastModifiedDate":"2024-03-19"},{"lineNumber":473,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":474,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(tagsPredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":475,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":476,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(tagsPredicate, phonePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":477,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-04-04"},{"lineNumber":478,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(command, this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":479,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), this.model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":480,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":481,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":484,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"Fiona\");","lastModifiedDate":"2024-03-16"},{"lineNumber":485,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":486,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findCommand \u003d new FindCommand(combinedPredicates);","lastModifiedDate":"2024-03-16"},{"lineNumber":487,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicates\u003d\" + combinedPredicates + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RyanNgWH":214,"bgopi23":103,"ruijietay":87,"-":66,"dillontkh":20}},{"path":"src/test/java/seedu/address/logic/commands/FitAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.FitAddCommandMessages;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseToAdd;","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"public class FitAddCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    public void execute_validIndexAndExercise_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        Person personToEdit \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        Exercise newExercise \u003d new Exercise(\"Test Exercise\", 3, 10, 60);","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        ExerciseToAdd exerciseToAdd \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"            new ExerciseToAdd(\"Test Exercise\", Optional.of(3), Optional.of(10), Optional.of(60));","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e exercisesToAdd \u003d new HashSet\u003c\u003e(List.of(exerciseToAdd));","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand fitAddCommand \u003d new FitAddCommand(INDEX_FIRST_PERSON, exercisesToAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        String expectedMessage \u003d FitAddCommandMessages.MESSAGE_ADD_EXERCISE_SUCCESS;","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(),","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"            new ExerciseSet(new HashSet\u003c\u003e(List.of(newExercise))));","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(fitAddCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(this.model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e exercisesToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand fitAddCommand \u003d new FitAddCommand(outOfBoundIndex, exercisesToAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(fitAddCommand, this.model, FitAddCommandMessages.MESSAGE_INVALID_INDEX_FITADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c this.model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e exercisesToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand fitAddCommand \u003d new FitAddCommand(outOfBoundIndex, exercisesToAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(fitAddCommand, this.model, FitAddCommandMessages.MESSAGE_INVALID_INDEX_FITADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e exercisesToAdd1 \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"            new ExerciseToAdd(\"Exercise 1\", Optional.of(3), Optional.of(10), Optional.of(60))));","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e exercisesToAdd2 \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"            new ExerciseToAdd(\"Exercise 2\", Optional.of(4), Optional.of(12), Optional.of(90))));","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand addExercise1Command \u003d new FitAddCommand(INDEX_FIRST_PERSON, exercisesToAdd1);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand addExercise2Command \u003d new FitAddCommand(INDEX_SECOND_PERSON, exercisesToAdd2);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"        assertEquals(addExercise1Command, addExercise1Command);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand addExercise1CommandCopy \u003d new FitAddCommand(INDEX_FIRST_PERSON, exercisesToAdd1);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        assertEquals(addExercise1Command, addExercise1CommandCopy);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(1, addExercise1Command);","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(null, addExercise1Command);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(addExercise1Command, addExercise2Command);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"        // different exercises -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"        FitAddCommand addDifferentExerciseCommand \u003d new FitAddCommand(INDEX_FIRST_PERSON, exercisesToAdd2);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(addExercise1Command, addDifferentExerciseCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ruijietay":8,"jjchee77":104}},{"path":"src/test/java/seedu/address/logic/commands/FitDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.FitDeleteCommandMessages;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"public class FitDeleteCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    public void execute_validIndexAndExerciseName_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        Person personToEdit \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        String exerciseName \u003d \"Test Exercise\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        Exercise exerciseToDelete \u003d new Exercise(exerciseName, Exercise.DEFAULT_SETS, Exercise.DEFAULT_REPS,","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"            Exercise.DEFAULT_BREAK);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e updatedExercises \u003d new HashSet\u003c\u003e(personToEdit.getExerciseSet().getValue());","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        updatedExercises.add(exerciseToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(), new ExerciseSet(updatedExercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        this.model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand fitDeleteCommand \u003d new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.of(exerciseName), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        String expectedMessage \u003d String.format(FitDeleteCommandMessages.MESSAGE_DELETE_EXERCISE_SUCCESS, exerciseName);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        ModelManager expectedModel \u003d new ModelManager(this.model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e expectedExercises \u003d new HashSet\u003c\u003e(editedPerson.getExerciseSet().getValue());","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        expectedExercises.remove(exerciseToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        Person updatedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(), new ExerciseSet(expectedExercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        expectedModel.setPerson(editedPerson, updatedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(fitDeleteCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"    public void execute_validIndexAndDeleteAll_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        Person personToEdit \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e exercises \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"            new Exercise(\"Exercise 1\", 3, 10, 60),","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"            new Exercise(\"Exercise 2\", 4, 12, 90)","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"        ));","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(), new ExerciseSet(exercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        this.model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand fitDeleteCommand \u003d new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.empty(), true);","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        String expectedMessage \u003d FitDeleteCommandMessages.MESSAGE_DELETE_ALL_EXERCISES_SUCCESS;","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        ModelManager expectedModel \u003d new ModelManager(this.model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"        Person updatedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(), new ExerciseSet(new HashSet\u003c\u003e()));","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"        expectedModel.setPerson(editedPerson, updatedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(fitDeleteCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(this.model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand fitDeleteCommand \u003d new FitDeleteCommand(outOfBoundIndex, Optional.empty(), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(fitDeleteCommand, this.model, FitDeleteCommandMessages.MESSAGE_INVALID_INDEX_FITDELETE);","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c this.model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand fitDeleteCommand \u003d new FitDeleteCommand(outOfBoundIndex, Optional.empty(), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(fitDeleteCommand, this.model, FitDeleteCommandMessages.MESSAGE_INVALID_INDEX_FITDELETE);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"    public void execute_invalidExerciseName_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"        String invalidExerciseName \u003d \"Invalid Exercise\";","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand fitDeleteCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"            new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.of(invalidExerciseName), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(fitDeleteCommand, this.model,","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"            String.format(FitDeleteCommandMessages.MESSAGE_EXERCISE_NAME_DOES_NOT_EXIST,","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"jjchee77"},"content":"                invalidExerciseName));","lastModifiedDate":"2024-04-11"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"    public void execute_deleteAllWithNoExercises_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        Person personToEdit \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getAddress(), personToEdit.getWeights(), personToEdit.getHeight(),","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"            personToEdit.getNote(), personToEdit.getTags(), new ExerciseSet(new HashSet\u003c\u003e()));","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"        this.model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand fitDeleteCommand \u003d new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.empty(), true);","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(fitDeleteCommand, this.model,","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"                FitDeleteCommandMessages.MESSAGE_DELETE_ALL_EXERCISES_FAILURE);","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand deleteFirstCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"            new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.of(\"Exercise 1\"), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand deleteSecondCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"jjchee77"},"content":"            new FitDeleteCommand(INDEX_SECOND_PERSON, Optional.of(\"Exercise 2\"), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand deleteAllCommand \u003d new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.empty(), true);","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand deleteFirstCommandCopy \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"            new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.of(\"Exercise 1\"), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"jjchee77"},"content":"        // different exercise name -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"jjchee77"},"content":"        FitDeleteCommand deleteFirstCommandDifferentExercise \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"jjchee77"},"content":"            new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.of(\"Different Exercise\"), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(deleteFirstCommand, deleteFirstCommandDifferentExercise);","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"jjchee77"},"content":"        // different delete all flag -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(deleteFirstCommand, deleteAllCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ruijietay":18,"jjchee77":146}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.HelpCommandMessages.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(new HelpCommand(), this.model, expectedCommandResult, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bgopi23":1,"ruijietay":1,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithNothing;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithSinglePerson;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ListCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"    private Model emptyModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"    private Model expectedEmptyModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"    private Model singlePersonModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"    private Model expectedSinglePersonModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        this.emptyModel \u003d new ModelManager(getTypicalAddressBookWithNothing(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        this.singlePersonModel \u003d new ModelManager(getTypicalAddressBookWithSinglePerson(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        this.model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        this.expectedSinglePersonModel \u003d new ModelManager(this.singlePersonModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        this.expectedModel \u003d new ModelManager(this.model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.expectedEmptyModel \u003d new ModelManager(this.emptyModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        int listSize \u003d this.expectedModel.getFilteredPersonList().size();","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_ALL_CLIENTS_LISTED, listSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(new ListCommand(), this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"    public void execute_emptyList_showsNothing() {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_NO_CLIENTS_TO_LIST);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(new ListCommand(), this.emptyModel, expectedMessage, this.expectedEmptyModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"    public void execute_singlePersonList_showsEverything() {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_ONE_CLIENT_LISTED);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(new ListCommand(), this.singlePersonModel,","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"                expectedMessage, this.expectedSinglePersonModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        showPersonAtIndex(this.model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        int listSize \u003d this.expectedModel.getFilteredPersonList().size();","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_ALL_CLIENTS_LISTED, listSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(new ListCommand(), this.model, expectedMessage, this.expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bgopi23":17,"ruijietay":15,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithoutEmail;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"class NoteCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    private static final String NOTE_STUB \u003d \"Some note\";","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    private static final String EMPTY_NOTE \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"    private Model modelWithoutEmail \u003d new ModelManager(getTypicalAddressBookWithoutEmail(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public void execute_addNoteUnfilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(NOTE_STUB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().getValue()));","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(NoteCommandMessages.MESSAGE_ADD_NOTE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(noteCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    public void execute_deleteNoteUnfilteredList_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(EMPTY_NOTE).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().getValue()));","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(NoteCommandMessages.MESSAGE_DELETE_NOTE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(noteCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"    public void execute_addNoteUnfilteredListWithoutEmail_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d this.modelWithoutEmail.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(NOTE_STUB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().getValue()));","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(NoteCommandMessages.MESSAGE_ADD_NOTE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.modelWithoutEmail.getAddressBook()),","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"                new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(noteCommand, this.modelWithoutEmail, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        Index invalidIndex \u003d Index.fromOneBased(this.model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(invalidIndex, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(noteCommand, this.model, String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"bgopi23"},"content":"                NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"bgopi23"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"        NoteCommand firstNote \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"bgopi23"},"content":"        NoteCommand secondNote \u003d new NoteCommand(INDEX_SECOND_PERSON, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"bgopi23"},"content":"        NoteCommand firstNoteClone \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        // same object \u003d\u003e return true","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"bgopi23"},"content":"        assertEquals(firstNote, firstNote);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"        // same note details \u003d\u003e return true","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"        assertEquals(firstNote, firstNoteClone);","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        // same note, different person \u003d\u003e return false","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        assertNotEquals(firstNote, secondNote);","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"bgopi23"},"content":"        // note not equal to number \u003d\u003e return false","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"        assertNotEquals(firstNote, 10);","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"RyanNgWH":8,"bgopi23":45,"ruijietay":52,"dillontkh":3}},{"path":"src/test/java/seedu/address/logic/commands/WeightCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_INDEX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithoutEmail;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.WeightCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"class WeightCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    private static final String WEIGHT_STUB \u003d \"2024-01-20T10:15:33\u003d169f\";","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    private Model modelWithoutEmail \u003d new ModelManager(getTypicalAddressBookWithoutEmail(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public void execute_addWeightUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withWeights(WEIGHT_STUB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"                new WeightEntry(editedPerson.getLatestWeight().get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        String expectedMessage \u003d String.format(WeightCommandMessages.MESSAGE_ADD_WEIGHT_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(weightCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"    public void execute_deleteWeightUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d this.model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withWeights().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(INDEX_FIRST_PERSON, new WeightEntry(","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"                new AbstractMap.SimpleEntry\u003c\u003e(WeightEntry.getTimeOfExecution(), new Weight(0f))));","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        String expectedMessage \u003d String.format(WeightCommandMessages.MESSAGE_DELETE_WEIGHT_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"               editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(weightCommand, this.model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"    public void execute_addWeightUnfilteredListWithoutEmail_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d this.modelWithoutEmail.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withWeights(WEIGHT_STUB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                new WeightEntry(editedPerson.getLatestWeight().get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        String expectedMessage \u003d String.format(WeightCommandMessages.MESSAGE_ADD_WEIGHT_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(this.modelWithoutEmail.getAddressBook()),","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"                new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(weightCommand, this.modelWithoutEmail, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        WeightEntry weightEntry \u003d new WeightEntry(","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"                new AbstractMap.SimpleEntry\u003c\u003e(WeightEntry.getTimeOfExecution(), new Weight(180f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        Index invalidIndex \u003d Index.fromOneBased(this.model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(invalidIndex, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(weightCommand, this.model, MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        WeightEntry weightEntry \u003d new WeightEntry(","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"                new AbstractMap.SimpleEntry\u003c\u003e(WeightEntry.getTimeOfExecution(), new Weight(180f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"        WeightCommand firstWeight \u003d new WeightCommand(INDEX_FIRST_PERSON, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        WeightCommand secondWeight \u003d new WeightCommand(INDEX_SECOND_PERSON, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        WeightCommand firstWeightClone \u003d new WeightCommand(INDEX_FIRST_PERSON, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        // same weight \u003d\u003e return true","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"        assertEquals(firstWeight, firstWeight);","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        // same weight details \u003d\u003e return true","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        assertEquals(firstWeight, firstWeightClone);","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        // same weight but different person \u003d\u003e return false","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        assertNotEquals(firstWeight, secondWeight);","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":114}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_EMPTY;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_NAME_PARAMETER_MISSING;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_NO_PARAMETERS;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_PHONE_PARAMETER_MISSING;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.EmailMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.NameMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.PhoneMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.TagMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                + ADDRESS_DESC_BOB + NOTE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser,","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"                        + NOTE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"                + ADDRESS_DESC_BOB + NOTE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        // multiple notes","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, NOTE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NOTE));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"                        + NAME_DESC_AMY + ADDRESS_DESC_AMY + NOTE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE, PREFIX_NOTE));","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"        // no email","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withEmail(\"\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_EMPTY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"                + NOTE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"        // no address","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withAddress(\"\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_EMPTY","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"                + NOTE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"                        + NOTE_DESC_AMY,","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"        // preamble and phone number e.g (add lala p/98989898)","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"        // missing phone prefix e.g (add n/John)","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_PHONE_PARAMETER_MISSING, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"        // missing name prefix e.g (add p/99998989)","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, PHONE_DESC_BOB,","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_NAME_PARAMETER_MISSING, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"        // all prefixes missing e.g (add name 99898888)","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"bgopi23"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, NameMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"bgopi23"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, PhoneMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"bgopi23"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, EmailMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"bgopi23"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, TagMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"bgopi23"},"content":"        // empty preamble (add)","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, PREAMBLE_EMPTY,","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_NO_PARAMETERS, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bgopi23":27,"ruijietay":41,"jjchee77":13,"-":123}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ClearCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ExitCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.HelpCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ListCommandMessages;","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AlwaysTruePredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        AddCommand command \u003d (AddCommand) this.parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.parser.parseCommand(ClearCommandMessages.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.parser.parseCommand(ClearCommandMessages.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        DeleteCommand command \u003d (DeleteCommand) this.parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"                DeleteCommandMessages.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        EditCommand command \u003d (EditCommand) this.parser.parseCommand(EditCommandMessages.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.parser.parseCommand(ExitCommandMessages.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.parser.parseCommand(ExitCommandMessages.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        FindCommand command \u003d (FindCommand) this.parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"                FindCommandMessages.COMMAND_WORD + \" \" + PREFIX_NAME + \"Alex\");","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"Alex\");","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"        AlwaysTruePredicate emailPredicate \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"        AlwaysTruePredicate addressPredicate \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        AlwaysTruePredicate weightPredicate \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"bgopi23"},"content":"        AlwaysTruePredicate heightPredicate \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"        AlwaysTruePredicate notePredicate \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"bgopi23"},"content":"        AlwaysTruePredicate tagsPredicate \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"                namePredicate, phonePredicate, emailPredicate, addressPredicate,","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"                weightPredicate, heightPredicate, notePredicate, tagsPredicate));","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.parser.parseCommand(HelpCommandMessages.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.parser.parseCommand(HelpCommandMessages.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"bgopi23"},"content":"        assertTrue(this.parser.parseCommand(ListCommandMessages.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2024-04-11"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"        assertTrue(this.parser.parseCommand(ListCommandMessages.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2024-04-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"                HelpCommandMessages.MESSAGE_USAGE), () -\u003e this.parser.parseCommand(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e this.parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"RyanNgWH":11,"bgopi23":8,"ruijietay":25,"-":75}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^q\");","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash);","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        assertArgumentAbsent(argMultimap, this.pSlash);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * the {@code expectedValues}","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * and only the last value is returned upon calling","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        // trimmed","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.pSlash, \"Argument value\");","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.pSlash, \"Argument value\");","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash, this.dashT, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.pSlash, \"pSlash value\");","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.dashT, \"dashT-Value\");","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"        assertArgumentAbsent(argMultimap, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash, this.dashT, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.pSlash, \"pSlash value\");","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.dashT, \"dashT-Value\");","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.hatQ, \"111\");","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        // reset","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash, this.dashT, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        assertArgumentAbsent(argMultimap, this.pSlash);","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"        argsString \u003d this.unknownPrefix + \"some value\";","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash, this.dashT, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"        assertArgumentAbsent(argMultimap, this.unknownPrefix);","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash, this.dashT, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.pSlash, \"pSlash value\");","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.hatQ, \"\", \"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, this.pSlash, this.dashT, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"        assertArgumentAbsent(argMultimap, this.pSlash);","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"        assertArgumentPresent(argMultimap, this.dashT, \"not joined^Qjoined\");","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"        assertArgumentAbsent(argMultimap, this.hatQ);","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"RyanNgWH":9,"ruijietay":27,"-":118}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(this.parser, \"a\", String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"        // (delete)","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"\", String.format(Messages.MESSAGE_NO_INDEX,","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"bgopi23":10,"ruijietay":2,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.EmailMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.NameMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.PhoneMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.TagMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        // no index specified (edit one name)","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, VALID_NAME_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        // no field specified (edit 1)","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\", String.format(EditCommandMessages.MESSAGE_NOT_EDITED,","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        // no index and no field specified (edit)","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"\", String.format(Messages.MESSAGE_NO_INDEX,","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"-5\" + NAME_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"                String.format(Messages.MESSAGE_INVALID_INDEX, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"0\" + NAME_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"                String.format(Messages.MESSAGE_INVALID_INDEX, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1 random\",","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1 i/ string\",","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"                NameMessages.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"                PhoneMessages.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"bgopi23"},"content":"                EmailMessages.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_TAG_DESC,","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"bgopi23"},"content":"                TagMessages.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"bgopi23"},"content":"                PhoneMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + TAG_DESC_FRIEND","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"bgopi23"},"content":"                + TAG_DESC_HUSBAND + TAG_EMPTY, TagMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + TAG_DESC_FRIEND","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"bgopi23"},"content":"                + TAG_EMPTY + TAG_DESC_HUSBAND, TagMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + TAG_EMPTY","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"bgopi23"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, TagMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"bgopi23"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY, NameMessages.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NOTE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"                .withNote(VALID_NOTE_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"ruijietay"},"content":"        // weight","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"ruijietay"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withWeight(VALID_WEIGHT_AMY).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"ruijietay"},"content":"        // height","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + HEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withHeight(VALID_HEIGHT_AMY).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"ruijietay"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"ruijietay"},"content":"        // note","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"ruijietay"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNote(VALID_NOTE_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"ruijietay"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":212,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":217,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":219,"author":{"gitId":"ruijietay"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + WEIGHT_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"ruijietay"},"content":"                + HEIGHT_DESC_AMY + NOTE_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"ruijietay"},"content":"                + WEIGHT_DESC_AMY + HEIGHT_DESC_AMY + NOTE_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"ruijietay"},"content":"                + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + WEIGHT_DESC_AMY + HEIGHT_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"ruijietay"},"content":"                + NOTE_DESC_AMY + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, userInput,","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_WEIGHT, PREFIX_HEIGHT,","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"ruijietay"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NOTE));","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, userInput,","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_WEIGHT, PREFIX_HEIGHT,","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"ruijietay"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NOTE));","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"bgopi23":20,"ruijietay":72,"-":153}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AddressContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AlwaysTruePredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.EmailContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.HeightContainsRangePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NoteContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.TagSetContainsAllTagsPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.WeightMapContainsWeightRangePredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private static final String NAME \u003d \"Alice\";","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private static final String PHONE \u003d \"11111111\";","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    private static final String EMAIL \u003d \"test@example.com\";","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    private static final String ADDRESS \u003d \"street\";","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    private static final String WEIGHT_RANGE \u003d \"0, 1000\";","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    private static final String HEIGHT_RANGE \u003d \"0, 500\";","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    private static final String NOTE \u003d \"best\";","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    private static final String TAG \u003d \"friends\";","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    private static final NameContainsSubstringPredicate NAME_PREDICATE \u003d new NameContainsSubstringPredicate(NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    private static final PhoneContainsSubstringPredicate PHONE_PREDICATE \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"            PHONE);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    private static final EmailContainsSubstringPredicate EMAIL_PREDICATE \u003d new EmailContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"            EMAIL);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    private static final AddressContainsSubstringPredicate ADDRESS_PREDICATE \u003d new AddressContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"            ADDRESS);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    private static final WeightMapContainsWeightRangePredicate WEIGHT_PREDICATE \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"            new WeightMapContainsWeightRangePredicate(new Pair\u003c\u003e(0f, 1000f));","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    private static final HeightContainsRangePredicate HEIGHT_PREDICATE \u003d new HeightContainsRangePredicate(","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"            new Pair\u003c\u003e(0f, 500f));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    private static final NoteContainsSubstringPredicate NOTE_PREDICATE \u003d new NoteContainsSubstringPredicate(NOTE);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    private static final TagSetContainsAllTagsPredicate TAGS_PREDICATE \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"            new HashSet\u003cTag\u003e(Arrays.asList(new Tag(TAG))));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    private static final NameContainsSubstringPredicate NAME_PREDICATE_EMPTY \u003d new NameContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"            \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    private static final PhoneContainsSubstringPredicate PHONE_PREDICATE_EMPTY \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"            \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"    private static final AlwaysTruePredicate EMAIL_PREDICATE_EMPTY \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"    private static final AlwaysTruePredicate ADDRESS_PREDICATE_EMPTY \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    private static final AlwaysTruePredicate WEIGHT_PREDICATE_EMPTY \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"    private static final AlwaysTruePredicate HEIGHT_PREDICATE_EMPTY \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"    private static final AlwaysTruePredicate NOTE_PREDICATE_EMPTY \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"    private static final AlwaysTruePredicate TAGS_PREDICATE_EMPTY \u003d new AlwaysTruePredicate();","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"     \",","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_nameFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"                TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_NAME, NAME), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_NAME, NAME), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_phoneFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"                TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_PHONE, PHONE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_PHONE, PHONE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_emailFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"                TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_EMAIL, EMAIL), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_EMAIL, EMAIL), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_addressFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE,","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"                TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_ADDRESS, ADDRESS), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_ADDRESS, ADDRESS), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_noteFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"                ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_NOTE, NOTE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_NOTE, NOTE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"    public void parse_weightFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"                ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_WEIGHT, WEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_WEIGHT, WEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"ruijietay"},"content":"    public void parse_heightFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"ruijietay"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"                ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_HEIGHT, HEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"ruijietay"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_HEIGHT, HEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_tagFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"ruijietay"},"content":"                ADDRESS_PREDICATE_EMPTY, WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"ruijietay"},"content":"                NOTE_PREDICATE_EMPTY, TAGS_PREDICATE));","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s\", PREFIX_TAG, TAG), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n\", PREFIX_TAG, TAG), expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_multipleFieldsPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE, PHONE_PREDICATE, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"RyanNgWH"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"RyanNgWH"},"content":"                TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s %s%s\", PREFIX_NAME, NAME, PREFIX_PHONE, PHONE),","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\" %s%s \\n %s%s\", PREFIX_NAME, NAME, PREFIX_PHONE, PHONE),","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"     * Tests for valid searching even when no prefix is specified for searching via","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"RyanNgWH"},"content":"     * a certain attribute.","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"ruijietay"},"content":"     * This would default to searching via the {@code Name} attribute.","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"bgopi23"},"content":"    public void parse_noAttributeSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"bgopi23"},"content":"        CombinedPredicates expectedPredicates \u003d new CombinedPredicates(NAME_PREDICATE, PHONE_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"RyanNgWH"},"content":"                EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY, WEIGHT_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"RyanNgWH"},"content":"                HEIGHT_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"ruijietay"},"content":"                NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY);","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(expectedPredicates);","lastModifiedDate":"2024-03-24"},{"lineNumber":211,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":212,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, NAME, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":214,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":215,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":216,"author":{"gitId":"bgopi23"},"content":"    public void parse_preambleWithTagSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":217,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-24"},{"lineNumber":218,"author":{"gitId":"bgopi23"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-24"},{"lineNumber":219,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE));","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":221,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\"%s %s%s\", NAME, PREFIX_TAG, TAG),","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"bgopi23"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"bgopi23"},"content":"    public void parse_preambleWithEmailSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":227,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-24"},{"lineNumber":228,"author":{"gitId":"bgopi23"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-24"},{"lineNumber":229,"author":{"gitId":"RyanNgWH"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"RyanNgWH"},"content":"                TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\"%s %s%s\", NAME, PREFIX_EMAIL, EMAIL),","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"bgopi23"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":234,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":235,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":236,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":237,"author":{"gitId":"bgopi23"},"content":"    public void parse_preambleWithAddressSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":238,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-24"},{"lineNumber":239,"author":{"gitId":"bgopi23"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE,","lastModifiedDate":"2024-03-24"},{"lineNumber":240,"author":{"gitId":"RyanNgWH"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY,","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"RyanNgWH"},"content":"                TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":243,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, String.format(\"%s %s%s\", NAME, PREFIX_ADDRESS, ADDRESS),","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"bgopi23"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":245,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"RyanNgWH":116,"bgopi23":36,"ruijietay":66,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/FitAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXERCISE_BREAK_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXERCISE_NAME_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXERCISE_REPS_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXERCISE_SETS_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_BREAK;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_BREAK_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_NAME_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_REPS;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_REPS_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_SETS;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_SETS_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ABS;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ALL;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_ARM;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_BACK;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_CHEST;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_LEG;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE_SHOULDER;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.commands.FitAddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.FitAddCommandMessages;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseToAdd;","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"public class FitAddCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    private FitAddCommandParser parser \u003d new FitAddCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        // no index specified","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"            FitAddCommandMessages.MESSAGE_NO_INDEX_FITADD);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        // no field specified","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\",","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"            FitAddCommandMessages.MESSAGE_EXERCISE_NAME_PARAMETER_AND_DEFAULT_PREFIXES_MISSING);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        // no index and no field specified","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"\", FitAddCommandMessages.MESSAGE_NO_INDEX_FITADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        // negative index","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"-5\" + VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"            FitAddCommandMessages.MESSAGE_INVALID_INDEX_FITADD);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"        // zero index","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"0\" + VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"            FitAddCommandMessages.MESSAGE_INVALID_INDEX_FITADD);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1 some random string\",","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FitAddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        // invalid exercise name","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_EXERCISE_NAME_DESC, Exercise.NAME_CONSTRAINT);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + VALID_EXERCISE_NAME_DESC + INVALID_EXERCISE_SETS_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"            Exercise.SETS_CONSTRAINT); // invalid exercise sets","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + VALID_EXERCISE_NAME_DESC + INVALID_EXERCISE_REPS_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"            Exercise.REPS_CONSTRAINT); // invalid exercise reps","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + VALID_EXERCISE_NAME_DESC + INVALID_EXERCISE_BREAK_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"            Exercise.BREAK_CONSTRAINT); // invalid exercise break","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"    public void parse_exerciseSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"        ExerciseToAdd exercise \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"            new ExerciseToAdd(VALID_EXERCISE_NAME.toLowerCase(), Optional.of(Integer.parseInt(VALID_EXERCISE_SETS)),","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"                Optional.of(Integer.parseInt(VALID_EXERCISE_REPS)),","lastModifiedDate":"2024-04-11"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"                Optional.of(Integer.parseInt(VALID_EXERCISE_BREAK)));","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e exerciseSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        exerciseSet.add(exercise);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"        // preamble with leading whitespace","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, PREAMBLE_WHITESPACE + \"1\" + VALID_EXERCISE_NAME_DESC","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"                + VALID_EXERCISE_SETS_DESC + VALID_EXERCISE_REPS_DESC + VALID_EXERCISE_BREAK_DESC,","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, exerciseSet));","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"    public void parse_defaultExercisePrefixes_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"        // arm exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\" + \" \" + PREFIX_EXERCISE_ARM,","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, FitAddCommand.DEFAULT_ARM_EXERCISES));","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"        // leg exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\" + \" \" + PREFIX_EXERCISE_LEG,","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, FitAddCommand.DEFAULT_LEG_EXERCISES));","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"        // chest exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\" + \" \" + PREFIX_EXERCISE_CHEST,","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, FitAddCommand.DEFAULT_CHEST_EXERCISES));","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"        // back exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\" + \" \" + PREFIX_EXERCISE_BACK,","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, FitAddCommand.DEFAULT_BACK_EXERCISES));","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"        // shoulder exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\" + \" \" + PREFIX_EXERCISE_SHOULDER,","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, FitAddCommand.DEFAULT_SHOULDER_EXERCISES));","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"        // abs exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\" + \" \" + PREFIX_EXERCISE_ABS,","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, FitAddCommand.DEFAULT_ABS_EXERCISES));","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"        // all exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExerciseToAdd\u003e allExercises \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":127,"author":{"gitId":"jjchee77"},"content":"        allExercises.addAll(FitAddCommand.DEFAULT_ARM_EXERCISES);","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"        allExercises.addAll(FitAddCommand.DEFAULT_LEG_EXERCISES);","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"        allExercises.addAll(FitAddCommand.DEFAULT_CHEST_EXERCISES);","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"        allExercises.addAll(FitAddCommand.DEFAULT_BACK_EXERCISES);","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"        allExercises.addAll(FitAddCommand.DEFAULT_SHOULDER_EXERCISES);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"        allExercises.addAll(FitAddCommand.DEFAULT_ABS_EXERCISES);","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, \"1\" + \" \" + PREFIX_EXERCISE_ALL,","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"            new FitAddCommand(INDEX_FIRST_PERSON, allExercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ruijietay":19,"jjchee77":117}},{"path":"src/test/java/seedu/address/logic/parser/FitDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXERCISE_NAME_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXERCISE_NAME_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FITDELETE_DELETE_ALL;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.commands.FitDeleteCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.FitDeleteCommandMessages;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"public class FitDeleteCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    private FitDeleteCommandParser parser \u003d new FitDeleteCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    public void parse_validArgs_returnsFitDeleteCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        // add specific exercise","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, PREAMBLE_WHITESPACE + \"1\" + VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"            new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.of(VALID_EXERCISE_NAME.toLowerCase()), false));","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"        // delete all exercises","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, PREAMBLE_WHITESPACE + \"1\" + \" \" + PREFIX_FITDELETE_DELETE_ALL,","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"            new FitDeleteCommand(INDEX_FIRST_PERSON, Optional.empty(), true));","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        // invalid index","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"a\" + VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_INVALID_INDEX_FITDELETE);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        // invalid exercise name","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"            Exercise.NAME_CONSTRAINT);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        // no index specified","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_NO_INDEX_FITDELETE);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        // no field specified","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\",","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_EXERCISE_NAME_PARAMETER_AND_ALL_PREFIX_MISSING);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        // no index and no field specified","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"\",","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_NO_INDEX_FITDELETE);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        // negative index","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"-5\" + VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_INVALID_INDEX_FITDELETE);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        // zero index","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"0\" + VALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_INVALID_INDEX_FITDELETE);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1 some random string\",","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FitDeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"    public void parse_concurrentPrefixes_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"        // both exercise name and delete all prefixes present","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + VALID_EXERCISE_NAME_DESC + \" \" + PREFIX_FITDELETE_DELETE_ALL,","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_CONCURRENT_PREFIX);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"    public void parse_prefixesMissing_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"        // both exercise name and delete all prefixes missing","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\",","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"            FitDeleteCommandMessages.MESSAGE_EXERCISE_NAME_PARAMETER_AND_ALL_PREFIX_MISSING);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ruijietay":12,"jjchee77":78}},{"path":"src/test/java/seedu/address/logic/parser/NoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_TAG_LEADING_WHITESPACE;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_TAG_RANDOM_CASE;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_TAG_TRAILING_WHITESPACE;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_TAG_WITH_MORE_WORDS;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_NOT_EMPTY;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.commands.NoteEditCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"public class NoteCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    private NoteCommandParser parser \u003d new NoteCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"        // no index specified (note John)","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, VALID_NOTE_NOT_EMPTY,","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"                String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"                        NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"        // no index and no field specified (note)","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"\", String.format(Messages.MESSAGE_NO_INDEX,","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"                NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        // negative index (note -5 n/John)","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"-5\" + NAME_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_INDEX, NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        // zero index (note 0 n/John)","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"0\" + NAME_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_INDEX, NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        // invalid index (note -5)","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"-5\",","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"                String.format(Messages.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"                        NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_NOTE_NOT_EMPTY;","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(targetIndex, new Note(VALID_NOTE_NOT_EMPTY));","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_missingNote_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        String userInput \u003d String.format(\"%s\", targetIndex.getOneBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(targetIndex, new Note(\"\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"    public void parse_noteEditRandomCase_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"dillontkh"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"dillontkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + EDIT_TAG_RANDOM_CASE;","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"dillontkh"},"content":"        NoteCommand expectedCommand \u003d new NoteEditCommand(targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"    // (note 1 /edit moreText)","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"    public void parse_noteEditWithOtherText_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + EDIT_TAG_WITH_MORE_WORDS;","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(targetIndex, new Note(EDIT_TAG_WITH_MORE_WORDS));","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"dillontkh"},"content":"    public void parse_noteEditLeadingWhitespace_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"dillontkh"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"dillontkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + EDIT_TAG_LEADING_WHITESPACE;","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"dillontkh"},"content":"        NoteCommand expectedCommand \u003d new NoteEditCommand(targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"dillontkh"},"content":"    public void parse_noteEditTrailingWhitespace_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"dillontkh"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"dillontkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + EDIT_TAG_TRAILING_WHITESPACE;","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"dillontkh"},"content":"        NoteCommand expectedCommand \u003d new NoteEditCommand(targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(this.parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"RyanNgWH":13,"bgopi23":16,"ruijietay":44,"dillontkh":35}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_FIRST_PHONE \u003d \"88\";","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_SECOND_PHONE \u003d \"90\";","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_THIRD_PHONE \u003d \"38\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_FOURTH_PHONE \u003d \"27\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_HALF_FIRST_PHONE \u003d \"8890\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_HALF_SECOND_PHONE \u003d \"3827\";","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_PHONE \u003d \"88903827\";","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    private static final String INVALID_EXERCISE_NAME \u003d \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"    private static final String INVALID_EXERCISE_SETS \u003d \"0\";","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    private static final String INVALID_EXERCISE_REPS \u003d \"-10\";","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"    private static final String INVALID_EXERCISE_BREAK \u003d \"-5\";","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_EXERCISE_NAME \u003d \"Push Ups\";","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_EXERCISE_SETS \u003d \"3\";","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_EXERCISE_REPS \u003d \"12\";","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_EXERCISE_BREAK \u003d \"60\";","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"    public void parsePhone_validValueWithMiddleWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"        String phoneWithWhitespace \u003d VALID_HALF_FIRST_PHONE + WHITESPACE + VALID_HALF_SECOND_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"    public void parsePhone_validValueWithMiddleWhitespaces_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"jjchee77"},"content":"        String phoneWithWhitespace \u003d VALID_QUARTER_FIRST_PHONE + WHITESPACE + VALID_QUARTER_SECOND_PHONE + WHITESPACE","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"            + VALID_QUARTER_THIRD_PHONE + WHITESPACE + VALID_QUARTER_FOURTH_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"    public void parsePhone_validValueWithTrailingWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(Optional.of(INVALID_ADDRESS)));","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(Optional.of(VALID_ADDRESS)));","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(Optional.of(addressWithWhitespace)));","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(Optional.of(INVALID_EMAIL)));","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(Optional.of(VALID_EMAIL)));","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(Optional.of(emailWithWhitespace)));","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseName_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExerciseName(Optional.of(INVALID_EXERCISE_NAME)));","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseName_validValueWithoutWhitespace_returnsExerciseName() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"jjchee77"},"content":"        assertEquals(VALID_EXERCISE_NAME.toLowerCase(), ParserUtil.parseExerciseName(Optional.of(VALID_EXERCISE_NAME)));","lastModifiedDate":"2024-04-11"},{"lineNumber":230,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseName_validValueWithWhitespace_returnsTrimmedExerciseName() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"jjchee77"},"content":"        String exerciseNameWithWhitespace \u003d WHITESPACE + VALID_EXERCISE_NAME + WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"jjchee77"},"content":"        assertEquals(VALID_EXERCISE_NAME.toLowerCase(),","lastModifiedDate":"2024-04-11"},{"lineNumber":236,"author":{"gitId":"jjchee77"},"content":"            ParserUtil.parseExerciseName(Optional.of(exerciseNameWithWhitespace)));","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseSets_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExerciseSets(Optional.of(INVALID_EXERCISE_SETS)));","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseSets_validValueWithoutWhitespace_returnsExerciseSets() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"jjchee77"},"content":"        Integer expectedExerciseSets \u003d Integer.valueOf(VALID_EXERCISE_SETS);","lastModifiedDate":"2024-04-03"},{"lineNumber":247,"author":{"gitId":"jjchee77"},"content":"        assertEquals(Optional.of(expectedExerciseSets), ParserUtil.parseExerciseSets(Optional.of(VALID_EXERCISE_SETS)));","lastModifiedDate":"2024-04-11"},{"lineNumber":248,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseSets_validValueWithWhitespace_returnsTrimmedExerciseSets() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"jjchee77"},"content":"        String exerciseSetsWithWhitespace \u003d WHITESPACE + VALID_EXERCISE_SETS + WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"jjchee77"},"content":"        Integer expectedExerciseSets \u003d Integer.valueOf(VALID_EXERCISE_SETS);","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"jjchee77"},"content":"        assertEquals(Optional.of(expectedExerciseSets),","lastModifiedDate":"2024-04-11"},{"lineNumber":255,"author":{"gitId":"jjchee77"},"content":"            ParserUtil.parseExerciseSets(Optional.of(exerciseSetsWithWhitespace)));","lastModifiedDate":"2024-04-11"},{"lineNumber":256,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseReps_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExerciseReps(Optional.of(INVALID_EXERCISE_REPS)));","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseReps_validValueWithoutWhitespace_returnsExerciseReps() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"jjchee77"},"content":"        Integer expectedExerciseReps \u003d Integer.valueOf(VALID_EXERCISE_REPS);","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"jjchee77"},"content":"        assertEquals(Optional.of(expectedExerciseReps), ParserUtil.parseExerciseReps(Optional.of(VALID_EXERCISE_REPS)));","lastModifiedDate":"2024-04-11"},{"lineNumber":267,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseReps_validValueWithWhitespace_returnsTrimmedExerciseReps() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":271,"author":{"gitId":"jjchee77"},"content":"        String exerciseRepsWithWhitespace \u003d WHITESPACE + VALID_EXERCISE_REPS + WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"jjchee77"},"content":"        Integer expectedExerciseReps \u003d Integer.valueOf(VALID_EXERCISE_REPS);","lastModifiedDate":"2024-04-03"},{"lineNumber":273,"author":{"gitId":"jjchee77"},"content":"        assertEquals(Optional.of(expectedExerciseReps),","lastModifiedDate":"2024-04-11"},{"lineNumber":274,"author":{"gitId":"jjchee77"},"content":"            ParserUtil.parseExerciseReps(Optional.of(exerciseRepsWithWhitespace)));","lastModifiedDate":"2024-04-11"},{"lineNumber":275,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":276,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":277,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":278,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseBreakBetweenSets_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":279,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":280,"author":{"gitId":"jjchee77"},"content":"            ParserUtil.parseExerciseBreakBetweenSets(Optional.of(INVALID_EXERCISE_BREAK)));","lastModifiedDate":"2024-04-03"},{"lineNumber":281,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":282,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":283,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":284,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseBreakBetweenSets_validValueWithoutWhitespace_returnsExerciseBreakBetweenSets()","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"jjchee77"},"content":"            throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":286,"author":{"gitId":"jjchee77"},"content":"        Integer expectedExerciseBreakBetweenSets \u003d Integer.valueOf(VALID_EXERCISE_BREAK);","lastModifiedDate":"2024-04-03"},{"lineNumber":287,"author":{"gitId":"jjchee77"},"content":"        assertEquals(Optional.of(expectedExerciseBreakBetweenSets),","lastModifiedDate":"2024-04-11"},{"lineNumber":288,"author":{"gitId":"jjchee77"},"content":"            ParserUtil.parseExerciseBreakBetweenSets(Optional.of(VALID_EXERCISE_BREAK)));","lastModifiedDate":"2024-04-03"},{"lineNumber":289,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":290,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":291,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":292,"author":{"gitId":"jjchee77"},"content":"    public void parseExerciseBreakBetweenSets_validValueWithWhitespace_returnsTrimmedExerciseBreakBetweenSets()","lastModifiedDate":"2024-04-03"},{"lineNumber":293,"author":{"gitId":"jjchee77"},"content":"            throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":294,"author":{"gitId":"jjchee77"},"content":"        String exerciseBreakWithWhitespace \u003d WHITESPACE + VALID_EXERCISE_BREAK + WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":295,"author":{"gitId":"jjchee77"},"content":"        Integer expectedExerciseBreakBetweenSets \u003d Integer.valueOf(VALID_EXERCISE_BREAK);","lastModifiedDate":"2024-04-03"},{"lineNumber":296,"author":{"gitId":"jjchee77"},"content":"        assertEquals(Optional.of(expectedExerciseBreakBetweenSets),","lastModifiedDate":"2024-04-11"},{"lineNumber":297,"author":{"gitId":"jjchee77"},"content":"            ParserUtil.parseExerciseBreakBetweenSets(Optional.of(exerciseBreakWithWhitespace)));","lastModifiedDate":"2024-04-03"},{"lineNumber":298,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jjchee77":116,"-":183}},{"path":"src/test/java/seedu/address/logic/parser/WeightCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHT_NEGATIVE;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHT_OVER_LIMIT;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_INDEX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_NO_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.model.person.messages.WeightMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class WeightCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    private WeightCommandParser parser \u003d new WeightCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, VALID_WEIGHT_BOB.toString(),","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_PARAMETER_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        // no index and no field specified (note)","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"\", MESSAGE_NO_PARAMETER_WEIGHT);","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"-5\" + VALID_WEIGHT_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"0\" + VALID_WEIGHT_BOB,","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"-5\",","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public void parse_invalidWeight_failure() {","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_WEIGHT_OVER_LIMIT, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(this.parser, \"1\" + INVALID_WEIGHT_NEGATIVE, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bgopi23":1,"ruijietay":45}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        assertEquals(Collections.emptyList(), this.addressBook.getPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.addressBook.resetData(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        this.addressBook.resetData(newData);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        assertEquals(newData, this.addressBook);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e this.addressBook.resetData(newData));","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.addressBook.hasPerson(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.addressBook.hasPerson(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        this.addressBook.addPerson(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.addressBook.hasPerson(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        this.addressBook.addPerson(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.addressBook.hasPerson(editedAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e this.addressBook.getPersonList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + this.addressBook.getPersonList() + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expected, this.addressBook.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"            return this.persons;","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ruijietay":15,"-":93}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        assertEquals(new UserPrefs(), this.modelManager.getUserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        assertEquals(new GuiSettings(), this.modelManager.getGuiSettings());","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        assertEquals(new AddressBook(), new AddressBook(this.modelManager.getAddressBook()));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.modelManager.setUserPrefs(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        this.modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertEquals(userPrefs, this.modelManager.getUserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        assertEquals(oldUserPrefs, this.modelManager.getUserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.modelManager.setGuiSettings(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        this.modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assertEquals(guiSettings, this.modelManager.getGuiSettings());","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        this.modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        assertEquals(path, this.modelManager.getAddressBookFilePath());","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.modelManager.hasPerson(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.modelManager.hasPerson(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        this.modelManager.addPerson(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.modelManager.hasPerson(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e this.modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        this.modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.modelManager.equals(modelManagerCopy));","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.modelManager.equals(this.modelManager));","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.modelManager.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.modelManager.equals(5));","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        String name \u003d ALICE.getName().getValue();","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        this.modelManager.updateFilteredPersonList(new NameContainsSubstringPredicate(name));","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"        this.modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ruijietay":30,"-":101}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        Address address \u003d new Address(\"51 Clementi Road\");","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"51 Clementi Road\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        // Substring whole word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"Clementi\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"Clem\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"clem\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\" 51 Clementi Road\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(address.isMatch(\"street\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(address.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":26,"-":50}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        Email email \u003d new Email(\"valid@example.com\");","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\"valid@example.com\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\"valid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\"VALID\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\" valid@example.com\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(email.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(email.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":23,"-":82}},{"path":"src/test/java/seedu/address/model/person/ExerciseSetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"public class ExerciseSetTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ExerciseSet(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    public void isMatch() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e exercises \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        exercises.add(new Exercise(\"Exercise 1\", 1, 1, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        exercises.add(new Exercise(\"Exercise 2\", 2, 2, 30));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        ExerciseSet exerciseSet \u003d new ExerciseSet(exercises);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        // exact match -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        assertTrue(exerciseSet.isMatch(exercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        // subset match -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e subsetExercises \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        subsetExercises.add(new Exercise(\"Exercise 1\", 1, 1, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        assertTrue(exerciseSet.isMatch(subsetExercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        // empty set -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        assertTrue(exerciseSet.isMatch(Collections.emptySet()));","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        // superset mismatch -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e supersetExercises \u003d new HashSet\u003c\u003e(exercises);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        supersetExercises.add(new Exercise(\"Exercise 3\", 3, 3, 60));","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        assertFalse(exerciseSet.isMatch(supersetExercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        assertFalse(exerciseSet.isMatch(5));","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e exercises \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        exercises.add(new Exercise(\"Exercise 1\", 1, 1, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        exercises.add(new Exercise(\"Exercise 2\", 2, 2, 30));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        ExerciseSet exerciseSet \u003d new ExerciseSet(exercises);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e sameExercises \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        sameExercises.add(new Exercise(\"Exercise 1\", 1, 1, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        sameExercises.add(new Exercise(\"Exercise 2\", 2, 2, 30));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"        assertEquals(exerciseSet, new ExerciseSet(sameExercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"        assertEquals(exerciseSet, exerciseSet);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(null, exerciseSet);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(true, exerciseSet);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"        // different exercises -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        Set\u003cExercise\u003e differentExercises \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        differentExercises.add(new Exercise(\"Exercise 3\", 3, 3, 60));","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(exerciseSet, new ExerciseSet(differentExercises));","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"jjchee77":79}},{"path":"src/test/java/seedu/address/model/person/ExerciseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"public class ExerciseTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Exercise(null, null, null, null));","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    public void isValidName() {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"        // null name","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"        assertThrows(NullPointerException.class, () -\u003e Exercise.isValidName(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"        // invalid name","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidName(\"\")); // empty string","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        // valid name","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidName(\"Push Ups\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidName(\"Bench Press\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidName(\"push ups\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidName(\"bench press\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidName(\"push-ups\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidName(\"bench-press\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    public void isValidSets() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        // invalid sets","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidSets(0)); // zero sets","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidSets(-1)); // negative sets","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidSets(1_000_001)); // over limit","lastModifiedDate":"2024-04-09"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidSets(1_000_002)); // over limit","lastModifiedDate":"2024-04-09"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        // valid sets","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidSets(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidSets(10));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidSets(999_999)); // within limit","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidSets(1_000_000)); // within limit","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"    public void isValidReps() {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        // invalid reps","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidReps(0)); // zero reps","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidReps(-1)); // negative reps","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidReps(1_000_001)); // over limit","lastModifiedDate":"2024-04-09"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidReps(1_000_002)); // over limit","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        // valid reps","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidReps(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidReps(20));","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidReps(999_999)); // within limit","lastModifiedDate":"2024-04-09"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidReps(1_000_000)); // within limit","lastModifiedDate":"2024-04-09"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    public void isValidBreakBetweenSets() {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        // invalid break","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidBreakBetweenSets(-1)); // negative break","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidBreakBetweenSets(1_000_001)); // over limit","lastModifiedDate":"2024-04-09"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Exercise.isValidBreakBetweenSets(1_000_002)); // over limit","lastModifiedDate":"2024-04-09"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        // valid break","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidBreakBetweenSets(0));","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidBreakBetweenSets(60));","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidBreakBetweenSets(999_999)); // within limit","lastModifiedDate":"2024-04-09"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Exercise.isValidBreakBetweenSets(1_000_000)); // within limit","lastModifiedDate":"2024-04-09"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"        Exercise exercise \u003d new Exercise(\"Exercise\", 1, 1, 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"        assertEquals(exercise, new Exercise(\"Exercise\", 1, 1, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"        assertEquals(exercise, exercise);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(null, exercise);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(true, exercise);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"        assertNotEquals(exercise, new Exercise(\"Other Exercise\", 1, 1, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"        // different sets -\u003e returns true (name is used for equality)","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"        assertEquals(exercise, new Exercise(\"Exercise\", 2, 1, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"        // different reps -\u003e returns true (name is used for equality)","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"        assertEquals(exercise, new Exercise(\"Exercise\", 1, 2, 0));","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"        // different break -\u003e returns true (name is used for equality)","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"        assertEquals(exercise, new Exercise(\"Exercise\", 1, 1, 30));","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"jjchee77":110}},{"path":"src/test/java/seedu/address/model/person/HeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"public class HeightTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Height(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        Height height \u003d new Height(92.5f);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.equals(new Height(92.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.equals(height));","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.equals(\"hello\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.equals(new Height(69.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        Height height \u003d new Height(192.5f);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        // Exact range -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.isMatch(new Pair\u003cFloat, Float\u003e(192.5f, 192.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        // Falls within range -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.isMatch(new Pair\u003cFloat, Float\u003e(190f, 200f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // Falls outside of range -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(180f, 190f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        // Incorrect generic types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", \"bar\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Object\u003e(180f, \"bar\")));","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", 180f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        // Null pair -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(null, null)));","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        // Either value is null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(190f, null)));","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(null, 200f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"ruijietay":64}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        Name name \u003d new Name(\"Wendy Son\");","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\"Wendy Son\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\"Wen\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\"wendy\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\" Wendy Son\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(name.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(name.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":23,"-":60}},{"path":"src/test/java/seedu/address/model/person/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"public class NoteTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        Note note \u003d new Note(\"Valid Note\");","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.equals(new Note(\"Valid Note\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.equals(note));","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.equals(5.0f));","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.equals(new Note(\"Other Valid Note\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        Note note \u003d new Note(\"Likes to eat\");","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"Likes to eat\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        // Substring whole word -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"Likes\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"Lik\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"lik\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\" Likes to eat\\n\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.isMatch(\"run\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        // Different type","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.isMatch(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ruijietay":62}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        // validating against ALICE","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        // all attributes same, different object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        // same name and same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        editedAlice \u003d new PersonBuilder(BOB).withName(VALID_NAME_ALICE).withPhone(ALICE.getPhone().getValue())","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        // all attributes different -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        // same name different phone, all other attributes same -\u003e false","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        // different name same phone, all other attributes same -\u003e false","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"        // different name and phone, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", note\u003d\" + ALICE.getNote()","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"dillontkh"},"content":"     * Generate a QR code using the ALICE instance and verify its existence.","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"dillontkh"},"content":"    void generateQrCode_validPerson_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"dillontkh"},"content":"        ALICE.generateQrCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"dillontkh"},"content":"        assertTrue(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"dillontkh"},"content":"     * Delete the QR code using the ALICE instance and verify its absence.","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"dillontkh"},"content":"    void deleteQrCode_qrCodeExists_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"        ALICE.generateQrCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"        boolean result \u003d ALICE.deleteQrCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"        assertTrue(result);","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"        assertFalse(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"dillontkh"},"content":"     * Delete the QR code using the ALICE instance and verify its absence.","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"dillontkh"},"content":"    void deleteQrCode_qrCodeDoesNotExist_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"dillontkh"},"content":"        ALICE.deleteQrCode(); // To delete the one generated","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"dillontkh"},"content":"        boolean result \u003d ALICE.deleteQrCode(); // Try to delete a non-existent QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"dillontkh"},"content":"        assertFalse(result);","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"        assertFalse(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"RyanNgWH":1,"ruijietay":2,"jjchee77":20,"-":88,"dillontkh":33}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Phone.isValidPhone(\"+193121534\")); // with \u0027+\u0027 symbol","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Phone.isValidPhone(\"(193)121534\")); // with \u0027(\u0027 and \u0027)\u0027 symbol","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Phone.isValidPhone(\"193-121534\")); // with \u0027-\u0027 symbol","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"1\")); // one digit","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"12\")); // one digit","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"12345678901234567890\")); // twenty digits","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"123456789012345678901\")); // twenty-one digits","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    public void isExpectedFormat() {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        Phone phone \u003d new Phone(\"58909832\"); // exactly 8 numbers but does not start with \u00276\u0027, \u00278\u0027 or \u00279\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"78909832\"); // exactly 8 numbers but does not start with \u00276\u0027, \u00278\u0027 or \u00279\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"909828\"); // less than 8 digits","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"909828910\"); // more than 8 digits","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"67392810\"); // exactly 8 numbers and start with \u00276\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"87392810\"); // exactly 8 digits and start with \u00278\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"93121534\"); // exactly 8 digits and start with \u00279\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        Phone phone \u003d new Phone(\"88888888\");","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.equals(new Phone(\"88888888\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.equals(new Phone(\"98888888\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        Phone phone \u003d new Phone(\"92345678\");","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(phone.isMatch(\"92345678\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(phone.isMatch(\"9234\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(phone.isMatch(\" 92345678\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(phone.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(phone.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":19,"jjchee77":31,"-":57}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.uniquePersonList.contains(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertFalse(this.uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.uniquePersonList.contains(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        assertTrue(this.uniquePersonList.contains(editedAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.uniquePersonList.add(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e this.uniquePersonList.add(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e this.uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedUniquePersonList, this.uniquePersonList);","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedUniquePersonList, this.uniquePersonList);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedUniquePersonList, this.uniquePersonList);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(BOB);","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e this.uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.uniquePersonList.remove(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e this.uniquePersonList.remove(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.remove(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedUniquePersonList, this.uniquePersonList);","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedUniquePersonList, this.uniquePersonList);","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"        this.uniquePersonList.setPersons(personList);","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedUniquePersonList, this.uniquePersonList);","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"ruijietay"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e this.uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"ruijietay"},"content":"            -\u003e this.uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"        assertEquals(this.uniquePersonList.asUnmodifiableObservableList().toString(), this.uniquePersonList.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ruijietay":40,"-":135}},{"path":"src/test/java/seedu/address/model/person/WeightMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.tag.TagSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"public class WeightMapTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    private static LocalDateTime timeStub \u003d WeightEntry.getTimeOfExecution();","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    private static Weight weightStub \u003d new Weight(182f);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        TreeMap\u003cLocalDateTime, Weight\u003e treeMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        treeMap.put(timeStub, weightStub);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        WeightMap weightMap \u003d new WeightMap(treeMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        // Exact range -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weightMap.isMatch(new Pair\u003c\u003e(182f, 182f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        // Falls within range -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weightMap.isMatch(new Pair\u003c\u003e(180f, 185f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        // Falls outside of range -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003c\u003e(160f, 169f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        // Incorrect generic types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", \"bar\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Object\u003e(182f, \"bar\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cObject, Float\u003e(\"foo\", 182f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        // Null pair -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Float\u003e(null, null)));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // Either value is null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Float\u003e(180f, null)));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Float\u003e(null, 180f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        Tag loverTag \u003d new Tag(\"lover\");","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        Tag invalidTag \u003d new Tag(\"invalid\");","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        Set\u003cTag\u003e testSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(friendTag, loverTag));","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        TagSet tagSet \u003d new TagSet(testSet);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        // Same tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertTrue(tagSet.equals(tagSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        // Different tagset, same values","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        assertTrue(tagSet.equals(new TagSet(testSet)));","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        // Empty tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e())));","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        // Partial tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003cTag\u003e(Arrays.asList(loverTag)))));","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        // Additional tag in tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e(Arrays.asList(friendTag, loverTag, invalidTag)))));","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ruijietay":79}},{"path":"src/test/java/seedu/address/model/person/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"public class WeightTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weight(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        Weight weight \u003d new Weight(182f);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.equals(new Weight(182f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.equals(weight));","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.equals(\"hello\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.equals(new Weight(69.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        Height weight \u003d new Height(92.5f);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        // Exact range -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.isMatch(new Pair\u003cFloat, Float\u003e(92.5f, 92.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        // Falls within range -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.isMatch(new Pair\u003cFloat, Float\u003e(90f, 100f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        // Falls outside of range -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(80f, 90f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        // Incorrect generic types -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", \"bar\")));","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Object\u003e(80f, \"bar\")));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", 80f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        // Null pair -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(null, null)));","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        // Either value is null -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(90f, null)));","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(null, 100f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":65}},{"path":"src/test/java/seedu/address/model/person/predicates/CombinedPredicatesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class CombinedPredicatesTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    public void test_singlePredicate_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public void test_singlePredicate_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    public void test_multiplePredicates_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"                PersonBuilder.DEFAULT_PHONE);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    public void test_multiplePredicates_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        // All mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        // Some match, some mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        namePredicate \u003d new NameContainsSubstringPredicate(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        phonePredicate \u003d new PhoneContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"Alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"11111111\");","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicateClone \u003d new NameContainsSubstringPredicate(\"Alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicateClone \u003d new PhoneContainsSubstringPredicate(\"11111111\");","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        // Itself","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicates.equals(combinedPredicates));","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        // Single predicate - Valid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicates.equals(new CombinedPredicates(namePredicateClone)));","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple predicate - Valid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicates.equals(new CombinedPredicates(namePredicateClone, phonePredicateClone)));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        // Single predicate - Invalid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicates.equals(new CombinedPredicates(phonePredicate)));","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple predicate - Invalid equality (partial)","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicates.equals(new CombinedPredicates(namePredicate)));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple predicate - Invalid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicates","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"                .equals(new CombinedPredicates(namePredicate, new PhoneContainsSubstringPredicate(\"invalid\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"RyanNgWH":100}},{"path":"src/test/java/seedu/address/model/tag/TagSetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class TagSetTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        Tag loverTag \u003d new Tag(\"lover\");","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        Tag invalidTag \u003d new Tag(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"        Integer notSet \u003d 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"        Set\u003cInteger\u003e setOfNotTags \u003d new HashSet\u003c\u003e(Arrays.asList(notSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"        Set\u003cTag\u003e testSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(friendTag, loverTag));","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"        TagSet tagSet \u003d new TagSet(testSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        // Same tags - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(testSet));","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"        // No tags - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(new HashSet\u003c\u003e()));","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        // Single tag - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(friendTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple tags - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(loverTag, friendTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        // Single tag - Mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(invalidTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple tag - Partial match","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(loverTag, invalidTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"        // Not a Set - Mismatch","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"        assertFalse(tagSet.isMatch(notSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"        // Not a Set of Tags - Mismatch","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"        assertFalse(tagSet.isMatch(setOfNotTags));","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        Tag loverTag \u003d new Tag(\"lover\");","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        Tag invalidTag \u003d new Tag(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        Set\u003cTag\u003e testSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(friendTag, loverTag));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        TagSet tagSet \u003d new TagSet(testSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        // Same tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.equals(tagSet));","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        // Different tagset, same values","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.equals(new TagSet(testSet)));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        // Empty tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e())));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        // Partial tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003cTag\u003e(Arrays.asList(loverTag)))));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        // Additional tag in tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e(Arrays.asList(friendTag, loverTag, invalidTag)))));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"RyanNgWH":67,"dillontkh":8}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        Tag tag \u003d new Tag(\"Lover\");","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tag.isMatch(\"Lover\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"        // Case-insensitive match -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"        assertTrue(tag.isMatch(\"lOvEr\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"        // Substring partial word -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"        assertFalse(tag.isMatch(\"Love\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tag.isMatch(\" Lover\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tag.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tag.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"        Tag tag1 \u003d new Tag(\"taggy1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"        Tag tag2 \u003d new Tag(\"taggy1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"        Integer fakeTag \u003d 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"        assertEquals(tag1, tag2);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"        assertNotEquals(tag1, fakeTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"RyanNgWH":20,"-":26,"dillontkh":18}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.AddressMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.EmailMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.NameMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.messages.PhoneMessages;","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    private static final String INVALID_WEIGHT \u003d \"onesixzero\";","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    private static final String INVALID_HEIGHT \u003d \"tenkilos\";","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    private static final JsonAdaptedExercise INVALID_EXERCISE \u003d new JsonAdaptedExercise(\"dab\", -1, -1, -1);","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    private static final List\u003cJsonAdaptedWeight\u003e VALID_WEIGHTS \u003d BENSON.getWeights().entrySet().stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"            .map(WeightEntry::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"            .map(JsonAdaptedWeight::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    private static final String VALID_WEIGHT \u003d BENSON.getHeight().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    private static final List\u003cJsonAdaptedExercise\u003e VALID_EXERCISES \u003d BENSON.getExerciseSet().getValue().stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        .map(JsonAdaptedExercise::new)","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_WEIGHTS,","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"                        VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d NameMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"                VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d PhoneMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"                VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d EmailMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"                VALID_ADDRESS, VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"jjchee77"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d AddressMessages.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"                null, VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"    public void toModelType_invalidWeight_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        List\u003cJsonAdaptedWeight\u003e invalidWeights \u003d new ArrayList\u003c\u003e(VALID_WEIGHTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"        invalidWeights.add(new JsonAdaptedWeight(WeightEntry.getTimeOfExecution().toString(), INVALID_WEIGHT));","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"                        invalidWeights, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"    public void toModelType_invalidHeight_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"                        VALID_WEIGHTS, INVALID_WEIGHT, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"    public void toModelType_nullHeight_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"                        VALID_WEIGHTS, null, VALID_NOTE, VALID_TAGS, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"jjchee77"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, invalidTags, VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"jjchee77"},"content":"    public void toModelType_invalidExercises_throwsIllegalValueException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"jjchee77"},"content":"        List\u003cJsonAdaptedExercise\u003e invalidExercises \u003d new ArrayList\u003c\u003e(VALID_EXERCISES);","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"jjchee77"},"content":"        invalidExercises.add(INVALID_EXERCISE);","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"jjchee77"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"jjchee77"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"jjchee77"},"content":"                VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS, invalidExercises);","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bgopi23":8,"ruijietay":45,"jjchee77":25,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        Path filePath \u003d this.testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruijietay":1,"-":109}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        Path pefsFilePath \u003d this.testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ruijietay":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        this.storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        return this.testFolder.resolve(fileName);","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        this.storageManager.saveUserPrefs(original);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        UserPrefs retrieved \u003d this.storageManager.readUserPrefs().get();","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        this.storageManager.saveAddressBook(original);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        ReadOnlyAddressBook retrieved \u003d this.storageManager.readAddressBook().get();","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertNotNull(this.storageManager.getAddressBookFilePath());","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":7,"-":61}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        this.addressBook \u003d new AddressBook();","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        this.addressBook.addPerson(person);","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        return this.addressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":3,"-":31}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        this.descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * {@code person}\u0027s details","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        this.descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setName(person.getName());","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setPhone(person.getPhone());","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setEmail(person.getEmail());","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setAddress(person.getAddress());","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setWeight(person.getLatestWeight().get().getValue());","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setHeight(person.getHeight());","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setNote(person.getNote());","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setTags(person.getTags());","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setName(new Name(name));","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setAddress(new Address(address));","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Weight} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"     * building.","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"    public EditPersonDescriptorBuilder withWeight(Float weight) {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setWeight(new Weight(weight));","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Height} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"     * building.","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"    public EditPersonDescriptorBuilder withHeight(Float height) {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setHeight(new Height(height));","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Note} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"    public EditPersonDescriptorBuilder withNote(String note) {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setNote(new Note(note));","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"     * {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        this.descriptor.setTags(tagSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"        return this.descriptor;","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"RyanNgWH":14,"ruijietay":43,"-":69}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.ExerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    public static final Weight DEFAULT_WEIGHT \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"            new Weight(182f);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public static final Float DEFAULT_HEIGHT \u003d 92.5f;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    private NavigableMap\u003cLocalDateTime, Weight\u003e weights;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    private Height height;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    private Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    private ExerciseSet exerciseSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        this.name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        this.phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        this.email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        this.address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        this.weights.put(WeightEntry.getTimeOfExecution(), DEFAULT_WEIGHT);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d new Height(DEFAULT_HEIGHT);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"        this.exerciseSet \u003d new ExerciseSet(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        this.name \u003d personToCopy.getName();","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        this.phone \u003d personToCopy.getPhone();","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        this.email \u003d personToCopy.getEmail();","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        this.address \u003d personToCopy.getAddress();","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d new TreeMap\u003c\u003e(personToCopy.getWeights());","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d personToCopy.getHeight();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d personToCopy.getNote();","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        this.tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        this.exerciseSet \u003d personToCopy.getExerciseSet();","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"     * Parses the {@code exercises} into a {@code ExerciseSet} and set it to the","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"    public PersonBuilder withExercises(Exercise... exercises) {","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"        this.exerciseSet \u003d new ExerciseSet(SampleDataUtil.getExerciseHashSet(exercises));","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Weight} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"ruijietay"},"content":"    public PersonBuilder withWeights(String... weights) {","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d SampleDataUtil.getWeightMap(weights);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Height} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"    public PersonBuilder withHeight(Float height) {","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d new Height(height);","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"     * Creates a new {@code Person} instance.","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"        return new Person(this.name, this.phone, this.email, this.address,","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"jjchee77"},"content":"                this.weights, this.height, this.note, this.tags, this.exerciseSet);","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"RyanNgWH":3,"ruijietay":58,"jjchee77":15,"-":84}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        return AddCommandMessages.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_NAME + person.getName().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        sb.append(PREFIX_WEIGHT + person.getLatestWeight().get().getValue().toString() + \" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        sb.append(PREFIX_HEIGHT + person.getHeight().getValue().toString() + \" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_NOTE + person.getNote().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.getValue() + \" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * Returns the part of command string for the given","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        descriptor.getWeight().ifPresent(weight -\u003e sb.append(PREFIX_WEIGHT).append(weight.getValue()).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        descriptor.getHeight().ifPresent(height -\u003e sb.append(PREFIX_HEIGHT).append(height.getValue()).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getNote().ifPresent(note -\u003e sb.append(PREFIX_NOTE).append(note.getValue()).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.getValue()).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"RyanNgWH":14,"ruijietay":10,"-":48}},{"path":"src/test/java/seedu/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        this.name \u003d getNameTestValue();","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        this.listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        this.mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        return this.name;","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        return this.listOfLocalDateTimes;","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        return this.mapOfIntegerToString;","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruijietay":6,"-":66}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.exercise.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":" * tests.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        .withTags(\"friends\")","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        .withNote(\"Best friend\")","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        .withWeights(\"2024-01-20T10:15:33\u003d85f\")","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        .withWeights(\"2023-02-22T13:11:32\u003d83f\")","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        .withExercises(new Exercise(\"squats\", 3, 5, 1))","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        .withNote(\"Best man\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822240\")","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824279\")","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withNote(\"lover\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824428\")","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824240\")","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821310\")","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"    public static final Person ALICE_WITHOUT_EMAIL \u003d new PersonBuilder()","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"        .withName(\"Alice Pauline\")","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"        .withEmail(\"\")","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"        .withAddress(\"\")","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"        .withNote(\"Best friend\")","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        .withWeights(new String[0])","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"        .build();","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"    public static final Person BENSON_WITHOUT_EMAIL \u003d new PersonBuilder()","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"        .withName(\"Benson Meier\")","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"        .withPhone(\"98765432\")","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"        .withEmail(\"\")","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"        .withAddress(\"\")","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"        .withWeights(new String[0])","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"        .withTags(\"Friend\")","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"        .build();","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"    public static final Person CARL_WITHOUT_EMAIL \u003d new PersonBuilder()","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"bgopi23"},"content":"        .withName(\"Carl Kurz\")","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"bgopi23"},"content":"        .withPhone(\"95352563\")","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"        .withEmail(\"\")","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"bgopi23"},"content":"        .withAddress(\"wall street\")","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"bgopi23"},"content":"        .withWeights(new String[0])","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"        .build();","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"    private TypicalPersons() {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":108,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"bgopi23"},"content":"     * Gets a typical List of Person objects","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":111,"author":{"gitId":"bgopi23"},"content":"     * @return a list of people without any special attribute restrictions","lastModifiedDate":"2024-04-07"},{"lineNumber":112,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":116,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":118,"author":{"gitId":"bgopi23"},"content":"     * Gets a typical List of Person objects the without email attribute","lastModifiedDate":"2024-04-07"},{"lineNumber":119,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":120,"author":{"gitId":"bgopi23"},"content":"     * @returns an AddressBook where every person does not have any email","lastModifiedDate":"2024-04-07"},{"lineNumber":121,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":122,"author":{"gitId":"bgopi23"},"content":"    public static AddressBook getTypicalAddressBookWithoutEmail() {","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"bgopi23"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"bgopi23"},"content":"        for (Person person : getTypicalPersonsWithoutEmail()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"bgopi23"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"bgopi23"},"content":"        return ab;","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":131,"author":{"gitId":"bgopi23"},"content":"     * Gets a typical List of Person objects some of which don\u0027t have an email attribute","lastModifiedDate":"2024-04-07"},{"lineNumber":132,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":133,"author":{"gitId":"bgopi23"},"content":"     * @return a list of people some of whom don\u0027t have an email address","lastModifiedDate":"2024-04-07"},{"lineNumber":134,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":135,"author":{"gitId":"bgopi23"},"content":"    public static AddressBook getTypicalAddressBookSomeWithoutEmail() {","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"bgopi23"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-04-07"},{"lineNumber":137,"author":{"gitId":"bgopi23"},"content":"        for (Person person : getSomeTypicalPersonsWithoutEmail()) {","lastModifiedDate":"2024-04-07"},{"lineNumber":138,"author":{"gitId":"bgopi23"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"        return ab;","lastModifiedDate":"2024-04-07"},{"lineNumber":141,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":142,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"bgopi23"},"content":"     * Gets a AddressBook with a single typical person object","lastModifiedDate":"2024-04-07"},{"lineNumber":145,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":146,"author":{"gitId":"bgopi23"},"content":"     * @returns an AddressBook object","lastModifiedDate":"2024-04-07"},{"lineNumber":147,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":148,"author":{"gitId":"bgopi23"},"content":"    public static AddressBook getTypicalAddressBookWithSinglePerson() {","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"bgopi23"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"bgopi23"},"content":"        for (Person person : getSingleTypicalPerson()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"bgopi23"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"bgopi23"},"content":"        return ab;","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":157,"author":{"gitId":"bgopi23"},"content":"     * Gets an AddressBook object that has no one","lastModifiedDate":"2024-04-07"},{"lineNumber":158,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":159,"author":{"gitId":"bgopi23"},"content":"     * @returns an AddressBook with no people inside","lastModifiedDate":"2024-04-07"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":161,"author":{"gitId":"bgopi23"},"content":"    public static AddressBook getTypicalAddressBookWithNothing() {","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"bgopi23"},"content":"        for (Person person : getEmptyTypicalPerson()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"        return ab;","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":170,"author":{"gitId":"bgopi23"},"content":"     * Gets a list of people without any email","lastModifiedDate":"2024-04-07"},{"lineNumber":171,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"     * @returns a list of Person Objects that do not have any email attribute associated with them","lastModifiedDate":"2024-04-07"},{"lineNumber":173,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":174,"author":{"gitId":"bgopi23"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsWithoutEmail() {","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"bgopi23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITHOUT_EMAIL, BENSON_WITHOUT_EMAIL));","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":179,"author":{"gitId":"bgopi23"},"content":"     * Gets a list of people, some of whom do not have an email","lastModifiedDate":"2024-04-07"},{"lineNumber":180,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":181,"author":{"gitId":"bgopi23"},"content":"     * @returns a list of people where only some of them do not have an email","lastModifiedDate":"2024-04-07"},{"lineNumber":182,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":183,"author":{"gitId":"bgopi23"},"content":"    public static List\u003cPerson\u003e getSomeTypicalPersonsWithoutEmail() {","lastModifiedDate":"2024-04-07"},{"lineNumber":184,"author":{"gitId":"bgopi23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITHOUT_EMAIL, BENSON_WITHOUT_EMAIL, CARL_WITHOUT_EMAIL, DANIEL,","lastModifiedDate":"2024-04-07"},{"lineNumber":185,"author":{"gitId":"bgopi23"},"content":"                ELLE));","lastModifiedDate":"2024-04-07"},{"lineNumber":186,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":187,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":188,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":189,"author":{"gitId":"bgopi23"},"content":"     * Gets a list of single typical person","lastModifiedDate":"2024-04-07"},{"lineNumber":190,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":191,"author":{"gitId":"bgopi23"},"content":"     * @returns a list containing a single typical person object","lastModifiedDate":"2024-04-07"},{"lineNumber":192,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":193,"author":{"gitId":"bgopi23"},"content":"    public static List\u003cPerson\u003e getSingleTypicalPerson() {","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"bgopi23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITHOUT_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":198,"author":{"gitId":"bgopi23"},"content":"     * Gets a list without any people inside","lastModifiedDate":"2024-04-07"},{"lineNumber":199,"author":{"gitId":"bgopi23"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":200,"author":{"gitId":"bgopi23"},"content":"     * @returns a list containing no person objects","lastModifiedDate":"2024-04-07"},{"lineNumber":201,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":202,"author":{"gitId":"bgopi23"},"content":"    public static List\u003cPerson\u003e getEmptyTypicalPerson() {","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"bgopi23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList());","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"RyanNgWH":12,"bgopi23":118,"ruijietay":6,"jjchee77":5,"-":64}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        return this.text;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        return Objects.equals(this.text, otherTestFxmlObject.text);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ruijietay":2,"-":43}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        URL missingFileUrl \u003d new URL(this.testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"            assertEquals(VALID_FILE_ROOT, this.validFileRoot);","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"            assertEquals(VALID_FILE_ROOT, this.validFileRoot);","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ruijietay":3,"-":111}}]
