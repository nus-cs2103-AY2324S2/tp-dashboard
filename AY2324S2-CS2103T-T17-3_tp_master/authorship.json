[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T17-3/tp/actions)","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"# FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"FitBook is an easy-to-use address book that is geared towards personal trainers.","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"Features such as the integration of personal health information for each contact allows trainers to effectively track the progress of their clients.","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"The main way to interact with FitBook is via the keyboard. This allows trainers to quickly manage their clients, while still having a GUI that provides a visually pleasing experience to the user.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"* For the detailed documentation of this project, see the **[FitBook Product Website](https://ay2324s2-cs2103t-t17-3.github.io/tp/)**.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"* This project is based on the [AddressBook-Level3](https://github.com/se-edu/addressbook-level3) project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"ruijietay":9,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    String jUnitVersion \u003d \u00275.10.0\u0027","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"    implementation \u0027com.google.zxing:core:3.4.1\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"    implementation \u0027com.google.zxing:javase:3.4.1\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"dillontkh"},"content":"    archiveFileName \u003d \u0027FitBook.jar\u0027","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"run {","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"RyanNgWH":1,"-":70,"dillontkh":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"\u003c!-- @format --\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"## FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"### Tan Kah Ho Dillon","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"\u003cimg src\u003d\"images/dillontkh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"[[github](https://github.com/dillontkh)]","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"- Role: Team Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"- Responsible for overall project coordination.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"### Baskar Gopinath","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"\u003cimg src\u003d\"images/bgopi23.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"[[github](http://github.com/bgopi23)]","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"- Role: Deadlines, deliverables and IntelliJ Expert","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"- Responsibilities: Ensure project deliverables are done in time and help others with any IntelliJ issues","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"### Ng Wei Han, Ryan","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"\u003cimg src\u003d\"images/ryanngwh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"[[github](http://github.com/ryanngwh)]","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"[[linkedin](https://www.linkedin.com/in/ryan-ngwh)]","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"- Role: Testing Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"- Responsible for the quality and timeliness of the project testing.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"### Chee Jing Jie","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"\u003cimg src\u003d\"images/jjchee77.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"[[github](https://github.com/jjchee77)]","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"[[linkedin](https://www.linkedin.com/in/absythe/)]","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"- Role: Code Quality and Integration Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"- Responsible for the code quality and software integration.","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"### Tay Rui-Jie","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"\u003cimg src\u003d\"images/ruijietay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"[[github](http://github.com/ruijietay)]","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"[[linkedin](https://www.linkedin.com/in/tayruijie/)]","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"- Role: Documentation Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"- Responsible for the quality of the project website as well as various project documents.","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"RyanNgWH":11,"bgopi23":4,"ruijietay":9,"jjchee77":5,"-":32,"dillontkh":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"| Module                                  | Description                               |","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"|-----------------------------------------|-------------------------------------------|","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"| [JavaFX](https://openjfx.io/)                   | UI generation for Java             |","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"| [Jackson](https://github.com/FasterXML/jackson) | Json processing library for Java         |","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"| [JUnit5](https://github.com/junit-team/junit5)  | Automated testing library for Java |","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"| [ZXing](https://github.com/zxing/zxing)         | Barcode image processing library for Java |","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document are located in the `docs/diagrams` folder. Refer to the [PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"**Main components of the architecture**\u003ca name\u003d\"main-components-of-the-architecture\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"the command `delete 1`.","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"dillontkh"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"dillontkh"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"dillontkh"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"dillontkh"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"dillontkh"},"content":"visible GUI.","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"dillontkh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"dillontkh"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"dillontkh"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"dillontkh"},"content":"is specified","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"dillontkh"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"dillontkh"},"content":"call as an example.","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"bgopi23"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a client).\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"dillontkh"},"content":"   several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"dillontkh"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"dillontkh"},"content":"  a `Command` object.","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"dillontkh"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"dillontkh"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-03-05"},{"lineNumber":161,"author":{"gitId":"dillontkh"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-05"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"dillontkh"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"dillontkh"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"dillontkh"},"content":"  objects.","lastModifiedDate":"2024-03-05"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"dillontkh"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2024-03-05"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"dillontkh"},"content":"  that belong to the `Model`)","lastModifiedDate":"2024-03-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"dillontkh"},"content":"### QR Code","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"dillontkh"},"content":"Each client has a QR code that allows users to save their contact information to their phones easily.","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"dillontkh"},"content":"![QrNewUi](images/QrNewUi.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"dillontkh"},"content":"Initially, we wanted to simply add a QR code to the list of persons as seen below.","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"dillontkh"},"content":"![QrOldUi](images/QrOldUi.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"dillontkh"},"content":"However, we found that in practice, the QR codes were difficult to scan for two main reasons:","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"dillontkh"},"content":"1. The QR codes themselves were too small","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"dillontkh"},"content":"1. The QR codes of other contacts was interfering with the one we wanted to scan","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"dillontkh"},"content":"Thus, we decided to move the QR code to its own separate part of the UI.","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"dillontkh"},"content":"#### QR Code Generation","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"dillontkh"},"content":"Whenever a new client is added to the address book, a QR code is generated for them that contains their information in a vCard format.","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"dillontkh"},"content":"The following sequence diagram illustrates this.","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"dillontkh"},"content":"![QrAddPersonSequenceDiagram](images/QrAddPersonSequenceDiagram.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"dillontkh"},"content":"We considered generating the QR code upon the creation of a `Person` object. However, we discovered that it was possible for a `Person` to be created, but never added to the address book, as shown in the following activity diagram.","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"dillontkh"},"content":"![AddCommandActivityDiagram](images/AddCommandActivityDiagram.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"dillontkh"},"content":"Thus, we chose to only generate QR codes when the person is successfully added to avoid unnecessary QR code generations.","lastModifiedDate":"2024-03-25"},{"lineNumber":229,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"dillontkh"},"content":"This approach was also taken for the editing/deleting of QR codes.","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"ruijietay"},"content":"#### QR Code Image File Naming","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"ruijietay"},"content":"QR codes associated with a client are saved in the `data/qrcodes` folder as `.png` files, and named according to the following format: ","lastModifiedDate":"2024-03-30"},{"lineNumber":235,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"ruijietay"},"content":"* [HASHCODE].png, where [HASHCODE] is the result of the `hashCode()` function of a `Person`.","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"bgopi23"},"content":"### Deleting a client from FitBook","lastModifiedDate":"2024-03-23"},{"lineNumber":239,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":240,"author":{"gitId":"bgopi23"},"content":"The activity diagram below illustrates what happens when a client is deleted from `FitBook`.","lastModifiedDate":"2024-03-23"},{"lineNumber":241,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":242,"author":{"gitId":"bgopi23"},"content":"![DeleteCommandActivityDiagram](images/DeleteCommandActivityDiagram.png)","lastModifiedDate":"2024-03-23"},{"lineNumber":243,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"ruijietay"},"content":"### Additional user details in FitBook","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"ruijietay"},"content":"On top of what AB3 has to offer, FitBook allows users to add additional details to each client to better track their health status.","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"ruijietay"},"content":"This includes:","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"dillontkh"},"content":"* [Weight tracking feature](#weight-tracking-feature)","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"ruijietay"},"content":"* [Note](#note-feature-in-fitbook)","lastModifiedDate":"2024-03-26"},{"lineNumber":250,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":251,"author":{"gitId":"ruijietay"},"content":"#### Note feature in FitBook","lastModifiedDate":"2024-03-26"},{"lineNumber":252,"author":{"gitId":"ruijietay"},"content":"The `note` feature allows users to add any relevant health information to each client.","lastModifiedDate":"2024-03-26"},{"lineNumber":253,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":254,"author":{"gitId":"ruijietay"},"content":"For more details on how the `note` field interacts with the `add` and `edit` command, refer [here](#adding-or-editing-a-client).","lastModifiedDate":"2024-03-26"},{"lineNumber":255,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":256,"author":{"gitId":"ruijietay"},"content":"##### Interacting with the `note` command","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"ruijietay"},"content":"The sequence diagram below shows how the components interact with each other when the user inputs the command `note 1 nt/Likes to eat`.","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"ruijietay"},"content":"![AddNoteSequenceDiagram](images/AddNoteSequenceDiagram.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"ruijietay"},"content":"The diagram highlights the four main components of FitBook, highlighted in their respective colors. For more information regarding the four main components, see [Main components of the architecture](#main-components-of-the-architecture).","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"ruijietay"},"content":"\u003e The above sequence diagram also applies to the removal of a note from an existing client when no input string or prefix is entered for the `note` command. (i.e. `note 1`, or `note 1 nt/`).","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":266,"author":{"gitId":"dillontkh"},"content":"#### Weight tracking feature","lastModifiedDate":"2024-03-31"},{"lineNumber":267,"author":{"gitId":"dillontkh"},"content":"The weight tracking feature allows users to keep track of past weight measurements of a client.","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":269,"author":{"gitId":"ruijietay"},"content":"We can refer to the sequence diagram [above](#interacting-with-the-note-command) to see how the addition of such fields to clients interact with the components of FitBook.","lastModifiedDate":"2024-03-26"},{"lineNumber":270,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":271,"author":{"gitId":"dillontkh"},"content":"For more details on how the `weight` field interact with the `add` and `edit` command, refer [here](#adding-or-editing-a-client).","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":273,"author":{"gitId":"dillontkh"},"content":"#### Viewing weight history of a client","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":275,"author":{"gitId":"RyanNgWH"},"content":"### Searching Clients","lastModifiedDate":"2024-03-23"},{"lineNumber":276,"author":{"gitId":"RyanNgWH"},"content":"Search for clients is done using the `find` command. The command has been designed to be extendable, allowing for developers to easily define how new fields (attributes) in the clients can be searched.","lastModifiedDate":"2024-03-26"},{"lineNumber":277,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":278,"author":{"gitId":"RyanNgWH"},"content":"The sequence diagram below shows the logic flow of executing the command `find n/wendy`.","lastModifiedDate":"2024-03-23"},{"lineNumber":279,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":280,"author":{"gitId":"RyanNgWH"},"content":"![FindCommandSequenceDiagram-Logic](images/FindCommandSequenceDiagram-Logic.png)","lastModifiedDate":"2024-03-23"},{"lineNumber":281,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":282,"author":{"gitId":"RyanNgWH"},"content":"Note that the main searching logic is defined by creating a `Predicate`, which in turn calls the `isMatch()` method of the attribute.","lastModifiedDate":"2024-03-23"},{"lineNumber":283,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":284,"author":{"gitId":"RyanNgWH"},"content":"Therefore, to define how an attribute is being searched, one would simply take the following steps:","lastModifiedDate":"2024-03-23"},{"lineNumber":285,"author":{"gitId":"RyanNgWH"},"content":"1. Define the implementation of the `isMatch()` method of the respective attribute. (e.g `Name::isMatch()`)","lastModifiedDate":"2024-03-23"},{"lineNumber":286,"author":{"gitId":"RyanNgWH"},"content":"1. Create a new class that extends `Predicate` (e.g `NameContainsSubstringPredicate`)","lastModifiedDate":"2024-03-23"},{"lineNumber":287,"author":{"gitId":"RyanNgWH"},"content":"1. Update the `parse()` method in `FindCommandParser` to uses the new predicate","lastModifiedDate":"2024-03-23"},{"lineNumber":288,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":289,"author":{"gitId":"ruijietay"},"content":"### Adding or editing a client","lastModifiedDate":"2024-03-26"},{"lineNumber":290,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":291,"author":{"gitId":"ruijietay"},"content":"The following activity diagram summarizes what happens when a client is added or edited in FitBook.","lastModifiedDate":"2024-03-26"},{"lineNumber":292,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":293,"author":{"gitId":"ruijietay"},"content":"![AddAndEditCommandSequenceDiagram](images/AddAndEditCommandActivityDiagram.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":294,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"dillontkh"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2024-03-05"},{"lineNumber":300,"author":{"gitId":"dillontkh"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2024-03-05"},{"lineNumber":301,"author":{"gitId":"dillontkh"},"content":"following operations:","lastModifiedDate":"2024-03-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"RyanNgWH"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":304,"author":{"gitId":"RyanNgWH"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":305,"author":{"gitId":"RyanNgWH"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"dillontkh"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2024-03-05"},{"lineNumber":308,"author":{"gitId":"dillontkh"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-03-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"dillontkh"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2024-03-05"},{"lineNumber":313,"author":{"gitId":"dillontkh"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-03-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"bgopi23"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the address book. The `delete` command","lastModifiedDate":"2024-03-15"},{"lineNumber":318,"author":{"gitId":"dillontkh"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2024-03-05"},{"lineNumber":319,"author":{"gitId":"dillontkh"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2024-03-05"},{"lineNumber":320,"author":{"gitId":"dillontkh"},"content":"state.","lastModifiedDate":"2024-03-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"bgopi23"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also","lastModifiedDate":"2024-03-15"},{"lineNumber":325,"author":{"gitId":"dillontkh"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2024-03-05"},{"lineNumber":326,"author":{"gitId":"dillontkh"},"content":"the `addressBookStateList`.","lastModifiedDate":"2024-03-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"bgopi23"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing","lastModifiedDate":"2024-03-15"},{"lineNumber":335,"author":{"gitId":"dillontkh"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2024-03-05"},{"lineNumber":336,"author":{"gitId":"dillontkh"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":357,"author":{"gitId":"dillontkh"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2024-03-05"},{"lineNumber":358,"author":{"gitId":"dillontkh"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-03-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"dillontkh"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2024-03-05"},{"lineNumber":365,"author":{"gitId":"dillontkh"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2024-03-05"},{"lineNumber":366,"author":{"gitId":"dillontkh"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-05"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"dillontkh"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2024-03-05"},{"lineNumber":371,"author":{"gitId":"dillontkh"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2024-03-05"},{"lineNumber":372,"author":{"gitId":"dillontkh"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2024-03-05"},{"lineNumber":373,"author":{"gitId":"dillontkh"},"content":"desktop applications follow.","lastModifiedDate":"2024-03-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":386,"author":{"gitId":"RyanNgWH"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-03-07"},{"lineNumber":387,"author":{"gitId":"RyanNgWH"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-03-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"bgopi23"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2024-03-15"},{"lineNumber":392,"author":{"gitId":"RyanNgWH"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-03-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2024-03-07"},{"lineNumber":420,"author":{"gitId":"bgopi23"},"content":"* prefers typing to mouse interactions (i.e. should be able to type fast)","lastModifiedDate":"2024-03-15"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-07"},{"lineNumber":422,"author":{"gitId":"dillontkh"},"content":"* is a personal trainer","lastModifiedDate":"2024-03-09"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"dillontkh"},"content":"**Value proposition**: FitBook will help to keep track of client-specific information such as progress, goals, and preferences all in one place, allowing the user to organize and manage their clients\u0027 information efficiently.","lastModifiedDate":"2024-03-20"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"dillontkh"},"content":"| Priority | As a ...                                      | I want to ...                                                                                | So that I can ...                                                                            |","lastModifiedDate":"2024-03-15"},{"lineNumber":431,"author":{"gitId":"ruijietay"},"content":"|----------|-----------------------------------------------|----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-08"},{"lineNumber":432,"author":{"gitId":"ruijietay"},"content":"| `* * *`  | user                                          | add a client name and phone number                                                           | quickly take down contact details even in a rush                                             |","lastModifiedDate":"2024-03-08"},{"lineNumber":433,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user                                          | add personal health information for each contact                                             | store additional information associated with the client                                      |","lastModifiedDate":"2024-03-16"},{"lineNumber":434,"author":{"gitId":"ruijietay"},"content":"| `* * *`  | user                                          | delete contact                                                                               | remove them when I no longer need to contact them                                            |","lastModifiedDate":"2024-03-08"},{"lineNumber":435,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user                                          | display all contacts                                                                         | I can see all my clients at a glance.                                                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":436,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user                                          | see usage instructions                                                                       | refer to instructions when I forget how to use the application                               |","lastModifiedDate":"2024-03-16"},{"lineNumber":437,"author":{"gitId":"dillontkh"},"content":"| `* * *`  | user with many contacts in the address book   | search for contacts by their name                                                            | locate details of persons without having to go through the entire list                       |","lastModifiedDate":"2024-03-15"},{"lineNumber":438,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | add a picture to my contacts                                                                 | easily identify my contacts and add a personal touch to them                                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":439,"author":{"gitId":"-"},"content":"| `* *`    | user                                          | hide private contact details                                                                 | minimize chance of someone else seeing them by accident                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | quickly view the available commands                                                          | view quick command help without needing to leave the application                             |","lastModifiedDate":"2024-03-13"},{"lineNumber":441,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | scan a QR code to save a contact                                                             | transfer information from FitBook to my mobile phone easily                                  |","lastModifiedDate":"2024-03-15"},{"lineNumber":442,"author":{"gitId":"dillontkh"},"content":"| `* *`    | user                                          | update a person\u0027s contact information                                                        | keep my address book relevant and up-to-date                                                 |","lastModifiedDate":"2024-03-16"},{"lineNumber":443,"author":{"gitId":"ruijietay"},"content":"| `*`      | user                                          | have a graphical overview of the changes of my client\u0027s health details over a certain period | easily keep track of my client\u0027s progress                                                    |","lastModifiedDate":"2024-03-11"},{"lineNumber":444,"author":{"gitId":"dillontkh"},"content":"| `*`      | user who has completed dealings with a client | archive contacts                                                                             | remove them from the contact list but still have their contact information in case I need it |","lastModifiedDate":"2024-03-05"},{"lineNumber":445,"author":{"gitId":"ruijietay"},"content":"| `*`      | user with many clients                        | sort contacts based on next session                                                          | easily locate the details of the client I am going to meet next                              |","lastModifiedDate":"2024-03-08"},{"lineNumber":446,"author":{"gitId":"bgopi23"},"content":"| `*`      | user with many contacts in the address book   | sort contacts by name                                                                        | locate a client easily                                                                       |","lastModifiedDate":"2024-03-15"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"bgopi23"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":452,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC01 - Delete a client","lastModifiedDate":"2024-03-09"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-09"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"bgopi23"},"content":"1. User requests to view list","lastModifiedDate":"2024-03-07"},{"lineNumber":459,"author":{"gitId":"ruijietay"},"content":"1. FitBook shows a list of clients","lastModifiedDate":"2024-03-26"},{"lineNumber":460,"author":{"gitId":"ruijietay"},"content":"1. User requests to delete a specific client in the list","lastModifiedDate":"2024-03-26"},{"lineNumber":461,"author":{"gitId":"ruijietay"},"content":"1. FitBook deletes the client from the list","lastModifiedDate":"2024-03-26"},{"lineNumber":462,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"RyanNgWH"},"content":"    * 3a1. FitBook shows an error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"bgopi23"},"content":"      Use case resumes at step 2","lastModifiedDate":"2024-03-09"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"RyanNgWH"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":479,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":480,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC02 - See usage instructions","lastModifiedDate":"2024-03-07"},{"lineNumber":481,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":482,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-07"},{"lineNumber":483,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":484,"author":{"gitId":"bgopi23"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":485,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":486,"author":{"gitId":"bgopi23"},"content":"1. User requests to view usage instructions","lastModifiedDate":"2024-03-07"},{"lineNumber":487,"author":{"gitId":"ruijietay"},"content":"1. FitBook displays the usage instructions such as how to add, edit, delete or search for clients","lastModifiedDate":"2024-03-26"},{"lineNumber":488,"author":{"gitId":"ruijietay"},"content":"1. User reads the instructions to understand how to use the FitBook","lastModifiedDate":"2024-03-26"},{"lineNumber":489,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":490,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":491,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":492,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":493,"author":{"gitId":"RyanNgWH"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":494,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":495,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC03 - Add new contact","lastModifiedDate":"2024-03-07"},{"lineNumber":496,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":497,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-07"},{"lineNumber":498,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":499,"author":{"gitId":"bgopi23"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":500,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":501,"author":{"gitId":"bgopi23"},"content":"1. User requests to add a new client","lastModifiedDate":"2024-03-09"},{"lineNumber":502,"author":{"gitId":"ruijietay"},"content":"1. FitBook displays a success message after the new client is successfully added","lastModifiedDate":"2024-03-26"},{"lineNumber":503,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":504,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":505,"author":{"gitId":"bgopi23"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":506,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":507,"author":{"gitId":"bgopi23"},"content":"* 1a. User enters an invalid command","lastModifiedDate":"2024-03-07"},{"lineNumber":508,"author":{"gitId":"RyanNgWH"},"content":"    * 1a1. FitBook alerts the user that the command is invalid and displays the correct format","lastModifiedDate":"2024-03-08"},{"lineNumber":509,"author":{"gitId":"bgopi23"},"content":"    * Use case resumes","lastModifiedDate":"2024-03-07"},{"lineNumber":510,"author":{"gitId":"bgopi23"},"content":"* 1b. User tries to add a client that already exists in FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":511,"author":{"gitId":"bgopi23"},"content":"    * 1b1. FitBook alerts the user that a client with that name and details already exists","lastModifiedDate":"2024-03-09"},{"lineNumber":512,"author":{"gitId":"bgopi23"},"content":"    * 1b2. FitBook provides possible solutions (use different details if the client name is the same)","lastModifiedDate":"2024-03-09"},{"lineNumber":513,"author":{"gitId":"bgopi23"},"content":"    * Use case resumes","lastModifiedDate":"2024-03-07"},{"lineNumber":514,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":515,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":516,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":517,"author":{"gitId":"bgopi23"},"content":"**System**: FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":518,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":519,"author":{"gitId":"bgopi23"},"content":"**Use case**: UC04 - Display all clients","lastModifiedDate":"2024-03-09"},{"lineNumber":520,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":521,"author":{"gitId":"bgopi23"},"content":"**Actor**: User","lastModifiedDate":"2024-03-07"},{"lineNumber":522,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":523,"author":{"gitId":"bgopi23"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":524,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":525,"author":{"gitId":"bgopi23"},"content":"1. User requests to see a list of all clients","lastModifiedDate":"2024-03-09"},{"lineNumber":526,"author":{"gitId":"ruijietay"},"content":"1. FitBook displays a success message followed by the list of clients","lastModifiedDate":"2024-03-26"},{"lineNumber":527,"author":{"gitId":"ruijietay"},"content":"1. User views the list","lastModifiedDate":"2024-03-26"},{"lineNumber":528,"author":{"gitId":"ruijietay"},"content":"1. Use case ends","lastModifiedDate":"2024-03-26"},{"lineNumber":529,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":530,"author":{"gitId":"bgopi23"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":532,"author":{"gitId":"bgopi23"},"content":"* 2a. User enters an invalid command","lastModifiedDate":"2024-03-07"},{"lineNumber":533,"author":{"gitId":"RyanNgWH"},"content":"    * 2b1. FitBook alerts the user that the command is invalid and displays the correct format","lastModifiedDate":"2024-03-08"},{"lineNumber":534,"author":{"gitId":"bgopi23"},"content":"    * Use case resumes","lastModifiedDate":"2024-03-07"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":536,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"RyanNgWH"},"content":"\u003ca id\u003d\"nfr-1\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":542,"author":{"gitId":"RyanNgWH"},"content":"1. Should work on any _mainstream OS_ (Windows, macOS and Linux) as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-07"},{"lineNumber":543,"author":{"gitId":"bgopi23"},"content":"1. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-15"},{"lineNumber":544,"author":{"gitId":"RyanNgWH"},"content":"1. Should provide responsive performance, users should experience minimal delays in critical functionalities such as searching and updating contacts (feedback should be within 1 second).","lastModifiedDate":"2024-03-07"},{"lineNumber":545,"author":{"gitId":"RyanNgWH"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-08"},{"lineNumber":546,"author":{"gitId":"RyanNgWH"},"content":"1. Should provide an intuitive and user-friendly interface. Users should be able to easily and quickly navigate the user interface to identify crucial information (E.g Name, Contact, Health information) at a glance.","lastModifiedDate":"2024-03-08"},{"lineNumber":547,"author":{"gitId":"RyanNgWH"},"content":"1. Should have a shallow learning curve. New users (including the non-technically savvy) should be able to pick up and start using the application efficiently within a week.","lastModifiedDate":"2024-03-07"},{"lineNumber":548,"author":{"gitId":"RyanNgWH"},"content":"1. Should be optimized to run smoothly on low-end devices with limited processing power and memory. Users on older hardware should be able to use the application as long as it meets [this requirement](#nfr-1).","lastModifiedDate":"2024-03-08"},{"lineNumber":549,"author":{"gitId":"RyanNgWH"},"content":"1. Should provide full offline functionality. Users should be able to access all functionality of FitBook even when the device is not connected to the internet.","lastModifiedDate":"2024-03-08"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"jjchee77"},"content":"* **Above average typing speed**: Typing speed of more than 40 words per minute","lastModifiedDate":"2024-03-07"},{"lineNumber":554,"author":{"gitId":"jjchee77"},"content":"* **Architecture**: The high-level design and code structure of FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":555,"author":{"gitId":"jjchee77"},"content":"* **Archive**: Moving a contact to a secondary space in FitBook that is of less importance","lastModifiedDate":"2024-03-08"},{"lineNumber":556,"author":{"gitId":"jjchee77"},"content":"* **API(Application Programming Interface)**: Defines how software components interact with each other","lastModifiedDate":"2024-03-09"},{"lineNumber":557,"author":{"gitId":"jjchee77"},"content":"* **Client**: A personal training customer of the target user (ie. people engaging the services of a Personal Trainer)","lastModifiedDate":"2024-03-08"},{"lineNumber":558,"author":{"gitId":"jjchee77"},"content":"* **Contact**: A person whose details are stored in FitBook","lastModifiedDate":"2024-03-08"},{"lineNumber":559,"author":{"gitId":"jjchee77"},"content":"* **CLI (Command Line Interface)**: A user interface that is based on interaction with the terminal or console","lastModifiedDate":"2024-03-09"},{"lineNumber":560,"author":{"gitId":"jjchee77"},"content":"* **Fit**: In good health, especially because of regular exercise","lastModifiedDate":"2024-03-09"},{"lineNumber":561,"author":{"gitId":"jjchee77"},"content":"* **Fitness**: The condition of being physically fit and healthy","lastModifiedDate":"2024-03-09"},{"lineNumber":562,"author":{"gitId":"jjchee77"},"content":"* **FitBook**: An address book with additional capabilities for managing personal training clients","lastModifiedDate":"2024-03-09"},{"lineNumber":563,"author":{"gitId":"jjchee77"},"content":"* **GUI (Graphical User Interface)**: The visual interface of FitBook that users interact with","lastModifiedDate":"2024-03-08"},{"lineNumber":564,"author":{"gitId":"jjchee77"},"content":"* **Healthy**: In a good physical or mental condition","lastModifiedDate":"2024-03-09"},{"lineNumber":565,"author":{"gitId":"dillontkh"},"content":"* **JavaFX**: A set of graphics and media packages that enables developers to design, create, test and debug applications","lastModifiedDate":"2024-03-20"},{"lineNumber":566,"author":{"gitId":"dillontkh"},"content":"* **JSON (JavaScript Object Notation)**:  A lightweight data-interchange format used for storing and transporting data","lastModifiedDate":"2024-03-31"},{"lineNumber":567,"author":{"gitId":"jjchee77"},"content":"* **Low-end devices**: Computers with lesser than average hardware resources such as processing power and memory","lastModifiedDate":"2024-03-08"},{"lineNumber":568,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-03-07"},{"lineNumber":569,"author":{"gitId":"dillontkh"},"content":"* **Personal Health Information**: Details such as weight, body mass index, allergies, medical history etc.","lastModifiedDate":"2024-03-31"},{"lineNumber":570,"author":{"gitId":"jjchee77"},"content":"* **Personal Trainer (PT)**: A person who helps others plan and implement a fitness regime","lastModifiedDate":"2024-03-09"},{"lineNumber":571,"author":{"gitId":"bgopi23"},"content":"* **PlantUML**: A tool for creating UML diagrams from plain text","lastModifiedDate":"2024-03-07"},{"lineNumber":572,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2024-03-07"},{"lineNumber":573,"author":{"gitId":"jjchee77"},"content":"* **Responsive performance**: No noticeable delay of FitBook during user interaction","lastModifiedDate":"2024-03-08"},{"lineNumber":574,"author":{"gitId":"bgopi23"},"content":"* **Sequence Diagram**: A UML diagram that depicts how objects interact with each other in a sequence","lastModifiedDate":"2024-03-07"},{"lineNumber":575,"author":{"gitId":"jjchee77"},"content":"* **Usage instructions**: Documentation detailing FitBook\u0027s features and how to navigate about them","lastModifiedDate":"2024-03-08"},{"lineNumber":576,"author":{"gitId":"jjchee77"},"content":"* **User**: The person using FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":577,"author":{"gitId":"jjchee77"},"content":"* **UI (User Interface)**: Manages user interactions with graphic interface elements","lastModifiedDate":"2024-03-09"},{"lineNumber":578,"author":{"gitId":"ruijietay"},"content":"* **AB3**: [AddressBook-Level3](https://github.com/se-edu/addressbook-level3), a project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-26"},{"lineNumber":579,"author":{"gitId":"dillontkh"},"content":"* **vCard**: A data format for contact information. Detailed information can be found in [RFC 6350](https://datatracker.ietf.org/doc/html/rfc6350).","lastModifiedDate":"2024-03-25"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"dillontkh"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2024-03-05"},{"lineNumber":599,"author":{"gitId":"dillontkh"},"content":"       optimum.","lastModifiedDate":"2024-03-05"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"bgopi23"},"content":"### Deleting a client","lastModifiedDate":"2024-03-15"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"bgopi23"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2024-03-15"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"bgopi23"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"dillontkh"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-03-05"},{"lineNumber":618,"author":{"gitId":"dillontkh"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-05"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"bgopi23"},"content":"       Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-03-15"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"RyanNgWH":43,"bgopi23":70,"ruijietay":55,"jjchee77":18,"-":313,"dillontkh":135}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"## About FitBook","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"FitBook is a **desktop app for managing your clients, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you are a personal trainer that prefers typing over mouse interactions, FitBook is the perfect application for you!","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"### Key features","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"{:.no_toc}","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"With FitBook, you can:","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"* **Seamlessly save clients as contacts on your phone using QR codes**","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"* **Store personalized notes for each client**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"* **Keep track of your clients\u0027 fitness journey** (_Work in progress_)","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"_All in one app!_","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"For more details on what FitBook has to offer, check out the [Features](#features) section below!","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"## Using this guide","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"The purpose of this user guide is to **walk you through installing FitBook**, as well as be a **resource you can refer to** if you require any additional help. Think of it like an instruction manual that comes with a new gadget - You can refer to it if you get stuck, but otherwise, you\u0027re free to explore on your own!","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"You can use the [Table of contents](#table-of-contents) to navigate directly to what you\u0027re looking for.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:bulb: **Tips/Info**","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"Be on the lookout for boxes like these, they usually contain important information and helpful tips!","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning**","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"On the other hand, these boxes indicate when you should pay extra attention to avoid running into problems.","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e:rotating_light: **Caution**","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"Lastly, these boxes contain warnings about potential negative outcomes. ","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"(e.g. irreversible loss of data)","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"Can\u0027t wait to get started? [Click me](#setting-up-fitbook) to jump straight to the FitBook installation guide!","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"_Disclaimer: Certain portions of this guide assume you are familiar with the command line. If you aren\u0027t, check out this informative \u003ca href\u003d\"https://www.freecodecamp.org/news/command-line-for-beginners/\" target\u003d\"_blank\"\u003earticle from freeCodeCamp\u003c/a\u003e._","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"## Table of contents","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"## Setting up FitBook","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"1. Ensure you have Java **11** or above installed.","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    * [What version of Java do I have?](#what-version-of-java-do-i-have)","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"    * Need help installing Java? Check out the \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html\" target\u003d\"_blank\"\u003eJava 11 installation guide\u003c/a\u003e.","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":":question: **What is Java? Is it safe to install?**","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"Java is a versatile programming language used for developing various applications. FitBook requires it to be installed because it is written in Java and relies on the Java Virtual Machine (JVM) to run.","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"\u003ca href\u003d\"https://www.java.com/en/download/help/whatis_java.html\" target\u003d\"_blank\"\u003eLearn more about Java\u003c/a\u003e.","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"[//]: # (Continue numbering from 2, as the block above interrupts the list and resets the number)","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"{:start\u003d\"2\"}","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"1. Download the latest version of `FitBook.jar` from \u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-T17-3/tp/releases\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e.","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"1. Copy the file to the folder you want to use as the **home folder** for FitBook.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"   * FitBook will save all the data it needs in this folder.","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"1. Double-click the `FitBook.jar` file to launch it.","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"    * If that doesn\u0027t work, try the steps found [here](#why-doesnt-fitbook-start-when-i-double-click).","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"1. A GUI similar to the one depicted below should appear in a few seconds. The app contains some sample data for you to familiarize yourself with the UI.\u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"    ![Ui](images/Ui.png)","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"1. Read through `help`, type any command listed into the input box and press `enter` \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"   These are some example commands you can try!","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"bgopi23"},"content":"   * `add n/John p/98765432` Adds a client named","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"   `John Doe` with the number `98765432` to FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"bgopi23"},"content":"   * `clear` : Clears all clients from the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"bgopi23"},"content":"   * `delete 3` : Deletes the third client shown in the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"   * `list` : Lists all clients.","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"bgopi23"},"content":"Launches the help menu depicted below. \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"bgopi23"},"content":"Clicking `Open User Guide` leads to the User Guide website.","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"### Adding a client: `add`","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"bgopi23"},"content":"Adds a client to the FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"Format: `add n/NAME p/PHONE_NUMBER [e/EMAIL] [a/ADDRESS] [w/WEIGHT] [h/HEIGHT] [nt/NOTE] [t/TAG]…​`","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"A client can have 0 or more tags.","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"* `add n/John Doe p/98765432 e/johnd@gmail.com a/John street, block 123, #01-01 nt/john from school`","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@hotmail.com a/Newgate Prison p/1234567 nt/likes donuts t/criminal`","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"bgopi23"},"content":"### Listing all clients : `list`","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"bgopi23"},"content":"Displays an indexed list of all clients in FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"### Editing a client : `edit`","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"Edits information tagged to an existing client","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"ruijietay"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [w/WEIGHT] [h/HEIGHT] [nt/NOTE] [t/TAG]…​`","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"* Edits the clients at the specified `INDEX`. The index refers to the index number shown in the displayed client list. ","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"bgopi23"},"content":"* You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"bgopi23"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"bgopi23"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"### Adding a note to clients : `note`","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"ruijietay"},"content":"Format: `note INDEX nt/NOTE`","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"ruijietay"},"content":"* Edits the note of the client specified by `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"* Existing note will be updated to the input note.","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"\u003e While this can also be done using the `edit` command, this `note` command serves as a faster way for users to directly modify a note.","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"ruijietay"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"ruijietay"},"content":"*  `note 1 nt/History of asthma` - Edits the note of the 1st client to `History of asthma`.","lastModifiedDate":"2024-03-30"},{"lineNumber":192,"author":{"gitId":"ruijietay"},"content":"*  `note 2 nt/Previously sprained both ankles` - Edits the note of the 2nd client to `Previously sprained both ankles`.","lastModifiedDate":"2024-03-30"},{"lineNumber":193,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"ruijietay"},"content":"### Searching clients: `find`","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"ruijietay"},"content":"Finds all clients that match the specified attributes.","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"ruijietay"},"content":"Format: `find [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [nt/NOTE] [t/TAG]…​`","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"RyanNgWH"},"content":"* Any fields can be searched.","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"RyanNgWH"},"content":"* Multiple fields can be search in one command","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"RyanNgWH"},"content":"    * All fields must match (e.g `find n/Wendy p/91234567` will match with a contact whose name contains `wendy` and phone number contains `91234567`)","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"RyanNgWH"},"content":"* All fields except `TAG` will be matched based on substring (e.g `Wen` will match `Wendy`)","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Take note:**","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"ruijietay"},"content":"* Unlike other fields, `TAG` must be an exact match (case-insensitive)","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"RyanNgWH"},"content":"* E.g `find t/fri` will not match the tag `friend`","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"ruijietay"},"content":"* But `find t/fRieNd` will match the tag `friend`","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"RyanNgWH"},"content":"* `find n/Wendy` returns `Wendy Son` and `Wendy Kim`","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"RyanNgWH"},"content":"  ![result for \u0027find n/Wendy\u0027](images/FindNameMultiple.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"RyanNgWH"},"content":"* `find n/Wendy t/Lover` returns `Wendy` (`Name` contains `Wendy` and is tagged with `Lover`)","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"RyanNgWH"},"content":"  ![result for \u0027find n/Wendy t/Lover\u0027](images/FindNameTag.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"bgopi23"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"bgopi23"},"content":"Deletes the specified client from FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"bgopi23"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"bgopi23"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"bgopi23"},"content":"* `list` followed by `delete 2` deletes the second client in the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"bgopi23"},"content":"* `find Betsy` followed by `delete 1` deletes the first client in the results of the `find` command.","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"bgopi23"},"content":"Clears all client information from FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"ruijietay"},"content":":rotating_light: **This command is irreversible. Use with caution.**","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"ruijietay"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"ruijietay"},"content":"If you are sure of your decision to clear all client information, use the `/confirm` prefix with this command to execute it.","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"ruijietay"},"content":"Format: `clear /confirm`","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"bgopi23"},"content":"Exits FitBook.","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"bgopi23"},"content":"FitBook data is saved in the hard disk automatically after any command that changes the data. ","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"bgopi23"},"content":"There is no need to save manually.","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":267,"author":{"gitId":"bgopi23"},"content":"FitBook data is saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. ","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"bgopi23"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":270,"author":{"gitId":"ruijietay"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:warning: **Warning:**","lastModifiedDate":"2024-03-30"},{"lineNumber":271,"author":{"gitId":"ruijietay"},"content":"If your changes to the data file make its format invalid, FitBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to make a backup of the file before editing it.","lastModifiedDate":"2024-03-30"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":273,"author":{"gitId":"ruijietay"},"content":"Furthermore, certain edits can cause FitBook to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"bgopi23"},"content":"### Save contact to phone","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":279,"author":{"gitId":"dillontkh"},"content":"![QrCodeContactCard](images/QrCodeContactCard.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":280,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":281,"author":{"gitId":"dillontkh"},"content":"To save a contact to your mobile phone from FitBook, simply scan the QR code next to the contact.","lastModifiedDate":"2024-03-19"},{"lineNumber":282,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":283,"author":{"gitId":"ruijietay"},"content":"\u003cimg src\u003d\"images/QRScanning.png\" height\u003d\"480\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":284,"author":{"gitId":"ruijietay"},"content":"\u003cimg src\u003d\"images/QRContact.png\" height\u003d\"480\"\u003e ","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"bgopi23"},"content":"\u003chr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"ruijietay"},"content":"###### How do I transfer my data to another Computer?","lastModifiedDate":"2024-03-30"},{"lineNumber":296,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":297,"author":{"gitId":"bgopi23"},"content":"**A**: Install FitBook in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FitBook home folder.","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"ruijietay"},"content":"###### What version of Java do I have?","lastModifiedDate":"2024-03-30"},{"lineNumber":300,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":301,"author":{"gitId":"ruijietay"},"content":"**A**: Open a command prompt, and run the command `java --version`","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":303,"author":{"gitId":"ruijietay"},"content":"###### Why doesn\u0027t FitBook start when I double-click?","lastModifiedDate":"2024-03-30"},{"lineNumber":304,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":305,"author":{"gitId":"ruijietay"},"content":"**A**: If double-clicking to open FitBook doesn\u0027t work, try running it via the command line:","lastModifiedDate":"2024-03-30"},{"lineNumber":306,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":307,"author":{"gitId":"ruijietay"},"content":"1. Open a command prompt (**cmd** for Windows, **Terminal** for Mac)","lastModifiedDate":"2024-03-30"},{"lineNumber":308,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":309,"author":{"gitId":"ruijietay"},"content":"1. Use `cd` to navigate to the folder containing `FitBook.jar`","lastModifiedDate":"2024-03-30"},{"lineNumber":310,"author":{"gitId":"ruijietay"},"content":"    * e.g. `cd ~/Downloads/FitBook/`","lastModifiedDate":"2024-03-30"},{"lineNumber":311,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":312,"author":{"gitId":"ruijietay"},"content":"1. Run `java -jar FitBook.jar` to launch FitBook.","lastModifiedDate":"2024-03-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"ruijietay"},"content":"| Action     | Format, Examples                                                                                                                                                                                    |","lastModifiedDate":"2024-03-30"},{"lineNumber":325,"author":{"gitId":"ruijietay"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-30"},{"lineNumber":326,"author":{"gitId":"ruijietay"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER [e/EMAIL] [a/ADDRESS] [nt/NOTE] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 nt/likes pizzas t/friend t/colleague` |","lastModifiedDate":"2024-03-30"},{"lineNumber":327,"author":{"gitId":"ruijietay"},"content":"| **Clear**  | `clear`                                                                                                                                                                                             |","lastModifiedDate":"2024-03-30"},{"lineNumber":328,"author":{"gitId":"ruijietay"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                 |","lastModifiedDate":"2024-03-30"},{"lineNumber":329,"author":{"gitId":"ruijietay"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [nt/NOTE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                               |","lastModifiedDate":"2024-03-30"},{"lineNumber":330,"author":{"gitId":"ruijietay"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                          |","lastModifiedDate":"2024-03-30"},{"lineNumber":331,"author":{"gitId":"ruijietay"},"content":"| **List**   | `list`                                                                                                                                                                                              |","lastModifiedDate":"2024-03-30"},{"lineNumber":332,"author":{"gitId":"ruijietay"},"content":"| **Help**   | `help`                                                                                                                                                                                              |","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"RyanNgWH":9,"bgopi23":51,"ruijietay":129,"-":138,"dillontkh":5}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"dillontkh"},"content":"    content: \"FitBook\";","lastModifiedDate":"2024-03-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"dillontkh":1}},{"path":"docs/diagrams/AddCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"skin rose","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"start","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":":User sends an \u0027add\u0027 command;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":":AddCommandParser generates a Person object;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"if () then ([person already exists])","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"    :Throw CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"stop","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"else","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":":Person is added to the address book;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"stop","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"endif","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"dillontkh":16}},{"path":"docs/diagrams/AddEditCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"skin rose","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"start","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":":Add/Edit CommandParser parses arguments;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":":ArgumentTokenizer tokenizes attributes;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"if () then ([has certain duplicated prefixes])","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"    :Display duplicate prefix error;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"    stop","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"else","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"    :Parse attributes into classes;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    if () then ([has attribute parsing error])","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"        :Display attribute parsing error;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"        stop","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    else ()","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"        :Create Person instance with supplied attributes;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"        :Create Add/Edit Command instance with Person instance;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"        :Execute Add/Edit Command instance;","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"        if () then ([person already exists in FitBook])","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"            :Display duplicate person error;","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"            stop","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"        else ()","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"            :Add person to FitBook;","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"            :Save persons to JSON file;","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"            :Display successful add/edit command result;","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"            stop","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        endif","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    endif","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"endif","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"jjchee77":31}},{"path":"docs/diagrams/AddNoteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"@startuml","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"!include style.puml","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"Actor User as User USER_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"participant \":Ui\" as Ui UI_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"box LogicManager LOGIC_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"participant \":NoteCommandParser\" as NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"participant \"n:NoteCommand\" as NoteCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"User -[USER_COLOR]\u003e Ui : \"note 1 nt/Hi\"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"activate Ui UI_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"Ui -[UI_COLOR]\u003e LogicManager : execute(...)","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"LogicManager -[LOGIC_COLOR]\u003e AddressBookParser : parseCommand(...)","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"create NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"AddressBookParser -[LOGIC_COLOR]\u003e NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"activate NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser --[LOGIC_COLOR]\u003e AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"AddressBookParser -[LOGIC_COLOR]\u003e NoteCommandParser : parse(\" 1 nt/Hi\")","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"activate NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"create NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser -[LOGIC_COLOR]\u003e NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"activate NoteCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"NoteCommand --[LOGIC_COLOR]\u003e NoteCommandParser :","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser --[LOGIC_COLOR]\u003e AddressBookParser : n","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"\u0027This means that the instantiation of the parser is not saved in a variable.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"NoteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"destroy NoteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"AddressBookParser --[LOGIC_COLOR]\u003e LogicManager : n","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"LogicManager -[LOGIC_COLOR]\u003e NoteCommand : execute(m)","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"activate NoteCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"NoteCommand -[LOGIC_COLOR]\u003e Model : setPerson(1, \"Hi\");","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"activate Model MODEL_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"Model --[MODEL_COLOR]\u003e NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"deactivate Model","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"create CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"NoteCommand -[LOGIC_COLOR]\u003e CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"CommandResult --[LOGIC_COLOR]\u003e NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"NoteCommand --[LOGIC_COLOR]\u003e LogicManager : r","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"deactivate NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"LogicManager -[LOGIC_COLOR]\u003e Storage : saveAddressBook(addressBook)","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"activate Storage STORAGE_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"Storage -[STORAGE_COLOR]\u003e Storage : Save to file","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"activate Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"Storage --[STORAGE_COLOR_T1]\u003e Storage","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"deactivate Storage","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"Storage --[STORAGE_COLOR]\u003e LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"deactivate Storage","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"LogicManager --[LOGIC_COLOR]\u003e Ui : r","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"Ui --[UI_COLOR]\u003e User : r","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"deactivate Ui","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"@enduml","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ruijietay":95}},{"path":"docs/diagrams/DeleteCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"@startuml","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"skin rose","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"start","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":":DeleteCommandParser parses arguments;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":":ParseIndex gets index from parsed arguments;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"if () then ([Valid])","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    :Create DeleteCommand instance with supplied index;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    :Execute DeleteCommand instance;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"    :Delete person from FitBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"    :Display success message;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"    stop","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"else ([Invalid index])","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"    :Display invalid index error;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"    stop","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"endif","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"@enduml","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"bgopi23":18}},{"path":"docs/diagrams/FindCommandSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"box Model MODEL MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"participant \":NameContainsSubstringPredicate\" as NameContainsSubstringPredicate MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"participant \":CombinedPredictes\" as CombinedPredicates MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"[-\u003e LogicManager : execute(\"find n/wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"n/wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"create NameContainsSubstringPredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e NameContainsSubstringPredicate : NameContainsSubstringPredicate(\"wendy\")","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"activate NameContainsSubstringPredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"NameContainsSubstringPredicate -\u003e FindCommandParser : namePredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"deactivate NameContainsSubstringPredicate","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"create CombinedPredicates","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e CombinedPredicates : CombinedPredicates(namePredicate, ...)","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"activate CombinedPredicates","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"CombinedPredicates -\u003e FindCommandParser : predicates","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"deactivate CombinedPredicates","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"create FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicates)","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"FindCommand -\u003e FindCommandParser : findCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"FindCommandParser -\u003e AddressBookParser : findCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"AddressBookParser -\u003e LogicManager : findCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicates)","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"Model -\u003e FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"FindCommand -\u003e LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"RyanNgWH":65}},{"path":"docs/diagrams/QrAddPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nQrCodeGenerator\" as qrg LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"[-\u003e Model : addPerson(p)","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"activate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"Model -\u003e Person : p.generateQrCode()","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"activate Person","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"Person -\u003e qrg : QrCodeGenerator.generateQrCode(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"activate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"qrg -\u003e qrg : createVCardString(p)","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"activate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"qrg --\u003e qrg : vCard String","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"deactivate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"qrg -\u003e qrg : getQrCodePath(p)","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"activate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"qrg --\u003e qrg : path to QR code for that person","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"deactivate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"qrg -\u003e] : generate QR code and write to path","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"]--\u003e qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"qrg --\u003e Person","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"deactivate qrg","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"Person --\u003e Model","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"deactivate Person","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"Model --\u003e[","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"deactivate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"dillontkh":46}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"title: FitBook","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T17-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-T17-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T17-3/tp/graph/badge.svg?token\u003dVBA5T73I01)](https://codecov.io/gh/AY2324S2-CS2103T-T17-3/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"**FitBook is a desktop application for managing your clients\u0027 details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"* If you are interested in using FitBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"* If you are interested about developing FitBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [ZXing](https://github.com/zxing/zxing)","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"bgopi23":1,"ruijietay":3,"-":12,"dillontkh":3}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":185,"dillontkh":1}},{"path":"src/main/java/seedu/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Determines the operating system","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public static enum OS {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        WIN,","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        MAC,","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"        LINUX;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"         * Determines if the operating system is Windows","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"         *","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"         * @return True if operating system is Windows, False otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        public static boolean isWindows() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"            return System.getProperty(\"os.name\").trim().toLowerCase().contains(WIN.toString().toLowerCase());","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"         * Determines if the operating system is MacOS","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"         *","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"         * @return True if operating system is MacOS, False otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        public static boolean isMac() {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"            return System.getProperty(\"os.name\").trim().toLowerCase().contains(MAC.toString().toLowerCase());","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"         * Determines if the operating system is Linux","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"         *","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"         * @return True if operating system is Linux, False otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        public static boolean isLinux() {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"            return System.getProperty(\"os.name\").trim().toLowerCase().contains(LINUX.toString().toLowerCase());","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * methods.","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * methods.","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     *                                  {@code condition} is false.","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RyanNgWH":41,"-":39}},{"path":"src/main/java/seedu/address/logic/QrCodeGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.BarcodeFormat;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.EncodeHintType;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.WriterException;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.client.j2se.MatrixToImageWriter;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.common.BitMatrix;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.qrcode.QRCodeWriter;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":" * Class to generate QR Codes","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"public class QrCodeGenerator {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"     * The folder where QR codes are stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"    public static final Path QR_CODE_FOLDER \u003d Paths.get(\"data\", \"qrcodes\");","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"     * The width of the QR code.","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"    private static final int QR_CODE_WIDTH \u003d 200;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"     * The height of the QR code.","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"    private static final int QR_CODE_HEIGHT \u003d 200;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"     * Generates a QR code based on the provided person information and saves it to the specified file path","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"     * @param person the person object containing the information to encode in the QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"     * @throws WriterException if an error occurs during the encoding process","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"     * @throws IOException     if an error occurs while writing the QR code image to the file","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"    public static void generateQrCode(Person person) throws WriterException, IOException {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"        // As we generate a QR code from a person object, the person object must not be null","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"        assert (person !\u003d null);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"        String vCard \u003d createVCardString(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"        Map\u003cEncodeHintType, Object\u003e hints \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"        hints.put(EncodeHintType.CHARACTER_SET, \"UTF-8\");","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"        hints.put(EncodeHintType.MARGIN, 1); // Set the margin to avoid cutting off","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"dillontkh"},"content":"        hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"        QRCodeWriter qrCodeWriter \u003d new QRCodeWriter();","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"        BitMatrix bitMatrix \u003d qrCodeWriter.encode(vCard, BarcodeFormat.QR_CODE, QR_CODE_WIDTH, QR_CODE_HEIGHT, hints);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"        Path path \u003d getQrCodePath(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"        Files.createDirectories(path.getParent()); // Create necessary folders along the path if they do not exist","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"        MatrixToImageWriter.writeToPath(bitMatrix, \"PNG\", path);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"     * Creates a VCard string for the given {@code Person}","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"     * @param person the person for whom the VCard string is created","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"dillontkh"},"content":"     * @return the VCard string","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"    private static String createVCardString(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"dillontkh"},"content":"        return \"BEGIN:VCARD\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"dillontkh"},"content":"                + \"VERSION:4.0\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"dillontkh"},"content":"                + \"FN:\" + person.getName() + \"\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"dillontkh"},"content":"                + \"TEL;TYPE\u003dCELL:\" + person.getPhone() + \"\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"dillontkh"},"content":"                + \"EMAIL:\" + person.getEmail() + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"                + \"ADR;TYPE\u003dHOME:;;\" + person.getAddress() + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"                + \"NOTE:\" + person.getNote() + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"                + \"END:VCARD\";","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"dillontkh"},"content":"     * Generates the file path for the QR code of a specific person","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"dillontkh"},"content":"     * @param person the person for whom the QR code path is generated","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"     * @return the file path for the QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"    public static Path getQrCodePath(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"        return Paths.get(QR_CODE_FOLDER.toString(), person.hashCode() + \".png\");","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"dillontkh":89}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * Gets the warning message for the command\u0027s execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @return The warning message, or an empty string if none.","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    private String getMessageWarn() {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        boolean isPhoneOfExpectedFormat \u003d toAdd.getPhone().isExpectedFormat();","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        if (!isPhoneOfExpectedFormat) {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"            return String.format(Messages.MESSAGE_WARN, Phone.MESSAGE_EXPECTED);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        return \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"            throw new CommandException(AddCommandMessages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        String messageSuccess \u003d String.format(AddCommandMessages.MESSAGE_SUCCESS, toAdd.getFormattedMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        String messageWarn \u003d this.getMessageWarn();","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        String messageResult \u003d String.format(\"%s%s\", messageSuccess, messageWarn);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        return new CommandResult(messageResult);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jjchee77":26,"-":55}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ClearCommandMessages.MESSAGE_CONFIRM;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ClearCommandMessages.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"    private final boolean confirmed;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"    public ClearCommand(boolean confirmed) {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"        this.confirmed \u003d confirmed;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"        if (!confirmed) {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"            return new CommandResult(MESSAGE_CONFIRM);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"bgopi23":2,"-":22,"dillontkh":8}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.DeleteCommandMessages.MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.DeleteCommandMessages.MESSAGE_USAGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"                personToDelete.getFormattedMessage()));","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":6,"-":56,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.EditCommandMessages.MESSAGE_USAGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"            throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        // Get the weight map of the person we are editing.","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        NavigableMap\u003cLocalDateTime, Weight\u003e toEditWeightMap \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"                new TreeMap\u003c\u003e(personToEdit.getWeights());","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        // We only modify the weight map if user has specified the weight prefix.","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        if (editPersonDescriptor.getWeight().isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"            Weight updatedWeight \u003d editPersonDescriptor.getWeight().get();","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"            // If there no more weight values to be removed","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"            if (updatedWeight.getValue() \u003d\u003d 0f \u0026\u0026 toEditWeightMap.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"                throw new CommandException(WeightMap.MESSAGE_EMPTY_WEIGHT_MAP);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"            toEditWeightMap.pollLastEntry();","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"            if (updatedWeight.getValue() !\u003d 0f) {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"                toEditWeightMap.put(WeightEntry.getTimeOfExecution(), updatedWeight);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        Height updatedHeight \u003d editPersonDescriptor.getHeight().orElse(personToEdit.getHeight());","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"bgopi23"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"                toEditWeightMap, updatedHeight, updatedNote, updatedTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"     * Gets the warning message for the command\u0027s execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"     * @return The warning message, or an empty string if none.","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"    private String getMessageWarn(Person editedPerson) {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"        boolean isPhoneOfExpectedFormat \u003d editedPerson.getPhone().isExpectedFormat();","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"        if (!isPhoneOfExpectedFormat) {","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"            return String.format(Messages.MESSAGE_WARN, Phone.MESSAGE_EXPECTED);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"        return \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"        String messageSuccess \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"        String messageWarn \u003d this.getMessageWarn(editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"        String messageResult \u003d String.format(\"%s%s\", messageSuccess, messageWarn);","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"        return new CommandResult(messageResult);","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"     * replace the corresponding field value of the person.","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"ruijietay"},"content":"        private Weight weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"ruijietay"},"content":"        private Height height;","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"        private Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":188,"author":{"gitId":"ruijietay"},"content":"            setWeight(toCopy.weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":189,"author":{"gitId":"ruijietay"},"content":"            setHeight(toCopy.height);","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"ruijietay"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"ruijietay"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, weight, height, note, tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-03-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-03-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":233,"author":{"gitId":"ruijietay"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2024-03-13"},{"lineNumber":234,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2024-03-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":237,"author":{"gitId":"ruijietay"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":238,"author":{"gitId":"ruijietay"},"content":"            this.note \u003d note;","lastModifiedDate":"2024-03-13"},{"lineNumber":239,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":240,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"ruijietay"},"content":"        public Optional\u003cWeight\u003e getWeight() {","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(this.weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"ruijietay"},"content":"        public void setWeight(Weight weight) {","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"ruijietay"},"content":"            this.weight \u003d weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"ruijietay"},"content":"        public Optional\u003cHeight\u003e getHeight() {","lastModifiedDate":"2024-03-31"},{"lineNumber":250,"author":{"gitId":"ruijietay"},"content":"            return Optional.ofNullable(height);","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"ruijietay"},"content":"        public void setHeight(Height height) {","lastModifiedDate":"2024-03-31"},{"lineNumber":254,"author":{"gitId":"ruijietay"},"content":"            this.height \u003d height;","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"RyanNgWH"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2024-03-16"},{"lineNumber":259,"author":{"gitId":"RyanNgWH"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"dillontkh"},"content":"        /**","lastModifiedDate":"2024-03-24"},{"lineNumber":268,"author":{"gitId":"dillontkh"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-24"},{"lineNumber":269,"author":{"gitId":"dillontkh"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-24"},{"lineNumber":270,"author":{"gitId":"dillontkh"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":271,"author":{"gitId":"dillontkh"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-24"},{"lineNumber":272,"author":{"gitId":"dillontkh"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-24"},{"lineNumber":273,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":274,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":291,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(weight, otherEditPersonDescriptor.weight)","lastModifiedDate":"2024-03-30"},{"lineNumber":292,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(height, otherEditPersonDescriptor.height)","lastModifiedDate":"2024-03-27"},{"lineNumber":293,"author":{"gitId":"ruijietay"},"content":"                    \u0026\u0026 Objects.equals(note, otherEditPersonDescriptor.note)","lastModifiedDate":"2024-03-14"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"ruijietay"},"content":"                    .add(\"weight\", weight)","lastModifiedDate":"2024-03-30"},{"lineNumber":305,"author":{"gitId":"ruijietay"},"content":"                    .add(\"height\", height)","lastModifiedDate":"2024-03-27"},{"lineNumber":306,"author":{"gitId":"ruijietay"},"content":"                    .add(\"note\", note)","lastModifiedDate":"2024-03-14"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"RyanNgWH":6,"bgopi23":2,"ruijietay":72,"jjchee77":19,"-":204,"dillontkh":8}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ExitCommandMessages.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bgopi23":2,"-":15}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_NO_CLIENTS_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_ONE_CLIENT_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" * Finds and lists all persons in address book whose name contains any of the","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * argument keywords.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    public static final String VALIDATION_REGEX_RANGE \u003d \"^\\\\d+(\\\\.\\\\d+)?,\\\\s*\\\\d+(\\\\.\\\\d+)?$\";","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    private final CombinedPredicates predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    public FindCommand(CombinedPredicates predicates) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    public static boolean isValidRange(String test) {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        return test.matches(FindCommand.VALIDATION_REGEX_RANGE);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        model.updateFilteredPersonList(predicates);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"        int listSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"            return new CommandResult(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"            return new CommandResult(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"                String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, listSize));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        return predicates.equals(otherFindCommand.predicates);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"                .add(\"predicates\", predicates)","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"RyanNgWH":9,"bgopi23":8,"ruijietay":13,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.HelpCommandMessages.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":2,"-":14}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ListCommandMessages.MESSAGE_ALL_CLIENTS_LISTED;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ListCommandMessages.MESSAGE_NO_CLIENTS_TO_LIST;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ListCommandMessages.MESSAGE_ONE_CLIENT_LISTED;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"        int listSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"            return new CommandResult(MESSAGE_NO_CLIENTS_TO_LIST);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"        if (listSize \u003d\u003d 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"            return new CommandResult(MESSAGE_ONE_CLIENT_LISTED);","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"        return new CommandResult(String.format(MESSAGE_ALL_CLIENTS_LISTED, listSize));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":14,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_ADD_NOTE_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.List;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":" * Changes the note of an existing person in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    private final Index index;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    private final Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     * @param note  of the person to be updated to","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    public NoteCommand(Index index, Note note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        assert(model !\u003d null);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"                    NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getAddress(), personToEdit.getWeights(),","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getHeight(), this.note, personToEdit.getTags());","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"     * the note is added to or removed from","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        String message \u003d !note.getValue().isEmpty() ? MESSAGE_ADD_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"        return String.format(message, personToEdit.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        NoteCommand e \u003d (NoteCommand) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"RyanNgWH":1,"bgopi23":2,"ruijietay":80,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/commands/WeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_INDEX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.WeightCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":" * Changes the weight of an existing person in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"public class WeightCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    private final Index index;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    private final WeightEntry weightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    private LocalDateTime timeOfExecution \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"     * @param index of the person in the filtered person list to edit the weight","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"     * @param weight of the person to be updated to","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public WeightCommand(Index index, WeightEntry weight) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        requireAllNonNull(index, weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        this.weightEntry \u003d weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"     * @param index of the person in the filtered person list to edit the weight","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"     * @param weight of the person to be updated to","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"     * @param timeOfExecution of the weight","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    public WeightCommand(Index index, WeightEntry weight, LocalDateTime timeOfExecution) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        requireAllNonNull(index, weight, timeOfExecution);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        this.weightEntry \u003d weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        this.timeOfExecution \u003d timeOfExecution;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        NavigableMap\u003cLocalDateTime, Weight\u003e toEditWeightMap \u003d new TreeMap\u003c\u003e(personToEdit.getWeights());","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        if (this.weightEntry.getValue().getValue().getValue() \u003d\u003d 0f) {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"            if (toEditWeightMap.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"                throw new CommandException(WeightMap.MESSAGE_EMPTY_WEIGHT_MAP);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"            toEditWeightMap.pollLastEntry();","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"            // If user created this instance without specifying time of execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"            if (this.timeOfExecution \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"                toEditWeightMap.put(WeightEntry.getTimeOfExecution(), this.weightEntry.getValue().getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                toEditWeightMap.put(this.timeOfExecution, this.weightEntry.getValue().getValue());","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getAddress(), toEditWeightMap, personToEdit.getHeight(),","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"                personToEdit.getNote(), personToEdit.getTags());","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"     * the weight is added to or removed from","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        String message \u003d !(weightEntry.getValue().getValue().getValue() \u003d\u003d 0f)","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"                ? WeightCommandMessages.MESSAGE_ADD_WEIGHT_SUCCESS","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"                : WeightCommandMessages.MESSAGE_DELETE_WEIGHT_SUCCESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        return String.format(message, personToEdit.getFormattedMessage());","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof WeightCommand)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        WeightCommand e \u003d (WeightCommand) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"        return this.index.equals(e.index)","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 this.weightEntry.equals(e.weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"ruijietay":116}},{"path":"src/main/java/seedu/address/logic/messages/AddCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Messages used by AddCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class AddCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to FitBook. \\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_EMAIL + \"john@gmail.com \"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_ADDRESS + \"Clementi Ave 2 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_NOTE + \"BFF \"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_TAG + \"friend \";","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client successfully added!\\n--------------------------\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NO_PARAMETERS_ADD \u003d String.format(MESSAGE_NO_PARAMETERS, MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NAME_PARAMETER_MISSING_ADD \u003d String.format(MESSAGE_NAME_PARAMETER_MISSING,","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_PHONE_PARAMETER_MISSING_ADD \u003d String.format(MESSAGE_PHONE_PARAMETER_MISSING,","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_INVALID_PARAMETER_FORMAT_ADD \u003d String.format(MESSAGE_INVALID_PARAMETER_FORMAT,","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":6,"ruijietay":39}},{"path":"src/main/java/seedu/address/logic/messages/ClearCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ClearCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class ClearCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"FitBook has been cleared!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_CONFIRM \u003d \"Are you sure you want to clear ALL clients from FitBook? Enter \"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \"\u0027clear /confirm\u0027 to confirm.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":12}},{"path":"src/main/java/seedu/address/logic/messages/DeleteCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by DeleteCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class DeleteCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \": Deletes the client identified by their corresponding list index.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"            \"Successfully deleted client!\\n---------------------------\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":17}},{"path":"src/main/java/seedu/address/logic/messages/EditCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Messages used by EditCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class EditCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits a client\u0027s details specified \"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            + \"by the corresponding index in the client list.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_EMAIL + \"john@gmail.com\";","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"            \"Successfully edited client!\\n--------------------------\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":38}},{"path":"src/main/java/seedu/address/logic/messages/ExitCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ExitCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class ExitCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting FitBook. Goodbye!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":10}},{"path":"src/main/java/seedu/address/logic/messages/FindCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Messages used by FindCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class FindCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"            + \": Lists all clients whose specified attribute contains the specified keyword.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            + PREFIX_EMAIL + \"lewis@hotmail.com\";","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_FIND \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_PERSONS_FOUND_OVERVIEW \u003d \"%1$d clients found!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NO_CLIENTS_FOUND \u003d \"No clients found!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_ONE_CLIENT_FOUND \u003d \"1 client found!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE_RANGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            + \": Finds using a specified range that is comma-delimited.\"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            + \" FROM parameter must be less than or equal to TO parameter.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: FROM, TO (both of them must be a positive number greater than or equals to 0).\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" w/70, 80\";","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":6,"ruijietay":35}},{"path":"src/main/java/seedu/address/logic/messages/HelpCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by HelpCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class HelpCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":14}},{"path":"src/main/java/seedu/address/logic/messages/ListCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ListCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class ListCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_CLIENTS_TO_LIST \u003d \"No clients to list!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_ONE_CLIENT_LISTED \u003d \"1 client listed!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_ALL_CLIENTS_LISTED \u003d \"%1$d clients listed!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":12}},{"path":"src/main/java/seedu/address/logic/messages/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command, please type \u0027help\u0027 for possible commands\";","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_PARAMETER_FORMAT \u003d \"Invalid parameter format! \\n%1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_INDEX \u003d \"No index specified! \\n%1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"Invalid index provided. \\n%1$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NO_PARAMETERS \u003d \"No parameters specified! \\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NAME_PARAMETER_MISSING \u003d \"Name parameter missing! \\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_PHONE_PARAMETER_MISSING \u003d \"Phone number parameter missing! \\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    // Represents empty fields in the UI that needs extra clarity (instead of not showing the field at all)","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public static final String EMPTY_FIELD \u003d \"N/A\";","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_WARN \u003d \"\\n\\nWARNING: %s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"                .append(person.getNote())","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bgopi23":4,"ruijietay":8,"jjchee77":1,"-":48}},{"path":"src/main/java/seedu/address/logic/messages/NoteCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":" * Messages used by ListCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"public class NoteCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"            + \": Updates and overrides the note of the client identified \"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            + \"by their corresponding index.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"            + \"Likes to swim.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_ADD_NOTE_SUCCESS \u003d \"Successfully added note to client!\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"            + \"---------------------------------\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Successfully removed note from client!\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"            + \"--------------------------------------\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_INVALID_INDEX_NOTE \u003d String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"    public static final String MESSAGE_NO_INDEX_NOTE \u003d String.format(MESSAGE_NO_INDEX, MESSAGE_USAGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bgopi23":25}},{"path":"src/main/java/seedu/address/logic/messages/WeightCommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":" * Messages used by ListCommand and associated classes.","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"public class WeightCommandMessages extends Messages {","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    public static final String COMMAND_WORD \u003d \"weight\";","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"            + \": Edits the weight (in kilograms) of the person identified \"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"            + \"Existing weight will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"            + \"Parameters: INDEX (must be a positive float) \"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"            + CliSyntax.PREFIX_WEIGHT + \"WEIGHT\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"            + CliSyntax.PREFIX_WEIGHT + \"72.5\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_ADD_WEIGHT_SUCCESS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            \"Successfully added weight to client!\\n---------------------------------\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_DELETE_WEIGHT_SUCCESS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            \"Successfully removed weight from client!\\n--------------------------------------\\n%1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_INVALID_PARAMETER_WEIGHT \u003d String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_NO_PARAMETER_WEIGHT \u003d String.format(MESSAGE_NO_PARAMETERS, MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_INVALID_INDEX_WEIGHT \u003d String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    public static final String WEIGHT_VALUE_HEADER \u003d \"Weight: \";","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    public static final String WEIGHT_DATE_HEADER \u003d \"Date Recorded: \";","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    // Represents an empty weight field in the UI that needs extra clarity (instead of not showing the field at all)","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public static final String EMPTY_FIELD_WEIGHT_VALUE \u003d WEIGHT_VALUE_HEADER + Messages.EMPTY_FIELD;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public static final String EMPTY_FIELD_WEIGHT_DATE \u003d WEIGHT_DATE_HEADER + Messages.EMPTY_FIELD;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":37}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_INVALID_PARAMETER_FORMAT_ADD;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_NAME_PARAMETER_MISSING_ADD;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_NO_PARAMETERS_ADD;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.AddCommandMessages.MESSAGE_PHONE_PARAMETER_MISSING_ADD;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES_EXCEPT_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME_AND_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, ALL_PREFIXES);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        // (add)","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_NO_PARAMETERS_ADD);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        // (add John)","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        if (!argMultimap.containsAll(PREFIX_NAME_AND_PHONE) || !argMultimap.isPreambleEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_INVALID_PARAMETER_FORMAT_ADD);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        // (add p/99898888)","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        if (!argMultimap.contains(PREFIX_NAME)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_NAME_PARAMETER_MISSING_ADD);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        // (add n/John)","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        if (!argMultimap.contains(PREFIX_PHONE)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_PHONE_PARAMETER_MISSING_ADD);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        // (add n/John p/98988898...)","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(ALL_PREFIXES_EXCEPT_TAG);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getStringValue(PREFIX_NAME));","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getStringValue(PREFIX_PHONE));","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL));","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        NavigableMap\u003cLocalDateTime, Weight\u003e weightMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        if (ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT)).getValue() !\u003d 0f) {","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"            weightMap.put(WeightEntry.getTimeOfExecution(),","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"                    ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT)));","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        Height height \u003d ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT));","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE));","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        Person person \u003d new Person(name, phone, email, address, weightMap, height, note, tagList);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bgopi23":2,"ruijietay":45,"jjchee77":2,"-":41}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ClearCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ExitCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.HelpCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.WeightCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        case NoteCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"            return new NoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        case AddCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        case EditCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        case DeleteCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        case ClearCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"dillontkh"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        case FindCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        case WeightCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"            return new WeightCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        case ExitCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        case HelpCommandMessages.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruijietay":24,"-":69,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"     * Gets  Gets the value associated with the prefix or an empty string","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"     * @param prefix the associated prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"     * @return a string value or empty string","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"    public String getValueOrEmpty(Prefix prefix) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"        return this.getValue(prefix).orElse(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"     * Gets the value associated with the prefix or a preamble if the value does not exist","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"     * @param prefix the associated prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"     * @return the associated value or preamble","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"    public String getValueOrPreamble(Prefix prefix) {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        return this.getValue(prefix).orElse(getPreamble());","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"     * Gets string value associated with the given prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"     * @param prefix the associated prefix","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"     * @return a string","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"    public String getStringValue(Prefix prefix) {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"        return getValue(prefix).get();","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"        return this.getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"bgopi23"},"content":"     * Returns the number of segments in a preamble split by a single whitespace","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"bgopi23"},"content":"    public Integer getPreambleSegmentNumber() {","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"bgopi23"},"content":"        return getPreamble().split(\" \").length;","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"dillontkh"},"content":"     * Returns true if the prefix exists as a key in the map.","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"dillontkh"},"content":"    public boolean contains(Prefix prefix) {","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"dillontkh"},"content":"        return argMultimap.containsKey(prefix);","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"bgopi23"},"content":"     * Checks if every single one of the prefixes exists in the map","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"bgopi23"},"content":"     * @param prefixes a list of prefixes","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"bgopi23"},"content":"     * @return true if all the prefixes exists in the map","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"bgopi23"},"content":"    public boolean containsAll(Prefix... prefixes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"bgopi23"},"content":"        return Stream.of(prefixes).anyMatch(this::contains);","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"bgopi23"},"content":"     * Checks if the preamble of the argumentMultimap object is empty","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"bgopi23"},"content":"     * @return true if the preamble is empty","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"bgopi23"},"content":"    public boolean isPreambleEmpty() {","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"bgopi23"},"content":"        return this.getPreamble().isEmpty();","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"bgopi23":51,"-":78,"dillontkh":7}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAR_CONFIRM;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":" * Parses input arguments and creates a new ClearCommand object","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"     * and returns a ClearCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLEAR_CONFIRM);","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"        if (argMultimap.contains(PREFIX_CLEAR_CONFIRM)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"            return new ClearCommand(true);","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"            return new ClearCommand(false);","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"dillontkh":27}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix PREFIX_HEIGHT \u003d new Prefix(\"h/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"nt/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix[] ALL_PREFIXES \u003d {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NAME,","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        PREFIX_ADDRESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        PREFIX_HEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        PREFIX_WEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NOTE,","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        PREFIX_TAG","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    };","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix[] ALL_PREFIXES_EXCEPT_TAG \u003d {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NAME,","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        PREFIX_ADDRESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        PREFIX_HEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        PREFIX_WEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NOTE,","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    };","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix[] PREFIX_NAME_AND_PHONE \u003d {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NAME,","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    };","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    public static final Prefix[] PREFIXES_NAME_PHONE_EMAIL_ADDRESS \u003d {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        PREFIX_NAME,","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        PREFIX_ADDRESS","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    };","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"    public static final Prefix PREFIX_CLEAR_CONFIRM \u003d new Prefix(\"/confirm\");","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ruijietay":32,"-":14,"dillontkh":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.parser.ParserUtil.parseIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"                    String.format(Messages.MESSAGE_NO_INDEX, DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"            Index index \u003d parseIndex(args);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"                    String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"                            DeleteCommandMessages.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bgopi23":12,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"                        PREFIX_ADDRESS, PREFIX_WEIGHT, PREFIX_HEIGHT, PREFIX_NOTE, PREFIX_TAG);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        // (edit) or (edit n/John)","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        if (args.isEmpty() || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"                    String.format(Messages.MESSAGE_NO_INDEX, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // (edit 1 name) or (edit name 1)","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.getPreambleSegmentNumber() !\u003d 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"                    EditCommandMessages.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"                PREFIX_WEIGHT, PREFIX_HEIGHT, PREFIX_NOTE, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_NAME)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getStringValue(PREFIX_NAME)));","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_PHONE)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getStringValue(PREFIX_PHONE)));","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_EMAIL)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL)));","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_ADDRESS)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS)));","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"            editPersonDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT)));","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        if (argMultimap.getValue(PREFIX_HEIGHT).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"            editPersonDescriptor.setHeight(ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT)));","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"        if (argMultimap.contains(PREFIX_NOTE)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"            editPersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE)));","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(String.format(EditCommandMessages.MESSAGE_NOT_EDITED,","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"                    EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bgopi23":9,"ruijietay":30,"jjchee77":2,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_INVALID_COMMAND_FORMAT_FIND;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.ALL_PREFIXES;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIXES_NAME_PHONE_EMAIL_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AddressContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.EmailContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.HeightContainsRangePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NoteContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.TagSetContainsAllTagsPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.WeightMapContainsWeightRangePredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     * FindCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_FIND);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, ALL_PREFIXES);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIXES_NAME_PHONE_EMAIL_ADDRESS);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchString(argMultimap.getValueOrPreamble(PREFIX_NAME)));","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchString(argMultimap.getValueOrEmpty(PREFIX_PHONE)));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        EmailContainsSubstringPredicate emailPredicate \u003d new EmailContainsSubstringPredicate(","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchString(argMultimap.getValueOrEmpty(PREFIX_EMAIL)));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        AddressContainsSubstringPredicate addressPredicate \u003d new AddressContainsSubstringPredicate(","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchString(argMultimap.getValueOrEmpty(PREFIX_ADDRESS)));","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        WeightMapContainsWeightRangePredicate weightPredicate \u003d new WeightMapContainsWeightRangePredicate(","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchRange(argMultimap.getValue(PREFIX_WEIGHT)));","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        HeightContainsRangePredicate heightPredicate \u003d new HeightContainsRangePredicate(","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseSearchRange(argMultimap.getValue(PREFIX_HEIGHT)));","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(ParserUtil","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"                .parseSearchString(argMultimap.getValueOrEmpty(PREFIX_NOTE)));","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate tagsPredicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"                ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates predicates \u003d new CombinedPredicates(namePredicate, phonePredicate, emailPredicate,","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                addressPredicate, weightPredicate, heightPredicate, notePredicate, tagsPredicate);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        return new FindCommand(predicates);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RyanNgWH":22,"bgopi23":1,"ruijietay":26,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_INVALID_INDEX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.NoteCommandMessages.MESSAGE_NO_INDEX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":" * Parses input arguments and creates a new {@code NoteCommand} object","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"public class NoteCommandParser implements Parser\u003cNoteCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * {@code NoteCommand}","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"     * and returns a {@code NoteCommand} object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"        // (note)","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_NO_INDEX_NOTE);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        String[] argsArray \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        Index index;","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"            index \u003d ParserUtil.parseIndex(argsArray[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_NOTE, ive);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        Note note;","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        if (argsArray.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"            note \u003d new Note(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"            note \u003d new Note(String.join(\" \", Arrays.copyOfRange(argsArray, 1, argsArray.length)).trim());","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        return new NoteCommand(index, note);","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"RyanNgWH":13,"bgopi23":9,"ruijietay":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":" * classes.","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *                        unsigned integer).","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        String trimmedPhone \u003d phone.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e address} into an {@code Address}.","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"    public static Address parseAddress(Optional\u003cString\u003e address) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"        String trimmedAddress \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        if (address.isPresent() \u0026\u0026 !address.get().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"            trimmedAddress \u003d address.get().trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e email} into an {@code Email}.","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"    public static Email parseEmail(Optional\u003cString\u003e email) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"        String trimmedEmail \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"        if (email.isPresent() \u0026\u0026 !email.get().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"            trimmedEmail \u003d email.get().trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e note} into a {@code Note}.","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"     * If the {@code Optional} is empty, return a {@code Note} with an empty string.","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"    public static Note parseNote(Optional\u003cString\u003e note) {","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"        return note.isEmpty() ? new Note(\"\") : new Note(note.get().trim());","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e weight} into a {@code Weight}.","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"ruijietay"},"content":"     * If the {@code Optional} is empty, return a {@code Weight} with an uninitialized value of 0f.","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"    public static Weight parseWeight(Optional\u003cString\u003e weight) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"        if (!weight.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"            String trimmedWeight \u003d weight.get().trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"            if (!Weight.isValidWeight(trimmedWeight)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"                throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"            return trimmedWeight.isEmpty() ? new Weight(0f)","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"                    : new Weight(Float.valueOf(trimmedWeight));","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"        return new Weight(0f);","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e height} into a {@code Height}.","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"     * If the {@code Optional} is empty, return a {@code Height} with an uninitialized value of 0f.","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"    public static Height parseHeight(Optional\u003cString\u003e height) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(height);","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        if (!height.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"            String trimmedHeight \u003d height.get().trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"            if (!Height.isValidHeight(trimmedHeight)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"ruijietay"},"content":"                throw new ParseException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"ruijietay"},"content":"            return trimmedHeight.isEmpty() ? new Height(0f) : new Height(Float.valueOf(trimmedHeight));","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"ruijietay"},"content":"        return new Height(0f);","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code String searchString} into a string.","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"ruijietay"},"content":"     * @param searchString String to search.","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"ruijietay"},"content":"     * @return The string ready to be used for searching.","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"RyanNgWH"},"content":"    public static String parseSearchString(String searchString) {","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(searchString);","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"ruijietay"},"content":"        return searchString.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"ruijietay"},"content":"     * Parses a {@code Optional\u003cString\u003e searchRange} into a Pair of Floats.","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"ruijietay"},"content":"     * @param searchRange Range to search.","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"ruijietay"},"content":"     * @return The Pair instance ready to be used for searching.","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"ruijietay"},"content":"    public static Pair\u003cFloat, Float\u003e parseSearchRange(Optional\u003cString\u003e searchRange) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(searchRange);","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"ruijietay"},"content":"        if (searchRange.isPresent() \u0026\u0026 !searchRange.get().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"ruijietay"},"content":"            String trimmedRange \u003d searchRange.get().trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"ruijietay"},"content":"            if (!FindCommand.isValidRange(trimmedRange)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"ruijietay"},"content":"                throw new ParseException(FindCommandMessages.MESSAGE_USAGE_RANGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"ruijietay"},"content":"            String[] range \u003d searchRange.get().split(\",\\\\s*\");","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"ruijietay"},"content":"            Float fromRange \u003d Float.valueOf(range[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"ruijietay"},"content":"            Float toRange \u003d Float.valueOf(range[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"ruijietay"},"content":"            if (fromRange \u003e toRange) {","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"ruijietay"},"content":"                throw new ParseException(FindCommandMessages.MESSAGE_USAGE_RANGE);","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"ruijietay"},"content":"            return new Pair\u003c\u003e(fromRange, toRange);","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"ruijietay"},"content":"        return new Pair\u003c\u003e(0f, Float.MAX_VALUE);","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"RyanNgWH":16,"ruijietay":89,"jjchee77":13,"-":116}},{"path":"src/main/java/seedu/address/logic/parser/WeightCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_NO_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.WeightCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":" * Parses input arguments and creates a new {@code WeightCommand} object","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"public class WeightCommandParser implements Parser\u003cWeightCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code WeightCommand}","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"     * and returns a {@code WeightCommand} object for execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public WeightCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_NO_PARAMETER_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        String[] argsArray \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        Index index;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            index \u003d ParserUtil.parseIndex(argsArray[0]);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            throw new ParseException(MESSAGE_INVALID_PARAMETER_WEIGHT, ive);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        // If there is no value specified for the weight, user is deleting the last added weight value.","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        if (argsArray.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            return new WeightCommand(index, new WeightEntry(new AbstractMap.SimpleEntry\u003c\u003e(","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"                    WeightEntry.getTimeOfExecution(), new Weight(0f))));","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // Else, user is adding a new weight value.","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        return new WeightCommand(index, new WeightEntry(new AbstractMap.SimpleEntry\u003c\u003e(","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"                WeightEntry.getTimeOfExecution(),","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                ParserUtil.parseWeight(Optional.of(argsArray[1])))));","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":54}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"        filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"        initQrCodes();","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"        // Delete QR codes of every person in the address book","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"        this.addressBook.getPersonList().forEach(Person::deleteQrCode);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"dillontkh"},"content":"        target.deleteQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"dillontkh"},"content":"        person.generateQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"dillontkh"},"content":"        target.deleteQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"dillontkh"},"content":"        editedPerson.generateQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"     * Initialize QR codes for all persons in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"    public void initQrCodes() {","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"        for (Person person : this.addressBook.getPersonList()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"            person.generateQrCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":148,"dillontkh":20}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * {@link #isValidAddress(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class Address extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        super(address);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        if (!address.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the address value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the address value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherAddress.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":26,"jjchee77":1,"-":57}},{"path":"src/main/java/seedu/address/model/person/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * Defines an attribute in a Person in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"public abstract class Attribute\u003cT extends Object\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"    private final T value;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"    protected Attribute(T value) {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"     * Gets the value stored in this attribute.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @return Value stored in this attribute.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public T getValue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        return this.value;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     * Determines if a specified value is a match with the value stored in this","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * attriute.","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    public abstract boolean isMatch(Object otherValue);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"RyanNgWH":27,"jjchee77":3}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"public class Email extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        super(email);","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        if (!email.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the email value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the email value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherEmail.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":24,"jjchee77":1,"-":72}},{"path":"src/main/java/seedu/address/model/person/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s height in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"public class Height extends Attribute\u003cFloat\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Height value can only be a positive number.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:[0-9]+(?:\\\\.[0-9]*)?|\\\\.[0-9]+)?$\";","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code height}.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     * @param height A height.","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    public Height(Float height) {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        super(height);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(height);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"     * Returns true if a given string is a valid height.","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    public static boolean isValidHeight(String test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"     * Determine if the height value stored is within the range specified in heightRange.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"     * Returns true if specified value is within heightRange.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"     * @param heightRange Range of height to check against.","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"     * @return True if value is falls within heightRange, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object heightRange) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        if (!(heightRange instanceof Pair)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        Pair\u003c?, ?\u003e pair \u003d (Pair\u003c?, ?\u003e) heightRange;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        if (!(pair.getKey() instanceof Float) || !(pair.getValue() instanceof Float)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        Float firstVal \u003d (Float) pair.getKey();","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        Float secondVal \u003d (Float) pair.getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        assert (secondVal - firstVal \u003e\u003d 0) : \"Range should be more than or equals to zero.\"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"                + \"Should have been handled in Parser class\";","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        return (this.getValue() \u003e\u003d firstVal \u0026\u0026 this.getValue() \u003c\u003d secondVal);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"     * Adds a heading for the height field.","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"     * Empty height values (i.e. 0f) will be formatted as \"N/A\" for better clarity.","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"    public String getFormattedHeight() {","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        if (this.getValue() \u003d\u003d 0f) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"            return \"Height: N/A\";","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"        return \"Height: \" + this.getValue().toString() + \" cm\";","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles null types as well.","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Height)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        Height otherHeight \u003d (Height) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        // Use the equals() method of the underlying attribute to compare values","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherHeight.getValue());","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"ruijietay":97,"dillontkh":2}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"public class Name extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain alphanumeric\"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"            + \" characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        super(name);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the name value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the name value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherName.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":25,"-":58}},{"path":"src/main/java/seedu/address/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s note in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class Note extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Notes can take any values\";","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code note}.","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"     * @param note A note.","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    public Note(String note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(note);","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the note value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the note value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherNote.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"RyanNgWH":23,"ruijietay":43}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.WriterException;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.QrCodeGenerator;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.exceptions.AttributeNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.TagSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":" * immutable.","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Person.class);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    private final WeightMap weights;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    private final Height height;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    private final Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    private final TagSet tags;","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"                  NavigableMap\u003cLocalDateTime, Weight\u003e weights,","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"                  Height height, Note note, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        requireAllNonNull(name, phone, email, address, weights, height, note, tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d new WeightMap(weights);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d height;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        tagSet.addAll(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        this.tags \u003d new TagSet(tagSet);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"     * Get the value of the specified attribute.","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     * @param attribute Attribute to retrieve","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * @return Value of the specified attribute","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"    public Attribute\u003c? extends Object\u003e getAttribute(PersonAttribute attribute) {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        switch (attribute) {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        case NAME:","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"            return this.name;","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        case PHONE:","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"            return this.phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        case EMAIL:","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"            return this.email;","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        case ADDRESS:","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"            return this.address;","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        case NOTE:","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"            return this.note;","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        case WEIGHT:","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"            return this.weights;","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        case HEIGHT:","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"            return this.height;","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        case TAGS:","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"            return this.tags;","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"            throw new AttributeNotFoundException();","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"    public Optional\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e getLatestWeight() {","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        return Optional.ofNullable(this.weights.getValue().lastEntry());","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"     * Returns an immutable navigable map, which throws","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"    public NavigableMap\u003cLocalDateTime, Weight\u003e getWeights() {","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        return this.weights.getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"    public Height getHeight() {","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"        return this.height;","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"    public Note getNote() {","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"        return this.note;","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"        return this.tags.getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"     * Retrieves the QR code path.","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"dillontkh"},"content":"     * @return the path of the generated QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"dillontkh"},"content":"    public Path getQrCodePath() {","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"dillontkh"},"content":"        return QrCodeGenerator.getQrCodePath(this);","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":151,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"dillontkh"},"content":"     * Generates a QR code for the person.","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"dillontkh"},"content":"    public void generateQrCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"dillontkh"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"dillontkh"},"content":"            QrCodeGenerator.generateQrCode(this);","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"dillontkh"},"content":"            logger.info(\"Generated QR code for \" + this);","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"dillontkh"},"content":"        } catch (WriterException | IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"dillontkh"},"content":"            logger.warning(\"Unable to generate QR code for \" + this);","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"                \u0026\u0026 otherPerson.getAttribute(PersonAttribute.NAME).equals(getAttribute(PersonAttribute.NAME))","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"                \u0026\u0026 otherPerson.getAttribute(PersonAttribute.PHONE).equals(getAttribute(PersonAttribute.PHONE));","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-02-24"},{"lineNumber":198,"author":{"gitId":"ruijietay"},"content":"                \u0026\u0026 note.equals(otherPerson.note);","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"ruijietay"},"content":"                .add(\"note\", note)","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"dillontkh"},"content":"     * Deletes the QR code for the person.","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"dillontkh"},"content":"     * @return true if a QR code was deleted, false otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"dillontkh"},"content":"    public boolean deleteQrCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"dillontkh"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"dillontkh"},"content":"            boolean result \u003d Files.deleteIfExists(this.getQrCodePath());","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"dillontkh"},"content":"            if (result) {","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"dillontkh"},"content":"                logger.info(\"Deleted QR code for \" + this);","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":230,"author":{"gitId":"dillontkh"},"content":"                logger.info(\"Unable to delete QR code for \" + this + \" as it does not exist\");","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"dillontkh"},"content":"            return result;","lastModifiedDate":"2024-03-15"},{"lineNumber":233,"author":{"gitId":"dillontkh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":234,"author":{"gitId":"dillontkh"},"content":"            logger.warning(\"Unable to delete QR code for \" + this);","lastModifiedDate":"2024-03-15"},{"lineNumber":235,"author":{"gitId":"dillontkh"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":236,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":239,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":240,"author":{"gitId":"dillontkh"},"content":"     * Generates a formatted message for the Person.","lastModifiedDate":"2024-03-24"},{"lineNumber":241,"author":{"gitId":"dillontkh"},"content":"     * Only fields with values are included.","lastModifiedDate":"2024-03-24"},{"lineNumber":242,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":243,"author":{"gitId":"dillontkh"},"content":"    public String getFormattedMessage() {","lastModifiedDate":"2024-03-24"},{"lineNumber":244,"author":{"gitId":"dillontkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-24"},{"lineNumber":245,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"dillontkh"},"content":"        sb.append(\"Name: \").append(name);","lastModifiedDate":"2024-03-24"},{"lineNumber":247,"author":{"gitId":"dillontkh"},"content":"        sb.append(\" | Phone: \").append(phone);","lastModifiedDate":"2024-03-24"},{"lineNumber":248,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":249,"author":{"gitId":"dillontkh"},"content":"        if (!email.getValue().isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":250,"author":{"gitId":"dillontkh"},"content":"            sb.append(\" | Email: \").append(email);","lastModifiedDate":"2024-03-24"},{"lineNumber":251,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":252,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":253,"author":{"gitId":"dillontkh"},"content":"        if (!address.getValue().isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":254,"author":{"gitId":"dillontkh"},"content":"            sb.append(\"\\nAddress: \").append(address);","lastModifiedDate":"2024-03-24"},{"lineNumber":255,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":256,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":257,"author":{"gitId":"dillontkh"},"content":"        if (!note.getValue().isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":258,"author":{"gitId":"dillontkh"},"content":"            sb.append(\" | Note: \").append(note);","lastModifiedDate":"2024-03-24"},{"lineNumber":259,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":260,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":261,"author":{"gitId":"ruijietay"},"content":"        if (!weights.getValue().isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"ruijietay"},"content":"            sb.append(\" | Latest Weight: \").append(this.getLatestWeight().get().getValue().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":265,"author":{"gitId":"ruijietay"},"content":"        if (!(height.getValue() \u003d\u003d 0f)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":266,"author":{"gitId":"ruijietay"},"content":"            sb.append(\" | Height: \").append(height);","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":268,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":269,"author":{"gitId":"ruijietay"},"content":"        if (!this.getTags().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"dillontkh"},"content":"            sb.append(\" | Tags: \").append(tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":271,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":272,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":273,"author":{"gitId":"dillontkh"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":274,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":275,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":276,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":277,"author":{"gitId":"dillontkh"},"content":"     * Attributes of a Person","lastModifiedDate":"2024-03-24"},{"lineNumber":278,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":279,"author":{"gitId":"dillontkh"},"content":"    public enum PersonAttribute {","lastModifiedDate":"2024-03-24"},{"lineNumber":280,"author":{"gitId":"dillontkh"},"content":"        NAME,","lastModifiedDate":"2024-03-24"},{"lineNumber":281,"author":{"gitId":"dillontkh"},"content":"        PHONE,","lastModifiedDate":"2024-03-24"},{"lineNumber":282,"author":{"gitId":"dillontkh"},"content":"        EMAIL,","lastModifiedDate":"2024-03-24"},{"lineNumber":283,"author":{"gitId":"dillontkh"},"content":"        ADDRESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":284,"author":{"gitId":"ruijietay"},"content":"        WEIGHT,","lastModifiedDate":"2024-03-26"},{"lineNumber":285,"author":{"gitId":"ruijietay"},"content":"        HEIGHT,","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"ruijietay"},"content":"        NOTE,","lastModifiedDate":"2024-03-26"},{"lineNumber":287,"author":{"gitId":"ruijietay"},"content":"        TAGS","lastModifiedDate":"2024-03-26"},{"lineNumber":288,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":32,"ruijietay":62,"-":111,"dillontkh":84}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"public class Phone extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"        \"Phone numbers should only contain digits and have a minimum length of 1.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    public static final String MESSAGE_EXPECTED \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"        \"The phone number supplied does not appear to be from Singapore,\\nfor other types of numbers, \"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"            + \"please ensure that you have keyed it in correctly.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    public static final String EXPECTED_FORMAT_REGEX \u003d \"^[689]\\\\d{7}$\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    public static final String REQUIRED_REGEX \u003d \"^\\\\d+$\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        super(phone);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        return test.matches(REQUIRED_REGEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     * Determines if the phone value stored is of an expected format.","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     * @return true if the phone number is of an expected format, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    public boolean isExpectedFormat() {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        String phoneNumber \u003d this.getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        if (!phoneNumber.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"            return phoneNumber.matches(EXPECTED_FORMAT_REGEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the phone value stored is a match with a specified string.","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Returns true if specified value is a substring of the phone value stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().trim().toLowerCase().contains(other.trim().toLowerCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherPhone.getValue());","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":21,"jjchee77":22,"-":53}},{"path":"src/main/java/seedu/address/model/person/exceptions/AttributeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * Signals that the operation is unable to find the specified attribute.","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"public class AttributeNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":7}},{"path":"src/main/java/seedu/address/model/person/predicates/AddressContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Address} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class AddressContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Address}","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * contains a given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public AddressContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.ADDRESS);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/CombinedPredicates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * Defines a Predicate which combines multiple {@code SearchPredicates}.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class CombinedPredicates implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    private final SearchPredicate\u003c? extends Object\u003e[] predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    @SafeVarargs","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    public CombinedPredicates(SearchPredicate\u003c? extends Object\u003e... predicates) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"        return Arrays.stream(predicates).allMatch(predicate -\u003e predicate.test(person));","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        if (!(other instanceof CombinedPredicates)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates otherCombinedPredicate \u003d (CombinedPredicates) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        return Arrays.equals(predicates, otherCombinedPredicate.predicates);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"predicates\", predicates).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":45}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Email} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class EmailContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Email} contains","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * a given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public EmailContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.EMAIL);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/HeightContainsRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":" * Tests that a {@code Person}\u0027s {@code Height} falls within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"public class HeightContainsRangePredicate extends SearchPredicate\u003cPair\u003cFloat, Float\u003e\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Height} falls within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"     * @param range range to test against","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    public HeightContainsRangePredicate(Pair\u003cFloat, Float\u003e range) {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"        super(range, PersonAttribute.HEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(range);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        return new ToStringBuilder(this).add(\"height\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"ruijietay":27}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Name} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class NameContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Name} contains a","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public NameContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.NAME);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/NoteContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Note} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class NoteContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Note} contains a","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public NoteContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.NOTE);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} contains a given substring.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class PhoneContainsSubstringPredicate extends SearchPredicate\u003cString\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code Phone} contains","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * a given substring","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param substring Substring to test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public PhoneContainsSubstringPredicate(String substring) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"        super(substring, PersonAttribute.PHONE);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(substring);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"substring\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":27}},{"path":"src/main/java/seedu/address/model/person/predicates/SearchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * Defines a Predicate in which a {@code Person}\u0027s is to be searched by.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public abstract class SearchPredicate\u003cT extends Object\u003e implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    private final T searchValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    private final PersonAttribute attribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    protected SearchPredicate(T searchValue, PersonAttribute attribute) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        this.searchValue \u003d searchValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * Get the search value of this predicate","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * @return Search value of this predicate","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    protected T getSearchValue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        return this.searchValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        return person.getAttribute(this.attribute).isMatch(searchValue);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        if (!(other instanceof SearchPredicate\u003c?\u003e)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        SearchPredicate\u003c?\u003e otherSearchPredicate \u003d (SearchPredicate\u003c?\u003e) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        return searchValue.equals(otherSearchPredicate.searchValue);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"searchValue\", searchValue).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":54}},{"path":"src/main/java/seedu/address/model/person/predicates/TagSetContainsAllTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * Tests that a {@code Person}\u0027s {@code TagSet} contains any tags in a given","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" * TagSet.","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"public class TagSetContainsAllTagsPredicate extends SearchPredicate\u003cSet\u003cTag\u003e\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s {@code TagSet} contains","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     * any tags in a given TagSet.","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     * @param tags tags to test against","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    public TagSetContainsAllTagsPredicate(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"        super(tags, PersonAttribute.TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        return new ToStringBuilder(this).add(\"tagset\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":31}},{"path":"src/main/java/seedu/address/model/person/predicates/WeightMapContainsWeightRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person.PersonAttribute;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":" * Tests that a {@code Person}\u0027s latest weight value in {@code WeightMap}","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" * contains a weight within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"public class WeightMapContainsWeightRangePredicate extends SearchPredicate\u003cPair\u003cFloat, Float\u003e\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"     * Construct a predicate to test that a {@code Person}\u0027s latest weight value in {@code WeightMap}","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"     *  * contains a weight within a range specified by a Pair.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     * @param range range to test against","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public WeightMapContainsWeightRangePredicate(Pair\u003cFloat, Float\u003e range) {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        super(range, PersonAttribute.WEIGHT);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(range);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        return new ToStringBuilder(this).add(\"weightmap\", this.getSearchValue()).toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ruijietay":29}},{"path":"src/main/java/seedu/address/model/person/weight/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s weight in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"public class Weight extends Attribute\u003cFloat\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Weight value can only be a positive number.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:[0-9]+(?:\\\\.[0-9]*)?|\\\\.[0-9]+)?$\";","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"     * @param weight A weight.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public Weight(Float weight) {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        super(weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weight);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     * Returns true if a given string is a valid weight.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    public static boolean isValidWeight(String test) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"     * Determine if the weight value stored is within the range specified in weightRange.","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"     * Returns true if specified value is within weightRange.","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"     * @param weightRange Range of weight to check against.","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"     * @return True if value is falls within weightRange, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object weightRange) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        if (!(weightRange instanceof Pair)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        Pair\u003c?, ?\u003e pair \u003d (Pair\u003c?, ?\u003e) weightRange;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        if (!(pair.getKey() instanceof Float) || !(pair.getValue() instanceof Float)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        Float firstVal \u003d (Float) pair.getKey();","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        Float secondVal \u003d (Float) pair.getValue();","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assert (secondVal - firstVal \u003e\u003d 0) : \"Range should be more than or equals to zero.\"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"                + \"Should have been handled in Parser class\";","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        return (this.getValue() \u003e\u003d firstVal \u0026\u0026 this.getValue() \u003c\u003d secondVal);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles null types as well.","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Weight)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        Weight otherWeight \u003d (Weight) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        // Use the equals() method of the underlying attribute to compare values","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherWeight.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"ruijietay":88,"dillontkh":1}},{"path":"src/main/java/seedu/address/model/person/weight/WeightEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":" * Represents a Person\u0027s weight in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"public class WeightEntry extends Attribute\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code WeightEntry}.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"     * @param weightEntry A weight entry containing the date of the recorded weight.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    public WeightEntry(Map.Entry\u003cLocalDateTime, Weight\u003e weightEntry) {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        super(weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"     * Returns a {@code LocalDateTime} that is rounded down to the nearest second.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    public static LocalDateTime getTimeOfExecution() {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        return LocalDateTime.now().withNano(0);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object weightRange) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        return (this.equals(weightRange));","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles null types as well.","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Weight)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        Weight otherWeight \u003d (Weight) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        // Use the equals() method of the underlying attribute to compare values","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherWeight.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ruijietay":64}},{"path":"src/main/java/seedu/address/model/person/weight/WeightMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person.weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":" * Represents a map of date-weight values in the address book belonging to a Person.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"public class WeightMap extends Attribute\u003cNavigableMap\u003cLocalDateTime, Weight\u003e\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public static final String MESSAGE_EMPTY_WEIGHT_MAP \u003d \"There are no more weight values to be removed. \"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"            + \"This client has no more weight values associated with them.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code WeightMap}","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"     * @param weightMap Set of valid weights","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    public WeightMap(NavigableMap\u003cLocalDateTime, Weight\u003e weightMap) {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        super(weightMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        requireNonNull(weightMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"     * Returns an immutable weight map, which throws","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public NavigableMap\u003cLocalDateTime, Weight\u003e getValue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        return Collections.unmodifiableNavigableMap(super.getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"     * Determines if the weight values stored falls within the range specified.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"     * Returns true if any values in the weight map falls within the specified range.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"     * @return True if there exists a weight value that falls within the range, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        if (!(otherValue instanceof Pair)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        Pair\u003c?, ?\u003e pair \u003d (Pair\u003c?, ?\u003e) otherValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        if (!(pair.getKey() instanceof Float) || !(pair.getValue() instanceof Float)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        // Already checked that set contains Float objects, so it is safe to cast","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        Pair\u003cFloat, Float\u003e weightRange \u003d (Pair\u003cFloat, Float\u003e) otherValue;","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assert (weightRange.getValue() - weightRange.getKey() \u003e\u003d 0)","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"                : \"Range should be more than or equals to zero. Should have been handled in Parser class\";","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"        // If Person has no weights saved","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"        if (this.getValue().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"dillontkh"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        Float latestWeight \u003d this.getValue().lastEntry().getValue().getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        return (latestWeight \u003e\u003d weightRange.getKey()) \u0026\u0026 (latestWeight \u003c\u003d weightRange.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof WeightMap)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        WeightMap otherMap \u003d (WeightMap) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().equals(otherMap.getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ruijietay":87,"dillontkh":5}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * {@link #isValidTagName(String)}","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class Tag extends Attribute\u003cString\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"        super(tagName);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the tag value stored is a match with a specified string.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"     * Returns true if specified value is an exact match of the tag value stored (case-insensitive).","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Other value to check against","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isMatch(Object otherValue) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof String)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        String other \u003d (String) otherValue;","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"        return this.getValue().trim().equalsIgnoreCase(other.trim());","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherTag.getValue());","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().hashCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"dillontkh"},"content":"        return this.getValue();","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RyanNgWH":25,"-":54,"dillontkh":3}},{"path":"src/main/java/seedu/address/model/tag/TagSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * Represents a set of Tags in the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class TagSet extends Attribute\u003cSet\u003cTag\u003e\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * Constructs a {@code TagSet}","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     * @param tags Set of valid tags","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    public TagSet(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        super(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"        requireNonNull(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    public Set\u003cTag\u003e getValue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        return Collections.unmodifiableSet(super.getValue());","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the tags stored is a match with a tags specified.","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"     * Returns true if the other TagSet is a subset of this TagSet.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"     * @param other Other value to check against","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if specified value is a match, False otherwise","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public boolean isMatch(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        // Check that other is a Set","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        if (!(other instanceof Set\u003c?\u003e)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        Set\u003c?\u003e otherSet \u003d ((Set\u003c?\u003e) other);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // If the set is empty, the user has not specified any tags. Return true to not match by any tags.","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        if (otherSet.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        // Check that other is a Set of Tags","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        if (!(otherSet.iterator().next() instanceof Tag)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        // Already checked that set contains Tag objects, so it is safe to cast","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Set\u003cTag\u003e otherTags \u003d (Set\u003cTag\u003e) otherSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        return otherTags.stream().allMatch(tag -\u003e this.contains(tag));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     * Determine if the tagset contains the specified tag","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * @param otherValue Tag to check against","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"     * @return True if tagset contains the specified tag, false otherwise","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    public boolean contains(Object otherValue) {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        if (!(otherValue instanceof Tag)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        Tag other \u003d ((Tag) otherValue);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().stream().anyMatch(tag -\u003e tag.isMatch(other.getValue()));","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        if (!(other instanceof TagSet)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        TagSet otherTag \u003d (TagSet) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().equals(otherTag.getValue());","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        return this.getValue().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"RyanNgWH":88,"ruijietay":12}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getWeightMap(\"2024-03-27T10:15:30\u003d80f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"                    new Height(192.5f), new Note(\"Likes to swim\"), getTagSet(\"friends\")),","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 30 Lorong 3 Sgn Gardens, #07-18\"), getWeightMap(\"2023-04-21T10:12:12\u003d78f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"                    new Height(150f), new Note(\"Likes to swim\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getWeightMap(\"2023-06-20T10:15:30\u003d76f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"                    new Height(167.5f), new Note(\"Likes to swim\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"                    getWeightMap(\"2024-01-20T10:15:33\u003d69f\"), new Height(172.5f), new Note(\"Likes to swim\"),","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), getWeightMap(\"2023-04-21T10:11:30\u003d73.5f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"                    new Height(180.5f), new Note(\"Likes to swim\"), getTagSet(\"classmates\")),","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getWeightMap(\"2023-09-20T10:19:31\u003d71f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"                    new Height(170.5f), new Note(\"Likes to snitch\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"     * Returns a NavigableMap containing the list of LocalDateTime and Weight values given as strings.","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"    public static NavigableMap\u003cLocalDateTime, Weight\u003egetWeightMap(String... strings) {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        return Stream.of(strings)","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"                .map(str -\u003e str.split(\"\u003d\"))","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                .collect(Collectors.toMap(","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"                        arr -\u003e LocalDateTime.parse(arr[0].strip()),","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"                        arr -\u003e new Weight(Float.parseFloat(arr[1].strip())), (","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"                                existing, replacement) -\u003e existing,","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"                        TreeMap::new","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"                ));","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ruijietay":32,"-":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    private final List\u003cJsonAdaptedWeight\u003e weights \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    private final String height;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    private final String note;","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"            @JsonProperty(\"weights\") List\u003cJsonAdaptedWeight\u003e weights, @JsonProperty(\"height\") String height,","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            @JsonProperty(\"note\") String note, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        if (weights !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"            this.weights.addAll(weights);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d height;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        name \u003d source.getName().getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        phone \u003d source.getPhone().getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        email \u003d source.getEmail().getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        address \u003d source.getAddress().getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        weights.addAll(source.getWeights().entrySet().stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                .map(WeightEntry::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"                .map(JsonAdaptedWeight::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        height \u003d source.getHeight().getValue().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        note \u003d source.getNote().getValue();","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"     * {@code Person} object.","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     *                               the adapted person.","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedTag tag : this.tags) {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        final List\u003cWeightEntry\u003e personWeights \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedWeight weight : this.weights) {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"            personWeights.add(weight.toModelType());","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"        if (!email.isEmpty() \u0026\u0026 !Email.isValidEmail(email)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"        if (!address.isEmpty() \u0026\u0026 !Address.isValidAddress(address)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"        final NavigableMap\u003cLocalDateTime, Weight\u003e modelWeights \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"        for (JsonAdaptedWeight jsonAdaptedWeight : weights) {","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"            WeightEntry weightEntry \u003d jsonAdaptedWeight.toModelType();","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"            modelWeights.put(weightEntry.getValue().getKey(), weightEntry.getValue().getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"        if (height \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"        if (!height.isEmpty() \u0026\u0026 !Height.isValidHeight(height)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"            throw new IllegalValueException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"        final Height modelHeight \u003d new Height(Float.valueOf(height));","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelWeights,","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"                modelHeight, modelNote, modelTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RyanNgWH":8,"ruijietay":49,"jjchee77":2,"-":99}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"        tagName \u003d source.getValue();","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * {@code Tag} object.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     *                               the adapted tag.","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RyanNgWH":5,"-":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedWeight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":" * Jackson-friendly version of {@link Weight} with {@code LocalDateTime} as key.","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"class JsonAdaptedWeight {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    private final String weightDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    private final String weightValue;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"     * Constructs a {@code JsonAdaptedWeight} with the given {@code weightDate} and {@code weightValue}.","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public JsonAdaptedWeight(@JsonProperty(\"weightDate\") String weightDate,","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"                             @JsonProperty(\"weightValue\") String weightValue) {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        this.weightDate \u003d weightDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        this.weightValue \u003d weightValue;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public JsonAdaptedWeight(WeightEntry source) {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        this.weightDate \u003d source.getValue().getKey().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        this.weightValue \u003d source.getValue().getValue().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"     * Converts this Jackson-friendly adapted date-weight key-value pair into the model\u0027s","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"     * {@code Entry\u003cLocalDateTime, Weight\u003e} object.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"     *                               the adapted tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    public WeightEntry toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        if (!Weight.isValidWeight(this.weightValue)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        return new WeightEntry(new AbstractMap.SimpleEntry\u003c\u003e(","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                LocalDateTime.parse(this.weightDate), new Weight(Float.valueOf(this.weightValue))));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ruijietay":54}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     * Constructs a {@code JsonAddressBookStorage} with the given file path.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param filePath The file path to store the json formatted address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"        assert(filePath !\u003d null);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jjchee77":5,"-":80}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"     * Disables the command input field to prevent user input.","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"    public void freezeCommandBox() {","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"        commandTextField.setDisable(true);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        commandTextField.clear();","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"        commandTextField.setPromptText(\"Exiting...\");","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"bgopi23":9,"-":85}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import java.awt.Desktop;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import java.net.URI;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t17-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    public static final String[][] COMMAND_DESCRIPTIONS \u003d {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"        {\"help\", \"Shows this window.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        {\"add\", \"Adds a client to FitBook.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"        {\"list\", \"Shows a list of all clients saved in FitBook.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        {\"edit\", \"Edits an existing client in FitBook.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        {\"weight\", \"Adds a new weight value to a client.\"},","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        {\"note\", \"Adds a new note to a client.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"        {\"find\", \"Finds all clients whose specified attribute contains the specified keyword\"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"                + \" (Uses name attribute if none specified).\"},","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        {\"delete\", \"Deletes the specified client from FitBook.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        {\"clear\", \"Clears all entries from FitBook. USE WITH CAUTION.\"},","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        {\"exit\", \"Exits FitBook.\"}","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    };","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    private VBox helpMessageContainer;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    private boolean isDesktopBrowseActionSupported() {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        return Desktop.isDesktopSupported() \u0026\u0026 Desktop.getDesktop().isSupported(Desktop.Action.BROWSE);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"     * Opens user guide URL in user\u0027s default browser.","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"    private void openUrl() {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"            if (isDesktopBrowseActionSupported()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"                Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"                final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"                final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"                url.putString(USERGUIDE_URL);","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"                clipboard.setContent(url);","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"            logger.warning(\"Something went wrong when opening user guide URL.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"     * Initializes a new HelpWindow.","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"    public void initialize() {","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"        if (!isDesktopBrowseActionSupported()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"            copyButton.setText(\"Copy URL\");","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"        for (String[] command : COMMAND_DESCRIPTIONS) {","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"            String commandName \u003d command[0];","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"            String commandDescription \u003d command[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"            Label commandLabel \u003d new Label(commandName);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"            Label descriptionLabel \u003d new Label(commandDescription);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"            commandLabel.setPrefWidth(50);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"            HBox commandBox \u003d new HBox(10);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"            commandBox.getChildren().addAll(commandLabel, descriptionLabel);","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"            helpMessageContainer.getChildren().add(commandBox);","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"     *                               if this method is called on a thread other than","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"     *                               the JavaFX Application Thread.","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"     *                               if this method is called during animation or","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"     *                               layout processing.","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RyanNgWH":8,"bgopi23":1,"ruijietay":2,"jjchee77":54,"-":87,"dillontkh":5}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"    private PersonDetailsPanel personDetailsPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"    private StackPane personDetailsPanelPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"dillontkh"},"content":"        // Update the details panel when a Person in the list is selected.","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"dillontkh"},"content":"        personListPanel.addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"            // newValue can be null if the selection in the personListView is cleared","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"            if (newValue \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"                personDetailsPanel.clear();","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"                personDetailsPanel.update(newValue);","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"        });","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"dillontkh"},"content":"        // Update the details panel when the currently displayed Person is updated.","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"dillontkh"},"content":"        logic.getFilteredPersonList().addListener((ListChangeListener\u003c? super Person\u003e) c -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"dillontkh"},"content":"            while (c.next()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"dillontkh"},"content":"                // adding and editing of clients","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"dillontkh"},"content":"                if (c.wasAdded()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"dillontkh"},"content":"                    // When the address book is initialized, the AddedSubList will contain all clients.","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"dillontkh"},"content":"                    // Do not update the details panel in that case.","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"dillontkh"},"content":"                    // In all other cases when a person was added/edited, the list should be of size 1.","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"                    if (c.getAddedSize() \u003d\u003d 1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"                        Person p \u003d c.getAddedSubList().get(0);","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"dillontkh"},"content":"                        personDetailsPanel.update(p);","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"dillontkh"},"content":"                        // Select the person in the person list to ensure the details displayed is always the details","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"dillontkh"},"content":"                        // of the person selected in the person list.","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"dillontkh"},"content":"                        personListPanel.getFxmlObject().getSelectionModel().select(p);","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"dillontkh"},"content":"                    }","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"dillontkh"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"dillontkh"},"content":"        });","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":159,"author":{"gitId":"dillontkh"},"content":"        personDetailsPanel \u003d new PersonDetailsPanel();","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"dillontkh"},"content":"        personDetailsPanelPlaceholder.getChildren().add(personDetailsPanel.getRoot());","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":205,"author":{"gitId":"ruijietay"},"content":"        commandBox.freezeCommandBox();","lastModifiedDate":"2024-03-30"},{"lineNumber":206,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"ruijietay"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(2), exitEvent -\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"ruijietay"},"content":"        }));","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"ruijietay"},"content":"        timeline.play();","lastModifiedDate":"2024-03-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruijietay":12,"-":194,"dillontkh":40}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"    private ImageView qrcode;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    private Label note;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     * display.","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"        // Set fields with information from the person","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        name.setText(person.getName().toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        phone.setText(person.getPhone().toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"                .sorted(Comparator.comparing(Tag::toString))","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.toString())));","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"RyanNgWH":6,"ruijietay":2,"jjchee77":3,"-":50,"dillontkh":6}},{"path":"src/main/java/seedu/address/ui/PersonDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.WeightCommandMessages;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":" * A UI component that displays the details of a {@code Person}.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"public class PersonDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"    public static final String FXML \u003d \"PersonDetailsPanel.fxml\";","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PersonDetailsPanel.class);","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"    private Label name;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"    private Label id;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"    private Label phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"    private Label address;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"    private Label email;","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    private Label weightDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    private Label weightValue;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    private Label height;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"    private Label note;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    private ImageView qrcode;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"dillontkh"},"content":"     * Creates a new PersonDetailsPanel and clears all fields.","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"     * Labels in the {@code .FXML} file contain text with the field name for convenience.","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"    public PersonDetailsPanel() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"        super(FXML);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"        clear();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"     * Set fields with information from the person.","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"     * @param person the Person object containing the information to update the fields with.","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"    public void update(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"dillontkh"},"content":"        // Set fields with information from the person","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"dillontkh"},"content":"        name.setText(person.getName().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"        phone.setText(person.getPhone().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"dillontkh"},"content":"        address.setText(person.getAddress().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"dillontkh"},"content":"        email.setText(person.getEmail().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"dillontkh"},"content":"        // Clear tags and set new ones","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"dillontkh"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"        person.getTags().stream()","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"                .sorted(Comparator.comparing(Tag::toString))","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.toString())));","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        Optional\u003cMap.Entry\u003cLocalDateTime, Weight\u003e\u003e latestWeight \u003d person.getLatestWeight();","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        if (latestWeight.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"            weightDate.setText(WeightCommandMessages.EMPTY_FIELD_WEIGHT_DATE);","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"            weightValue.setText(WeightCommandMessages.EMPTY_FIELD_WEIGHT_VALUE);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"            weightDate.setText(WeightCommandMessages.WEIGHT_DATE_HEADER","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"                    + latestWeight.get().getKey().toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"            weightValue.setText(WeightCommandMessages.WEIGHT_VALUE_HEADER","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"                    + latestWeight.get().getValue().toString() + \" kg\");","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        height.setText(person.getHeight().getFormattedHeight());","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"dillontkh"},"content":"        note.setText(person.getNote().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"        qrcode.setImage(new Image(person.getQrCodePath().toUri().toString()));","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"dillontkh"},"content":"        // Bind manageability (presence) of node based on presence of value for optional fields","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"dillontkh"},"content":"        address.setVisible(!person.getAddress().getValue().isEmpty());","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"dillontkh"},"content":"        email.setVisible(!person.getEmail().getValue().isEmpty());","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"dillontkh"},"content":"        note.setVisible(!person.getNote().getValue().isEmpty());","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        weightDate.setVisible(!latestWeight.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"dillontkh"},"content":"        address.managedProperty().bind(address.visibleProperty());","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"        email.managedProperty().bind(email.visibleProperty());","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"        weightDate.managedProperty().bind(weightDate.visibleProperty());","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        weightValue.managedProperty().bind(weightValue.visibleProperty());","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        height.managedProperty().bind(height.visibleProperty());","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"dillontkh"},"content":"        note.managedProperty().bind(note.visibleProperty());","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"dillontkh"},"content":"        logger.info(\"Displayed details of person: \" + person);","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"dillontkh"},"content":"     * Clears all fields","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"dillontkh"},"content":"    public void clear() {","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"dillontkh"},"content":"        name.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"dillontkh"},"content":"        phone.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"dillontkh"},"content":"        address.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"dillontkh"},"content":"        email.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"dillontkh"},"content":"        note.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"        weightDate.setText(\"\");","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        weightValue.setText(\"\");","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        height.setText(\"\");","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"dillontkh"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"dillontkh"},"content":"        qrcode.setImage(null);","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ruijietay":28,"dillontkh":96}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"     * Adds a listener for the person list view.","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"    public void addListener(ChangeListener\u003cPerson\u003e listener) {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"        personListView.getSelectionModel().selectedItemProperty().addListener(listener);","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"    public ListView\u003cPerson\u003e getFxmlObject() {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"        return this.personListView;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":48,"dillontkh":12}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":350,"dillontkh":2}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":".label {","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":".button {","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"#helpWindowContainer {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jjchee77":6,"-":17}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"            \u003cHBox fx:id\u003d\"helpWindowContainer\" alignment\u003d\"CENTER\" spacing\u003d\"15.0\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"                    \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"                    \u003cLabel text\u003d\"${\u0027Available commands:\\n\u0027}\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"                    \u003cVBox fx:id\u003d\"helpMessageContainer\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"                    \u003cVBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"                        \u003cLabel text\u003d\"${\u0027\\nTo view more information about a specific command, enter the command into the input box and press \u0026lt;Enter\u0026gt;\u0027}\"\u003e\u003c/Label\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"                        \u003cLabel text\u003d\"${\u0027\\nNeed more help? Refer to the user guide at https://ay2324s2-cs2103t-t17-3.github.io/tp/UserGuide.html\u0027}\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"                \u003cAnchorPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUrl\"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"                            text\u003d\"Open User Guide\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"ruijietay":2,"jjchee77":15,"-":28,"dillontkh":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"         title\u003d\"FitBook\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"                   minHeight\u003d\"120\" prefHeight\u003d\"120\" maxHeight\u003d\"120\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"            \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"                          \u003cVBox fx:id\u003d\"personList\" maxWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"                   \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"                  \u003cStackPane fx:id\u003d\"personDetailsPanelPlaceholder\" alignment\u003d\"TOP_RIGHT\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"               \u003c/children\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bgopi23":1,"-":54,"dillontkh":13}},{"path":"src/main/resources/view/PersonDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"\u003cVBox fx:id\u003d\"detailsPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"      \u003cGridPane alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"         \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"            \u003cColumnConstraints hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"         \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"         \u003crowConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"         \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"            \u003cVBox minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"                  \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"name\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"                  \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"                  \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"phone\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"                  \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"address\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"                  \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"email\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"                  \u003cLabel fx:id\u003d\"weightValue\" styleClass\u003d\"cell_small_label\" text\u003d\"weightValue\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"                  \u003cLabel fx:id\u003d\"weightDate\" styleClass\u003d\"cell_small_label\" text\u003d\"weightDate\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"                  \u003cLabel fx:id\u003d\"height\" styleClass\u003d\"cell_small_label\" text\u003d\"height\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"                  \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"note\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"               \u003c/children\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"                  \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"            \u003cImageView fx:id\u003d\"qrcode\" fitHeight\u003d\"150.0\" fitWidth\u003d\"150.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"RIGHT\" GridPane.valignment\u003d\"TOP\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ruijietay":3,"dillontkh":43}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"70.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"0.5\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bgopi23":2,"-":28,"dillontkh":8}},{"path":"src/test/java/seedu/address/QrCodeGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"package seedu.address;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"import com.google.zxing.WriterException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"import seedu.address.logic.QrCodeGenerator;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"class QrCodeGeneratorTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"    void generateQrCode_validPerson_success() throws IOException, WriterException {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"        QrCodeGenerator.generateQrCode(ALICE);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"        assertTrue(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"    void getQrCodePath_validPerson_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"        Path path \u003d QrCodeGenerator.getQrCodePath(ALICE);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"        String expected \u003d Paths.get(QrCodeGenerator.QR_CODE_FOLDER.toString(), ALICE.hashCode() + \".png\").toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"        assertEquals(expected, path.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"dillontkh":31}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.condition.EnabledOnOs;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.condition.OS;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    @EnabledOnOs({ OS.WINDOWS })","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    public void isWindows() {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(AppUtil.OS.isWindows());","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    @EnabledOnOs({ OS.MAC })","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    public void isMac() {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(AppUtil.OS.isMac());","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    @EnabledOnOs({ OS.LINUX })","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    public void isLinux() {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(AppUtil.OS.isLinux());","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"RyanNgWH":21,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ListCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"        assertCommandException(deleteCommand, String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(listCommand, ListCommandMessages.MESSAGE_NO_CLIENTS_TO_LIST, model);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"        String addCommand \u003d AddCommandMessages.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bgopi23":9,"ruijietay":2,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"                String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"                AddCommandMessages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bgopi23":3,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        Person validPerson \u003d new PersonBuilder().withTags(\"friend\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        assertEquals(String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"    public void execute_personAcceptedByModel_addSuccessfulWithNote() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        Person validPerson \u003d new PersonBuilder().withNote(\"friend\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"        assertEquals(String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"    public void execute_personAcceptedByModel_addSuccessfulWithEmptyEmail() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"        Person validPerson \u003d new PersonBuilder().withEmail(\"\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"        assertEquals(String.format(AddCommandMessages.MESSAGE_SUCCESS, validPerson.getFormattedMessage()),","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        assertThrows(CommandException.class, AddCommandMessages.MESSAGE_DUPLICATE_PERSON, (","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"        ) -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bgopi23":27,"-":203}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ClearCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommandMessages.MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"    public void execute_nonEmptyAddressBookConfirmed_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommandMessages.MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"    public void execute_nonEmptyAddressBookUnconfirmed_confirmMessage() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ClearCommand(false), model, ClearCommandMessages.MESSAGE_CONFIRM,","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bgopi23":7,"-":29,"dillontkh":8}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_PHONE_ALICE \u003d \"94351253\";","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_PHONE_AMY \u003d \"87382918\";","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_PHONE_BOB \u003d \"98302172\";","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_EMAIL_EMPTY \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"    public static final String VALID_ADDRESS_EMPTY \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    public static final Float VALID_WEIGHT_AMY \u003d 170f;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    public static final Float VALID_WEIGHT_BOB \u003d 180f;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    public static final Float VALID_HEIGHT_AMY \u003d 60f;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    public static final String VALID_NOTE_BOB \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    public static final String VALID_NOTE_AMY \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    public static final String VALID_NOTE_NOT_EMPTY \u003d \"valid note\";","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"    public static final String EMAIL_DESC_EMPTY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"    public static final String ADDRESS_DESC_EMPTY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    public static final String WEIGHT_DESC_AMY \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    public static final String HEIGHT_DESC_AMY \u003d \" \" + PREFIX_HEIGHT + VALID_HEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    public static final String NOTE_DESC_AMY \u003d \" \" + PREFIX_NOTE + VALID_NOTE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"    public static final String NOTE_DESC_BOB \u003d \" \" + PREFIX_NOTE + VALID_NOTE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"    public static final String PREAMBLE_EMPTY \u003d \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"                .withNote(VALID_NOTE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"                .withNote(VALID_NOTE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"     * Convenience wrapper to","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"        model.updateFilteredPersonList(new NameContainsSubstringPredicate(person.getName().getValue()));","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RyanNgWH":11,"ruijietay":16,"jjchee77":10,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(DeleteCommandMessages.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"               personToDelete.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(deleteCommand, model, String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(DeleteCommandMessages.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"                personToDelete.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(deleteCommand, model, String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bgopi23":8,"-":113,"dillontkh":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).withNote(VALID_NOTE_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                .withPhone(VALID_PHONE_BOB).withNote(VALID_NOTE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(EditCommandMessages.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(editCommand, model, EditCommandMessages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(editCommand, model, EditCommandMessages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(editCommand, model, String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"bgopi23"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(editCommand, model, String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"bgopi23"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"dillontkh"},"content":"        assertFalse(standardCommand.equals(new ClearCommand(true)));","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"bgopi23":12,"ruijietay":3,"-":172,"dillontkh":5}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        // different weight -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withWeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        // different height -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withHeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNote(VALID_NOTE_BOB + \" DIFF_NOTE\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"                + editPersonDescriptor.getWeight().orElse(null) + \", weight\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"                + editPersonDescriptor.getHeight().orElse(null) + \", height\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"                + editPersonDescriptor.getNote().orElse(null) + \", note\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ruijietay":17,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.ExitCommandMessages.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bgopi23":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_NO_CLIENTS_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_ONE_CLIENT_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.FindCommandMessages.MESSAGE_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AddressContainsSubstringPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.EmailContainsSubstringPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NoteContainsSubstringPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.TagSetContainsAllTagsPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":" * {@code FindCommand}.","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate firstPredicate \u003d new NameContainsSubstringPredicate(\"Alex\");","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate secondPredicate \u003d new NameContainsSubstringPredicate(\"Chris\");","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate firstPredicateClone \u003d new NameContainsSubstringPredicate(\"Alex\");","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(new CombinedPredicates(firstPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(new CombinedPredicates(secondPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(new CombinedPredicates(firstPredicateClone));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchEmpty_allPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 7);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        EmailContainsSubstringPredicate emailPredicate \u003d new EmailContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        AddressContainsSubstringPredicate addressPredicate \u003d new AddressContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate tagsPredicate \u003d new TagSetContainsAllTagsPredicate(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        // Empty name","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        // Empty phone","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(phonePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        // Empty email","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(emailPredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        // Empty address","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(addressPredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        // Empty tags","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(tagsPredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"        // Empty note","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(notePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"        // Empty multiple","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(namePredicate, phonePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(getTypicalAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchName_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchName_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new NameContainsSubstringPredicate(\"meier\");","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchPhone_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate predicate \u003d new PhoneContainsSubstringPredicate(\"11111111\");","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchPhone_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate predicate \u003d new PhoneContainsSubstringPredicate(\"9435\");","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new PhoneContainsSubstringPredicate(\"9482\");","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchEmail_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"        EmailContainsSubstringPredicate predicate \u003d new EmailContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchEmail_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"        EmailContainsSubstringPredicate predicate \u003d new EmailContainsSubstringPredicate(\"johnd\");","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 7);","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new EmailContainsSubstringPredicate(\"example.com\");","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchAddress_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"RyanNgWH"},"content":"        AddressContainsSubstringPredicate predicate \u003d new AddressContainsSubstringPredicate(\"Republic City\");","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchAddress_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"RyanNgWH"},"content":"        AddressContainsSubstringPredicate predicate \u003d new AddressContainsSubstringPredicate(\"tokyo\");","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new AddressContainsSubstringPredicate(\"street\");","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchTags_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":237,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"Enemies\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":243,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchSingleTag_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":253,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":254,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"owesmoney\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":257,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":258,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":259,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":261,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":262,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":264,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new TagSetContainsAllTagsPredicate(new HashSet\u003c\u003e(Arrays.asList(new Tag(\"friends\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":266,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":267,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":268,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":269,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":270,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":271,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":272,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":273,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchMultipleTags_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":274,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":275,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":276,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":277,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":278,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"owesmoney\"), new Tag(\"friends\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":279,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":280,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":281,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":282,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":283,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":284,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":285,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":286,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":287,"author":{"gitId":"dillontkh"},"content":"    public void execute_searchPartialTag_noPersonsFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":288,"author":{"gitId":"dillontkh"},"content":"        // No persons found","lastModifiedDate":"2024-03-28"},{"lineNumber":289,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":290,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":291,"author":{"gitId":"dillontkh"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-28"},{"lineNumber":292,"author":{"gitId":"dillontkh"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"fri\"))));","lastModifiedDate":"2024-03-28"},{"lineNumber":293,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":294,"author":{"gitId":"dillontkh"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-28"},{"lineNumber":295,"author":{"gitId":"dillontkh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":296,"author":{"gitId":"dillontkh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":297,"author":{"gitId":"dillontkh"},"content":"        assertEquals(Arrays.asList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":298,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":299,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":300,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":301,"author":{"gitId":"dillontkh"},"content":"    public void execute_searchCaseInsensitiveTag_personsFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":302,"author":{"gitId":"dillontkh"},"content":"        // No persons found","lastModifiedDate":"2024-03-28"},{"lineNumber":303,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":304,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":305,"author":{"gitId":"dillontkh"},"content":"        TagSetContainsAllTagsPredicate predicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-28"},{"lineNumber":306,"author":{"gitId":"dillontkh"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"FrIenDs\"))));","lastModifiedDate":"2024-03-28"},{"lineNumber":307,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":308,"author":{"gitId":"dillontkh"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-28"},{"lineNumber":309,"author":{"gitId":"dillontkh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":310,"author":{"gitId":"dillontkh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":311,"author":{"gitId":"dillontkh"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":312,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":313,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":314,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":315,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchNote_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":316,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":317,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate predicate \u003d new NoteContainsSubstringPredicate(\"enemy\");","lastModifiedDate":"2024-03-19"},{"lineNumber":318,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":319,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":320,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":321,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":324,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":325,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchNote_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":326,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":327,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":328,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate predicate \u003d new NoteContainsSubstringPredicate(\"love\");","lastModifiedDate":"2024-03-19"},{"lineNumber":329,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":330,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":331,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":332,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":333,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":334,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":335,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":336,"author":{"gitId":"RyanNgWH"},"content":"        predicate \u003d new NoteContainsSubstringPredicate(\"best\");","lastModifiedDate":"2024-03-19"},{"lineNumber":337,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(predicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":338,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":339,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":340,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":341,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":342,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":343,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":344,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchMultiple_noPersonsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":345,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_CLIENTS_FOUND);","lastModifiedDate":"2024-03-27"},{"lineNumber":346,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":347,"author":{"gitId":"RyanNgWH"},"content":"        // All mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":348,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(\"enemy\");","lastModifiedDate":"2024-03-19"},{"lineNumber":349,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":350,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":351,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(notePredicate, namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":352,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":353,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(notePredicate, namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":354,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-03-19"},{"lineNumber":355,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":356,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":357,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":358,"author":{"gitId":"RyanNgWH"},"content":"        // Some match, some mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":359,"author":{"gitId":"RyanNgWH"},"content":"        notePredicate \u003d new NoteContainsSubstringPredicate(\"best\");","lastModifiedDate":"2024-03-19"},{"lineNumber":360,"author":{"gitId":"RyanNgWH"},"content":"        namePredicate \u003d new NameContainsSubstringPredicate(\"alonica\");","lastModifiedDate":"2024-03-19"},{"lineNumber":361,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":362,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(notePredicate, namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":363,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":364,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(notePredicate, namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":365,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-03-19"},{"lineNumber":366,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":367,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":368,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":369,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":370,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":371,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_searchMultiple_personsFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":372,"author":{"gitId":"RyanNgWH"},"content":"        // Single person found","lastModifiedDate":"2024-03-19"},{"lineNumber":373,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_CLIENT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":374,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":375,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(\"best\");","lastModifiedDate":"2024-03-19"},{"lineNumber":376,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":377,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":378,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(notePredicate, namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":379,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":380,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand command \u003d new FindCommand(new CombinedPredicates(notePredicate, namePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":381,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-03-19"},{"lineNumber":382,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":383,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":384,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":385,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple persons found","lastModifiedDate":"2024-03-19"},{"lineNumber":386,"author":{"gitId":"bgopi23"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":387,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":388,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate tagsPredicate \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":389,"author":{"gitId":"RyanNgWH"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(\"friends\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":390,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"8765\");","lastModifiedDate":"2024-03-19"},{"lineNumber":391,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":392,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(tagsPredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":393,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":394,"author":{"gitId":"RyanNgWH"},"content":"        command \u003d new FindCommand(new CombinedPredicates(tagsPredicate, phonePredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":395,"author":{"gitId":"RyanNgWH"},"content":"        expectedModel.updateFilteredPersonList(combinedPredicates);","lastModifiedDate":"2024-03-19"},{"lineNumber":396,"author":{"gitId":"RyanNgWH"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":397,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":398,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":399,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":402,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"Fiona\");","lastModifiedDate":"2024-03-16"},{"lineNumber":403,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":404,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findCommand \u003d new FindCommand(combinedPredicates);","lastModifiedDate":"2024-03-16"},{"lineNumber":405,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicates\u003d\" + combinedPredicates + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RyanNgWH":286,"bgopi23":28,"-":68,"dillontkh":26}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.HelpCommandMessages.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bgopi23":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithNothing;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithSinglePerson;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.ListCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"    private Model emptyModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"    private Model expectedEmptyModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"    private Model singlePersonModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"    private Model expectedSinglePersonModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"        emptyModel \u003d new ModelManager(getTypicalAddressBookWithNothing(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"        singlePersonModel \u003d new ModelManager(getTypicalAddressBookWithSinglePerson(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"        expectedSinglePersonModel \u003d new ModelManager(singlePersonModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"        expectedEmptyModel \u003d new ModelManager(emptyModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"        int listSize \u003d expectedModel.getFilteredPersonList().size();","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_ALL_CLIENTS_LISTED, listSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"    public void execute_emptyList_showsNothing() {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_NO_CLIENTS_TO_LIST);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ListCommand(), emptyModel, expectedMessage, expectedEmptyModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"    public void execute_singlePersonList_showsEverything() {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_ONE_CLIENT_LISTED);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ListCommand(), singlePersonModel, expectedMessage, expectedSinglePersonModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"        int listSize \u003d expectedModel.getFilteredPersonList().size();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(ListCommandMessages.MESSAGE_ALL_CLIENTS_LISTED, listSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bgopi23":28,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithoutEmail;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"class NoteCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    private static final String NOTE_STUB \u003d \"Some note\";","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    private static final String EMPTY_NOTE \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"    private Model modelWithoutEmail \u003d new ModelManager(getTypicalAddressBookWithoutEmail(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public void execute_addNoteUnfilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(NOTE_STUB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().getValue()));","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(NoteCommandMessages.MESSAGE_ADD_NOTE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    public void execute_deleteNoteUnfilteredList_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(EMPTY_NOTE).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().getValue()));","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(NoteCommandMessages.MESSAGE_DELETE_NOTE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"    public void execute_addNoteUnfilteredListWithoutEmail_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"        Person firstPerson \u003d modelWithoutEmail.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(NOTE_STUB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().getValue()));","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"        String expectedMessage \u003d String.format(NoteCommandMessages.MESSAGE_ADD_NOTE_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"dillontkh"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(modelWithoutEmail.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"        assertCommandSuccess(noteCommand, modelWithoutEmail, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(invalidIndex, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"        assertCommandFailure(noteCommand, model, String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"                NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"bgopi23"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"bgopi23"},"content":"        NoteCommand firstNote \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"        NoteCommand secondNote \u003d new NoteCommand(INDEX_SECOND_PERSON, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"bgopi23"},"content":"        NoteCommand firstNoteClone \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(NOTE_STUB));","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        // same object \u003d\u003e return true","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"bgopi23"},"content":"        assertEquals(firstNote, firstNote);","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"bgopi23"},"content":"        // same note details \u003d\u003e return true","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"        assertEquals(firstNote, firstNoteClone);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        // same note, different person \u003d\u003e return false","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        assertNotEquals(firstNote, secondNote);","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"bgopi23"},"content":"        // note not equal to number \u003d\u003e return false","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"bgopi23"},"content":"        assertNotEquals(firstNote, 10);","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"RyanNgWH":8,"bgopi23":49,"ruijietay":47,"dillontkh":3}},{"path":"src/test/java/seedu/address/logic/commands/WeightCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_INDEX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithoutEmail;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.WeightCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"class WeightCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    private static final String WEIGHT_STUB \u003d \"2024-01-20T10:15:33\u003d169f\";","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    private Model modelWithoutEmail \u003d new ModelManager(getTypicalAddressBookWithoutEmail(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public void execute_addWeightUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withWeights(WEIGHT_STUB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"                new WeightEntry(editedPerson.getLatestWeight().get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        String expectedMessage \u003d String.format(WeightCommandMessages.MESSAGE_ADD_WEIGHT_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(weightCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"    public void execute_deleteWeightUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withWeights().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(INDEX_FIRST_PERSON, new WeightEntry(","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"                new AbstractMap.SimpleEntry\u003c\u003e(WeightEntry.getTimeOfExecution(), new Weight(0f))));","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        String expectedMessage \u003d String.format(WeightCommandMessages.MESSAGE_DELETE_WEIGHT_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"               editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(weightCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"    public void execute_addWeightUnfilteredListWithoutEmail_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        Person firstPerson \u003d modelWithoutEmail.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withWeights(WEIGHT_STUB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                new WeightEntry(editedPerson.getLatestWeight().get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        String expectedMessage \u003d String.format(WeightCommandMessages.MESSAGE_ADD_WEIGHT_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"                editedPerson.getFormattedMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(modelWithoutEmail.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        assertCommandSuccess(weightCommand, modelWithoutEmail, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"        WeightEntry weightEntry \u003d new WeightEntry(","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"                new AbstractMap.SimpleEntry\u003c\u003e(WeightEntry.getTimeOfExecution(), new Weight(180f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        WeightCommand weightCommand \u003d new WeightCommand(invalidIndex, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        assertCommandFailure(weightCommand, model, MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        WeightEntry weightEntry \u003d new WeightEntry(","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"                new AbstractMap.SimpleEntry\u003c\u003e(WeightEntry.getTimeOfExecution(), new Weight(180f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        WeightCommand firstWeight \u003d new WeightCommand(INDEX_FIRST_PERSON, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"        WeightCommand secondWeight \u003d new WeightCommand(INDEX_SECOND_PERSON, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        WeightCommand firstWeightClone \u003d new WeightCommand(INDEX_FIRST_PERSON, weightEntry);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        // same weight \u003d\u003e return true","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        assertEquals(firstWeight, firstWeight);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        // same weight details \u003d\u003e return true","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        assertEquals(firstWeight, firstWeightClone);","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"        // same weight but different person \u003d\u003e return false","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        assertNotEquals(firstWeight, secondWeight);","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":113}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_EMPTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_EMPTY;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_PARAMETER_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_NAME_PARAMETER_MISSING;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_NO_PARAMETERS;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_PHONE_PARAMETER_MISSING;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                + ADDRESS_DESC_BOB + NOTE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"                        + NOTE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"                + ADDRESS_DESC_BOB + NOTE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"        // multiple notes","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, NOTE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NOTE));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"                        + NAME_DESC_AMY + ADDRESS_DESC_AMY + NOTE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE, PREFIX_NOTE));","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"        // no email","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withEmail(\"\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"jjchee77"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_EMPTY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"                + NOTE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"        // no address","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withAddress(\"\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_EMPTY","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"                + NOTE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"                        + NOTE_DESC_AMY,","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"        // preamble and phone number e.g (add lala p/98989898)","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_PARAMETER_FORMAT, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"        // missing phone prefix e.g (add n/John)","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_PHONE_PARAMETER_MISSING, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"        // missing name prefix e.g (add p/99998989)","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB,","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_NAME_PARAMETER_MISSING, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"        // all prefixes missing e.g (add name 99898888)","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_PARAMETER_FORMAT, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_PARAMETER_FORMAT, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"bgopi23"},"content":"        // empty preamble (add)","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, PREAMBLE_EMPTY,","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_NO_PARAMETERS, AddCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bgopi23":21,"ruijietay":17,"jjchee77":15,"-":151}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ClearCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.ExitCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.HelpCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AddressContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.EmailContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.HeightContainsRangePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NoteContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.TagSetContainsAllTagsPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.WeightMapContainsWeightRangePredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assertTrue(parser.parseCommand(ClearCommandMessages.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        assertTrue(parser.parseCommand(ClearCommandMessages.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"                DeleteCommandMessages.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommandMessages.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        assertTrue(parser.parseCommand(ExitCommandMessages.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        assertTrue(parser.parseCommand(ExitCommandMessages.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"                FindCommandMessages.COMMAND_WORD + \" \" + PREFIX_NAME + \"Alex\");","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"Alex\");","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        EmailContainsSubstringPredicate emailPredicate \u003d new EmailContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        AddressContainsSubstringPredicate addressPredicate \u003d new AddressContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"        WeightMapContainsWeightRangePredicate weightPredicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"                new WeightMapContainsWeightRangePredicate(new Pair\u003c\u003e(0f, Float.MAX_VALUE));","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"        HeightContainsRangePredicate heightPredicate \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"                new HeightContainsRangePredicate(new Pair\u003c\u003e(0f, Float.MAX_VALUE));","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        NoteContainsSubstringPredicate notePredicate \u003d new NoteContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        TagSetContainsAllTagsPredicate tagsPredicate \u003d new TagSetContainsAllTagsPredicate(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"                namePredicate, phonePredicate, emailPredicate, addressPredicate,","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"                weightPredicate, heightPredicate, notePredicate, tagsPredicate));","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        assertTrue(parser.parseCommand(HelpCommandMessages.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        assertTrue(parser.parseCommand(HelpCommandMessages.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"                        HelpCommandMessages.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"RyanNgWH":18,"ruijietay":28,"-":82}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.DeleteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"        // (delete)","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, \"\", String.format(Messages.MESSAGE_NO_INDEX,","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"                DeleteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"bgopi23":11,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.EditCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        // no index specified (edit one name)","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, VALID_NAME_AMY,","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        // no field specified (edit 1)","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"1\", String.format(EditCommandMessages.MESSAGE_NOT_EDITED,","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"        // no index and no field specified (edit)","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"\", String.format(Messages.MESSAGE_NO_INDEX,","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY,","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY,","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"1 random\",","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"1 i/ string\",","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NOTE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"                .withNote(VALID_NOTE_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"ruijietay"},"content":"        // weight","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"ruijietay"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withWeight(VALID_WEIGHT_AMY).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"ruijietay"},"content":"        // height","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + HEIGHT_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"ruijietay"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withHeight(VALID_HEIGHT_AMY).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"ruijietay"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"ruijietay"},"content":"        // note","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + NOTE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"ruijietay"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNote(VALID_NOTE_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"ruijietay"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":211,"author":{"gitId":"ruijietay"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"ruijietay"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + WEIGHT_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"ruijietay"},"content":"                + HEIGHT_DESC_AMY + NOTE_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"ruijietay"},"content":"                + WEIGHT_DESC_AMY + HEIGHT_DESC_AMY + NOTE_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"ruijietay"},"content":"                + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + WEIGHT_DESC_AMY + HEIGHT_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"ruijietay"},"content":"                + NOTE_DESC_AMY + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":219,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_WEIGHT, PREFIX_HEIGHT,","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"ruijietay"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NOTE));","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":223,"author":{"gitId":"ruijietay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_WEIGHT, PREFIX_HEIGHT,","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"ruijietay"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NOTE));","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ruijietay":59,"-":178}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.FindCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.AddressContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.CombinedPredicates;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.EmailContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.HeightContainsRangePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.NoteContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.PhoneContainsSubstringPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.predicates.TagSetContainsAllTagsPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.WeightMapContainsWeightRangePredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private static final String NAME \u003d \"Alice\";","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private static final String PHONE \u003d \"11111111\";","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private static final String EMAIL \u003d \"test@example.com\";","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    private static final String ADDRESS \u003d \"street\";","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    private static final String WEIGHT_RANGE \u003d \"0, 1000\";","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    private static final String HEIGHT_RANGE \u003d \"0, 500\";","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    private static final String NOTE \u003d \"best\";","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    private static final String TAG \u003d \"friends\";","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    private static final NameContainsSubstringPredicate NAME_PREDICATE \u003d new NameContainsSubstringPredicate(NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    private static final PhoneContainsSubstringPredicate PHONE_PREDICATE \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"            PHONE);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    private static final EmailContainsSubstringPredicate EMAIL_PREDICATE \u003d new EmailContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"            EMAIL);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    private static final AddressContainsSubstringPredicate ADDRESS_PREDICATE \u003d new AddressContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"            ADDRESS);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"    private static final WeightMapContainsWeightRangePredicate WEIGHT_PREDICATE \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"            new WeightMapContainsWeightRangePredicate(new Pair\u003c\u003e(0f, 1000f));","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"    private static final HeightContainsRangePredicate HEIGHT_PREDICATE \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"            new HeightContainsRangePredicate(new Pair\u003c\u003e(0f, 500f));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    private static final NoteContainsSubstringPredicate NOTE_PREDICATE \u003d new NoteContainsSubstringPredicate(NOTE);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    private static final TagSetContainsAllTagsPredicate TAGS_PREDICATE \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"            new HashSet\u003cTag\u003e(Arrays.asList(new Tag(TAG))));","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    private static final NameContainsSubstringPredicate NAME_PREDICATE_EMPTY \u003d new NameContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"            \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    private static final PhoneContainsSubstringPredicate PHONE_PREDICATE_EMPTY \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"            \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    private static final EmailContainsSubstringPredicate EMAIL_PREDICATE_EMPTY \u003d new EmailContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"            \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    private static final AddressContainsSubstringPredicate ADDRESS_PREDICATE_EMPTY \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"            new AddressContainsSubstringPredicate(\"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    private static final WeightMapContainsWeightRangePredicate WEIGHT_PREDICATE_EMPTY \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"            new WeightMapContainsWeightRangePredicate(new Pair\u003c\u003e(0f, Float.MAX_VALUE));","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"    private static final HeightContainsRangePredicate HEIGHT_PREDICATE_EMPTY \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"            new HeightContainsRangePredicate(new Pair\u003c\u003e(0f, Float.MAX_VALUE));","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    private static final NoteContainsSubstringPredicate NOTE_PREDICATE_EMPTY \u003d new NoteContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"            \"\");","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    private static final TagSetContainsAllTagsPredicate TAGS_PREDICATE_EMPTY \u003d new TagSetContainsAllTagsPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"            new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_nameFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_NAME, NAME), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_NAME, NAME), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_phoneFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_PHONE, PHONE), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_PHONE, PHONE), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_emailFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_EMAIL, EMAIL), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_EMAIL, EMAIL), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_addressFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE,","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_ADDRESS, ADDRESS), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_ADDRESS, ADDRESS), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_noteFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_NOTE, NOTE), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_NOTE, NOTE), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"    public void parse_weightFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"ruijietay"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_WEIGHT, WEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_WEIGHT, WEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"ruijietay"},"content":"    public void parse_heightFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"ruijietay"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"ruijietay"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_HEIGHT, HEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"ruijietay"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_HEIGHT, HEIGHT_RANGE), expectedCommand);","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_tagFieldPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE_EMPTY, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"ruijietay"},"content":"                ADDRESS_PREDICATE_EMPTY, WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"ruijietay"},"content":"                NOTE_PREDICATE_EMPTY, TAGS_PREDICATE));","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s\", PREFIX_TAG, TAG), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n\", PREFIX_TAG, TAG), expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_multipleFieldsPresent_returnsFindCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"                NAME_PREDICATE, PHONE_PREDICATE, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s %s%s\", PREFIX_NAME, NAME, PREFIX_PHONE, PHONE),","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"RyanNgWH"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"        // multiple whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, String.format(\" %s%s \\n %s%s\", PREFIX_NAME, NAME, PREFIX_PHONE, PHONE),","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":196,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"ruijietay"},"content":"     * Tests for valid searching even when no prefix is specified for searching via a certain attribute.","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"ruijietay"},"content":"     * This would default to searching via the {@code Name} attribute.","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"bgopi23"},"content":"    public void parse_noAttributeSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"bgopi23"},"content":"        CombinedPredicates expectedPredicates \u003d new CombinedPredicates(NAME_PREDICATE, PHONE_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"ruijietay"},"content":"                EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY, WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"ruijietay"},"content":"                NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY);","lastModifiedDate":"2024-03-30"},{"lineNumber":205,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(expectedPredicates);","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":207,"author":{"gitId":"bgopi23"},"content":"        assertParseSuccess(parser, NAME, expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":208,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":209,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":211,"author":{"gitId":"bgopi23"},"content":"    public void parse_preambleWithTagSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":212,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-24"},{"lineNumber":213,"author":{"gitId":"bgopi23"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-24"},{"lineNumber":214,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE));","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":216,"author":{"gitId":"bgopi23"},"content":"        assertParseSuccess(parser, String.format(\"%s %s%s\", NAME, PREFIX_TAG, TAG),","lastModifiedDate":"2024-03-24"},{"lineNumber":217,"author":{"gitId":"bgopi23"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":218,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":219,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":220,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":221,"author":{"gitId":"bgopi23"},"content":"    public void parse_preambleWithEmailSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"bgopi23"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE, ADDRESS_PREDICATE_EMPTY,","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"bgopi23"},"content":"        assertParseSuccess(parser, String.format(\"%s %s%s\", NAME, PREFIX_EMAIL, EMAIL),","lastModifiedDate":"2024-03-24"},{"lineNumber":227,"author":{"gitId":"bgopi23"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":228,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":229,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":230,"author":{"gitId":"bgopi23"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":231,"author":{"gitId":"bgopi23"},"content":"    public void parse_preambleWithAddressSpecified_returnsFindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"bgopi23"},"content":"        FindCommand expectedCommand \u003d new FindCommand(new CombinedPredicates(","lastModifiedDate":"2024-03-24"},{"lineNumber":233,"author":{"gitId":"bgopi23"},"content":"                NAME_PREDICATE, PHONE_PREDICATE_EMPTY, EMAIL_PREDICATE_EMPTY, ADDRESS_PREDICATE,","lastModifiedDate":"2024-03-24"},{"lineNumber":234,"author":{"gitId":"ruijietay"},"content":"                WEIGHT_PREDICATE_EMPTY, HEIGHT_PREDICATE_EMPTY, NOTE_PREDICATE_EMPTY, TAGS_PREDICATE_EMPTY));","lastModifiedDate":"2024-03-31"},{"lineNumber":235,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":236,"author":{"gitId":"bgopi23"},"content":"        assertParseSuccess(parser, String.format(\"%s %s%s\", NAME, PREFIX_ADDRESS, ADDRESS),","lastModifiedDate":"2024-03-24"},{"lineNumber":237,"author":{"gitId":"bgopi23"},"content":"                expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":238,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"RyanNgWH":109,"bgopi23":35,"ruijietay":67,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/NoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_NOT_EMPTY;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"import static seedu.address.logic.messages.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"import seedu.address.logic.messages.NoteCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"public class NoteCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    private NoteCommandParser parser \u003d new NoteCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"        // no index specified (note John)","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        assertParseFailure(parser, VALID_NOTE_NOT_EMPTY,","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"                        NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"        // no index and no field specified (note)","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, \"\", String.format(Messages.MESSAGE_NO_INDEX,","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"                NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"        // negative index (note -5 n/John)","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY,","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"        // zero index (note 0 n/John)","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY,","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"                String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"        // invalid index (note -5)","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"        assertParseFailure(parser, \"-5\",","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"                        NoteCommandMessages.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_NOTE_NOT_EMPTY;","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(targetIndex, new Note(VALID_NOTE_NOT_EMPTY));","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_missingNote_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        String userInput \u003d String.format(\"%s\", targetIndex.getOneBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(targetIndex, new Note(\"\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"RyanNgWH":17,"bgopi23":18,"ruijietay":34}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_FIRST_PHONE \u003d \"88\";","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_SECOND_PHONE \u003d \"90\";","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_THIRD_PHONE \u003d \"38\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_QUARTER_FOURTH_PHONE \u003d \"27\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_HALF_FIRST_PHONE \u003d \"8890\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_HALF_SECOND_PHONE \u003d \"3827\";","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    private static final String VALID_PHONE \u003d \"88903827\";","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"    public void parsePhone_validValueWithMiddleWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"        String phoneWithWhitespace \u003d VALID_HALF_FIRST_PHONE + WHITESPACE + VALID_HALF_SECOND_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"    public void parsePhone_validValueWithMiddleWhitespaces_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"        String phoneWithWhitespace \u003d VALID_QUARTER_FIRST_PHONE + WHITESPACE + VALID_QUARTER_SECOND_PHONE + WHITESPACE","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"            + VALID_QUARTER_THIRD_PHONE + WHITESPACE + VALID_QUARTER_FOURTH_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"    public void parsePhone_validValueWithTrailingWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(Optional.of(INVALID_ADDRESS)));","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(Optional.of(VALID_ADDRESS)));","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(Optional.of(addressWithWhitespace)));","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(Optional.of(INVALID_EMAIL)));","lastModifiedDate":"2024-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(Optional.of(VALID_EMAIL)));","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"jjchee77"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(Optional.of(emailWithWhitespace)));","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jjchee77":28,"-":183}},{"path":"src/test/java/seedu/address/logic/parser/WeightCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_INDEX_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_INVALID_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.messages.WeightCommandMessages.MESSAGE_NO_PARAMETER_WEIGHT;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"public class WeightCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    private WeightCommandParser parser \u003d new WeightCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, VALID_WEIGHT_BOB.toString(),","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_PARAMETER_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        // no index and no field specified (note)","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"\", MESSAGE_NO_PARAMETER_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"-5\" + VALID_WEIGHT_AMY,","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"0\" + VALID_WEIGHT_BOB,","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertParseFailure(parser, \"-5\",","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"                MESSAGE_INVALID_INDEX_WEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"ruijietay":36}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.predicates.NameContainsSubstringPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        String name \u003d ALICE.getName().getValue();","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        modelManager.updateFilteredPersonList(new NameContainsSubstringPredicate(name));","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ruijietay":3,"-":128}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        Address address \u003d new Address(\"51 Clementi Road\");","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"51 Clementi Road\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        // Substring whole word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"Clementi\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"Clem\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\"clem\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(address.isMatch(\" 51 Clementi Road\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(address.isMatch(\"street\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(address.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":26,"-":50}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        Email email \u003d new Email(\"valid@example.com\");","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\"valid@example.com\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\"valid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\"VALID\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(email.isMatch(\" valid@example.com\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(email.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(email.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":23,"-":82}},{"path":"src/test/java/seedu/address/model/person/HeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"public class HeightTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Height(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        Height height \u003d new Height(92.5f);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.equals(new Height(92.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.equals(height));","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.equals(\"hello\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.equals(new Height(69.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        Height height \u003d new Height(192.5f);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        // Exact range -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.isMatch(new Pair\u003cFloat, Float\u003e(192.5f, 192.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        // Falls within range -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        assertTrue(height.isMatch(new Pair\u003cFloat, Float\u003e(190f, 200f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // Falls outside of range -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(180f, 190f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        // Incorrect generic types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", \"bar\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Object\u003e(180f, \"bar\")));","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", 180f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        // Null pair -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(null, null)));","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        // Either value is null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(190f, null)));","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assertFalse(height.isMatch(new Pair\u003cFloat, Float\u003e(null, 200f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"ruijietay":64}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        Name name \u003d new Name(\"Wendy Son\");","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\"Wendy Son\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\"Wen\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\"wendy\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(name.isMatch(\" Wendy Son\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(name.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(name.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":23,"-":60}},{"path":"src/test/java/seedu/address/model/person/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"public class NoteTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        Note note \u003d new Note(\"Valid Note\");","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.equals(new Note(\"Valid Note\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.equals(note));","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.equals(5.0f));","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.equals(new Note(\"Other Valid Note\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        Note note \u003d new Note(\"Likes to eat\");","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"Likes to eat\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        // Substring whole word -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"Likes\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"Lik\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        // Substring case mismatch -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\"lik\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertTrue(note.isMatch(\" Likes to eat\\n\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.isMatch(\"run\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        // Different type","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        assertFalse(note.isMatch(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ruijietay":62}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        // validating against ALICE","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        // all attributes same, different object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        // same name and same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        editedAlice \u003d new PersonBuilder(BOB).withName(VALID_NAME_ALICE).withPhone(ALICE.getPhone().getValue())","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        // all attributes different -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        // same name different phone, all other attributes same -\u003e false","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        // different name same phone, all other attributes same -\u003e false","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"        // different name and phone, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", note\u003d\" + ALICE.getNote()","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"dillontkh"},"content":"     * Generate a QR code using the ALICE instance and verify its existence.","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"dillontkh"},"content":"    void generateQrCode_validPerson_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"dillontkh"},"content":"        ALICE.generateQrCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"dillontkh"},"content":"        assertTrue(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"dillontkh"},"content":"     * Delete the QR code using the ALICE instance and verify its absence.","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"dillontkh"},"content":"    void deleteQrCode_qrCodeExists_returnsTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"        ALICE.generateQrCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"        boolean result \u003d ALICE.deleteQrCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"        assertTrue(result);","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"        assertFalse(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"dillontkh"},"content":"     * Delete the QR code using the ALICE instance and verify its absence.","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"dillontkh"},"content":"    void deleteQrCode_qrCodeDoesNotExist_returnsFalse() {","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"dillontkh"},"content":"        ALICE.deleteQrCode(); // To delete the one generated","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"dillontkh"},"content":"        boolean result \u003d ALICE.deleteQrCode(); // Try to delete a non-existent QR code","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"dillontkh"},"content":"        assertFalse(result);","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"        assertFalse(ALICE.getQrCodePath().toFile().exists());","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"RyanNgWH":1,"ruijietay":2,"jjchee77":20,"-":88,"dillontkh":33}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Phone.isValidPhone(\"+193121534\")); // with \u0027+\u0027 symbol","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Phone.isValidPhone(\"(193)121534\")); // with \u0027(\u0027 and \u0027)\u0027 symbol","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        assertFalse(Phone.isValidPhone(\"193-121534\")); // with \u0027-\u0027 symbol","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"1\")); // one digit","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"12\")); // one digit","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"12345678901234567890\")); // twenty digits","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        assertTrue(Phone.isValidPhone(\"123456789012345678901\")); // twenty-one digits","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    public void isExpectedFormat() {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        Phone phone \u003d new Phone(\"58909832\"); // exactly 8 numbers but does not start with \u00276\u0027, \u00278\u0027 or \u00279\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"78909832\"); // exactly 8 numbers but does not start with \u00276\u0027, \u00278\u0027 or \u00279\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"909828\"); // less than 8 digits","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"909828910\"); // more than 8 digits","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"67392810\"); // exactly 8 numbers and start with \u00276\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"87392810\"); // exactly 8 digits and start with \u00278\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        phone \u003d new Phone(\"93121534\"); // exactly 8 digits and start with \u00279\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.isExpectedFormat());","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        Phone phone \u003d new Phone(\"88888888\");","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        assertTrue(phone.equals(new Phone(\"88888888\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        assertFalse(phone.equals(new Phone(\"98888888\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        Phone phone \u003d new Phone(\"92345678\");","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(phone.isMatch(\"92345678\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        // Substring partial word -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(phone.isMatch(\"9234\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(phone.isMatch(\" 92345678\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(phone.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(phone.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RyanNgWH":19,"jjchee77":31,"-":57}},{"path":"src/test/java/seedu/address/model/person/WeightMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.tag.TagSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"public class WeightMapTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    private static LocalDateTime timeStub \u003d WeightEntry.getTimeOfExecution();","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    private static Weight weightStub \u003d new Weight(182f);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        TreeMap\u003cLocalDateTime, Weight\u003e treeMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        treeMap.put(timeStub, weightStub);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        WeightMap weightMap \u003d new WeightMap(treeMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        // Exact range -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weightMap.isMatch(new Pair\u003c\u003e(182f, 182f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        // Falls within range -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weightMap.isMatch(new Pair\u003c\u003e(180f, 185f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        // Falls outside of range -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003c\u003e(160f, 169f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        // Incorrect generic types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", \"bar\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Object\u003e(182f, \"bar\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cObject, Float\u003e(\"foo\", 182f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        // Null pair -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Float\u003e(null, null)));","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        // Either value is null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Float\u003e(180f, null)));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weightMap.isMatch(new Pair\u003cFloat, Float\u003e(null, 180f)));","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        Tag loverTag \u003d new Tag(\"lover\");","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        Tag invalidTag \u003d new Tag(\"invalid\");","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        Set\u003cTag\u003e testSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(friendTag, loverTag));","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        TagSet tagSet \u003d new TagSet(testSet);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        // Same tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        assertTrue(tagSet.equals(tagSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        // Different tagset, same values","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        assertTrue(tagSet.equals(new TagSet(testSet)));","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        // Empty tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e())));","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        // Partial tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003cTag\u003e(Arrays.asList(loverTag)))));","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"        // Additional tag in tagset","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e(Arrays.asList(friendTag, loverTag, invalidTag)))));","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ruijietay":79}},{"path":"src/test/java/seedu/address/model/person/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"public class WeightTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weight(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        Weight weight \u003d new Weight(182f);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.equals(new Weight(182f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.equals(weight));","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.equals(\"hello\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.equals(new Weight(69.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        Height weight \u003d new Height(92.5f);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        // Exact range -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.isMatch(new Pair\u003cFloat, Float\u003e(92.5f, 92.5f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        // Falls within range -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        assertTrue(weight.isMatch(new Pair\u003cFloat, Float\u003e(90f, 100f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        // Falls outside of range -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(80f, 90f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        // Incorrect generic types -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", \"bar\")));","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Object\u003e(80f, \"bar\")));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cObject, Object\u003e(\"foo\", 80f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        // Null pair -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(null, null)));","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        // Either value is null -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(90f, null)));","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        assertFalse(weight.isMatch(new Pair\u003cFloat, Float\u003e(null, 100f)));","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ruijietay":65}},{"path":"src/test/java/seedu/address/model/person/predicates/CombinedPredicatesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public class CombinedPredicatesTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    public void test_singlePredicate_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public void test_singlePredicate_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate predicate \u003d new NameContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    public void test_multiplePredicates_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"                PersonBuilder.DEFAULT_PHONE);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    public void test_multiplePredicates_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        // All mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicate \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        // Some match, some mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        namePredicate \u003d new NameContainsSubstringPredicate(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        phonePredicate \u003d new PhoneContainsSubstringPredicate(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicate.test(person));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicate \u003d new NameContainsSubstringPredicate(\"Alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicate \u003d new PhoneContainsSubstringPredicate(\"11111111\");","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        NameContainsSubstringPredicate namePredicateClone \u003d new NameContainsSubstringPredicate(\"Alice\");","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        PhoneContainsSubstringPredicate phonePredicateClone \u003d new PhoneContainsSubstringPredicate(\"11111111\");","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        // Itself","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        CombinedPredicates combinedPredicates \u003d new CombinedPredicates(namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicates.equals(combinedPredicates));","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        // Single predicate - Valid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicates.equals(new CombinedPredicates(namePredicateClone)));","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple predicate - Valid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(combinedPredicates.equals(new CombinedPredicates(namePredicateClone, phonePredicateClone)));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        // Single predicate - Invalid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(namePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicates.equals(new CombinedPredicates(phonePredicate)));","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple predicate - Invalid equality (partial)","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        combinedPredicates \u003d new CombinedPredicates(namePredicate, phonePredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicates.equals(new CombinedPredicates(namePredicate)));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple predicate - Invalid equality","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(combinedPredicates","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"                .equals(new CombinedPredicates(namePredicate, new PhoneContainsSubstringPredicate(\"invalid\"))));","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"RyanNgWH":100}},{"path":"src/test/java/seedu/address/model/tag/TagSetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class TagSetTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        Tag loverTag \u003d new Tag(\"lover\");","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        Tag invalidTag \u003d new Tag(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"        Integer notSet \u003d 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"        Set\u003cInteger\u003e setOfNotTags \u003d new HashSet\u003c\u003e(Arrays.asList(notSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"        Set\u003cTag\u003e testSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(friendTag, loverTag));","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"        TagSet tagSet \u003d new TagSet(testSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        // Same tags - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(testSet));","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"        // No tags - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(new HashSet\u003c\u003e()));","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        // Single tag - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(friendTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple tags - Match","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(loverTag, friendTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        // Single tag - Mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(invalidTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        // Multiple tag - Partial match","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.isMatch(new HashSet\u003cTag\u003e(Arrays.asList(loverTag, invalidTag))));","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"        // Not a Set - Mismatch","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"        assertFalse(tagSet.isMatch(notSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"        // Not a Set of Tags - Mismatch","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"        assertFalse(tagSet.isMatch(setOfNotTags));","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        Tag loverTag \u003d new Tag(\"lover\");","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        Tag invalidTag \u003d new Tag(\"invalid\");","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        Set\u003cTag\u003e testSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(friendTag, loverTag));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        TagSet tagSet \u003d new TagSet(testSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        // Same tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.equals(tagSet));","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        // Different tagset, same values","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tagSet.equals(new TagSet(testSet)));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        // Empty tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e())));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        // Partial tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003cTag\u003e(Arrays.asList(loverTag)))));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        // Additional tag in tagset","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tagSet.equals(new TagSet(new HashSet\u003c\u003e(Arrays.asList(friendTag, loverTag, invalidTag)))));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"RyanNgWH":67,"dillontkh":8}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public void isMatch() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        Tag tag \u003d new Tag(\"Lover\");","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        // Exact match -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tag.isMatch(\"Lover\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"        // Case-insensitive match -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"        assertTrue(tag.isMatch(\"lOvEr\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"        // Substring partial word -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"        assertFalse(tag.isMatch(\"Love\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        // Additional whitespace","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        assertTrue(tag.isMatch(\" Lover\\n\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        // Substring mismatch","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tag.isMatch(\"invalid\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        // Different type","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        assertFalse(tag.isMatch(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"dillontkh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"        Tag tag1 \u003d new Tag(\"taggy1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"        Tag tag2 \u003d new Tag(\"taggy1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"        Integer fakeTag \u003d 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"        assertEquals(tag1, tag2);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"        assertNotEquals(tag1, fakeTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"RyanNgWH":20,"-":26,"dillontkh":18}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    private static final String INVALID_WEIGHT \u003d \"onesixzero\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    private static final String INVALID_HEIGHT \u003d \"tenkilos\";","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    private static final List\u003cJsonAdaptedWeight\u003e VALID_WEIGHTS \u003d BENSON.getWeights().entrySet().stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"            .map(WeightEntry::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            .map(JsonAdaptedWeight::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    private static final String VALID_WEIGHT \u003d BENSON.getHeight().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_WEIGHTS,","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"                        VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"                VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"                VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"                VALID_ADDRESS, VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"                null, VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"    public void toModelType_invalidWeight_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        List\u003cJsonAdaptedWeight\u003e invalidWeights \u003d new ArrayList\u003c\u003e(VALID_WEIGHTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"        invalidWeights.add(new JsonAdaptedWeight(WeightEntry.getTimeOfExecution().toString(), INVALID_WEIGHT));","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"                        invalidWeights, VALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"    public void toModelType_invalidHeight_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"                        VALID_WEIGHTS, INVALID_WEIGHT, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"    public void toModelType_nullHeight_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"ruijietay"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"ruijietay"},"content":"                        VALID_WEIGHTS, null, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"ruijietay"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"ruijietay"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"ruijietay"},"content":"                        VALID_WEIGHTS, VALID_WEIGHT, VALID_NOTE, invalidTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruijietay":50,"-":107}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * {@code person}\u0027s details","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        descriptor.setWeight(person.getLatestWeight().get().getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        descriptor.setHeight(person.getHeight());","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.setNote(person.getNote());","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Weight} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"     * building.","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"    public EditPersonDescriptorBuilder withWeight(Float weight) {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"        descriptor.setWeight(new Weight(weight));","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Height} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"     * building.","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"    public EditPersonDescriptorBuilder withHeight(Float height) {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"        descriptor.setHeight(new Height(height));","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the {@code Note} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"     * building.","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"    public EditPersonDescriptorBuilder withNote(String note) {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        descriptor.setNote(new Note(note));","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"     * {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"RyanNgWH":15,"ruijietay":29,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Height;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.Weight;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"import seedu.address.model.person.weight.WeightEntry;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    public static final Weight DEFAULT_WEIGHT \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            new Weight(182f);","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    public static final Float DEFAULT_HEIGHT \u003d 92.5f;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    private NavigableMap\u003cLocalDateTime, Weight\u003e weights;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    private Height height;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    private Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"        this.name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        this.phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        this.email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        this.address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        this.weights.put(WeightEntry.getTimeOfExecution(), DEFAULT_WEIGHT);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d new Height(DEFAULT_HEIGHT);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        this.name \u003d personToCopy.getName();","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        this.phone \u003d personToCopy.getPhone();","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"        this.email \u003d personToCopy.getEmail();","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"        this.address \u003d personToCopy.getAddress();","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d new TreeMap\u003c\u003e(personToCopy.getWeights());","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d personToCopy.getHeight();","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d personToCopy.getNote();","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        this.tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Weight} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"    public PersonBuilder withWeights(String... weights) {","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"        this.weights \u003d SampleDataUtil.getWeightMap(weights);","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Height} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"    public PersonBuilder withHeight(Float height) {","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"        this.height \u003d new Height(height);","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"ruijietay"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"ruijietay"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"ruijietay"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"ruijietay"},"content":"        return this;","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"ruijietay"},"content":"     * Creates a new {@code Person} instance.","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":142,"author":{"gitId":"ruijietay"},"content":"        return new Person(this.name, this.phone, this.email, this.address,","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"ruijietay"},"content":"                this.weights, this.height, this.note, this.tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"RyanNgWH":3,"ruijietay":59,"-":84}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import seedu.address.logic.messages.AddCommandMessages;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        return AddCommandMessages.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_NAME + person.getName().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        sb.append(PREFIX_WEIGHT + person.getLatestWeight().get().getValue().toString() + \" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        sb.append(PREFIX_HEIGHT + person.getHeight().getValue().toString() + \" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        sb.append(PREFIX_NOTE + person.getNote().getValue() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.getValue() + \" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * Returns the part of command string for the given","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.getValue()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        descriptor.getWeight().ifPresent(weight -\u003e sb.append(PREFIX_WEIGHT).append(weight.getValue()).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        descriptor.getHeight().ifPresent(height -\u003e sb.append(PREFIX_HEIGHT).append(height.getValue()).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        descriptor.getNote().ifPresent(note -\u003e sb.append(PREFIX_NOTE).append(note.getValue()).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.getValue()).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"RyanNgWH":14,"ruijietay":10,"-":48}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":" * tests.","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            .withNote(\"Best friend\")","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            .withWeights(\"2024-01-20T10:15:33\u003d85f\")","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"            .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            .withWeights(\"2023-02-22T13:11:32\u003d83f\")","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"            .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"            .withNote(\"Best man\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822240\")","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824279\")","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withNote(\"lover\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824428\")","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824240\")","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821310\")","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"    public static final Person ALICE_WITHOUT_EMAIL \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"            .withAddress(\"\").withEmail(\"\")","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"            .withTags()","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"            .withNote(\"Best friend\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"    public static final Person BENSON_WITHOUT_EMAIL \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"            .withAddress(\"\")","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"            .withEmail(\"\").withPhone(\"98765432\")","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"            .withTags().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"    private TypicalPersons() {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":96,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"bgopi23"},"content":"    public static AddressBook getTypicalAddressBookWithoutEmail() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"bgopi23"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"        for (Person person : getTypicalPersonsWithoutEmail()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"bgopi23"},"content":"        return ab;","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"bgopi23"},"content":"    public static AddressBook getTypicalAddressBookWithSinglePerson() {","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"bgopi23"},"content":"        for (Person person : getSingleTypicalPerson()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"bgopi23"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"bgopi23"},"content":"        return ab;","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"bgopi23"},"content":"    public static AddressBook getTypicalAddressBookWithNothing() {","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"bgopi23"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"bgopi23"},"content":"        for (Person person : getEmptyTypicalPerson()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"bgopi23"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"bgopi23"},"content":"        return ab;","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"bgopi23"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsWithoutEmail() {","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"bgopi23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITHOUT_EMAIL, BENSON_WITHOUT_EMAIL));","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"bgopi23"},"content":"    public static List\u003cPerson\u003e getSingleTypicalPerson() {","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"bgopi23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITHOUT_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"bgopi23"},"content":"    public static List\u003cPerson\u003e getEmptyTypicalPerson() {","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"bgopi23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList());","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"RyanNgWH":12,"bgopi23":47,"ruijietay":6,"jjchee77":3,"-":64}}]
