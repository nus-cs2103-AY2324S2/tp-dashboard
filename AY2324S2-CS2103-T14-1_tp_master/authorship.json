[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-T14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103-T14-1/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"# EduConnect","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"* EduConnect is a contact management program for Teaching Assistants (TAs) in SoC, NUS to manage their classes and","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"  students effectively.","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"* It manages the student\u0027s particulars, timetables, and class progress, all in one program.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"* EduConnect is optimized for those who prefer to work with a Command Line Interface (CLI) while still having a simple","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"  and clean Graphical User Interface (GUI).","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"## Site Map","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"* [User Guide](docs/UserGuide.md)","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"* [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"* [About Us](docs/AboutUs.md)","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"fy17ohhh":1,"marclamp":22,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"mainClassName \u003d \u0027educonnect.Main\u0027","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"    archiveFileName \u003d \u0027educonnect.jar\u0027","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fy17ohhh":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"### Damith C. Rajapakse","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"\u003cimg src\u003d\"images/damithc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"[[github](https://github.com/damithc)]","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"### Darryl Chan","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"\u003cimg src\u003d\"images/darryl-chan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"[[github](http://github.com/darryl-chan)]","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"[[portfolio](team/darryl-chan.md)]","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"* Role: Developer","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"### Shang Feiyang","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"\u003cimg src\u003d\"images/fy17ohhh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"[[github](http://github.com/fy17ohhh)]","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"[[portfolio](team/feiyang.md)]","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"* Role: Developer","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"* Responsibilities: Team Lead + UI","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"tanjiajiajun"},"content":"### Tan Jia Jun","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"tanjiajiajun"},"content":"\u003cimg src\u003d\"images/tanjiajiajun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"tanjiajiajun"},"content":"[[github](https://github.com/tanjiajiajun)] [[portfolio](team/jiajun.md)]","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"### Jeremiah Lim Zhi Zhong","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"\u003cimg src\u003d\"images/jeremiahlzz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"[[github](http://github.com/jeremiahlzz)]","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"[[portfolio](team/jeremiah.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"### Marcus Lam","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"\u003cimg src\u003d\"images/marclamp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"[[github](http://github.com/marclamp)]","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"[[portfolio](team/marcuslam.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"* Responsibilities: Documentation + Code Quality","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"matthewken19"},"content":"### Matthew Elmer Ken","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"matthewken19"},"content":"\u003cimg src\u003d\"images/matthewken19.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"matthewken19"},"content":"[[github](http://github.com/matthewken19)]","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"matthewken19"},"content":"[[portfolio](team/matthewken19.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"matthewken19"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"darryl-chan":8,"fy17ohhh":5,"marclamp":8,"tanjiajiajun":3,"jeremiahlzz":5,"-":44,"matthewken19":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"# EduConnect Developer Guide","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103-T14-1/tp/blob/master/src/main/java/educonnect/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103-T14-1/tp/blob/master/src/main/java/educonnect/ui/Ui.java)","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103-T14-1/tp/blob/master/src/main/java/educonnect/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103-T14-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103-T14-1/tp/blob/master/src/main/java/educonnect/logic/Logic.java)","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"fy17ohhh"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103-T14-1/tp/blob/master/src/main/java/educonnect/model/Model.java)","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"fy17ohhh"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103-T14-1/tp/blob/master/src/main/java/educonnect/storage/Storage.java)","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"tanjiajiajun"},"content":"* Teaching Assistants, managing one or more classes.","lastModifiedDate":"2024-03-07"},{"lineNumber":278,"author":{"gitId":"tanjiajiajun"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2024-03-07"},{"lineNumber":279,"author":{"gitId":"tanjiajiajun"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"tanjiajiajun"},"content":"**Value proposition**: Our app helps you, an active TA, manage contact details of students in both big or small tutorial","lastModifiedDate":"2024-03-07"},{"lineNumber":282,"author":{"gitId":"tanjiajiajun"},"content":"classes. Keep track of student progress, access links to their projects, or simply de-conflict class schedules.","lastModifiedDate":"2024-03-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person             |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person              | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC1 - Import students from local file**","lastModifiedDate":"2024-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"tanjiajiajun"},"content":"Actor: TA","lastModifiedDate":"2024-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"tanjiajiajun"},"content":"**MSS:**","lastModifiedDate":"2024-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":310,"author":{"gitId":"tanjiajiajun"},"content":"1. TA enters import command with the specified file location","lastModifiedDate":"2024-03-02"},{"lineNumber":311,"author":{"gitId":"tanjiajiajun"},"content":"2. EduConnect imports all student contact info from the file","lastModifiedDate":"2024-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":313,"author":{"gitId":"tanjiajiajun"},"content":"**Extensions:**","lastModifiedDate":"2024-03-02"},{"lineNumber":314,"author":{"gitId":"tanjiajiajun"},"content":"* 1a. EduConnect cannot find the file with specified location","lastModifiedDate":"2024-03-02"},{"lineNumber":315,"author":{"gitId":"tanjiajiajun"},"content":"* 1a1. EduConnect outputs error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":317,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":319,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC2 - Adding a class of students (tagged by class)**","lastModifiedDate":"2024-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":321,"author":{"gitId":"tanjiajiajun"},"content":"**Actor: TA**","lastModifiedDate":"2024-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":323,"author":{"gitId":"tanjiajiajun"},"content":"**MSS:**","lastModifiedDate":"2024-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":325,"author":{"gitId":"tanjiajiajun"},"content":"1. TA enters command to add student S1 with class A tag","lastModifiedDate":"2024-03-02"},{"lineNumber":326,"author":{"gitId":"tanjiajiajun"},"content":"2. EduConnect creates student S1","lastModifiedDate":"2024-03-02"},{"lineNumber":327,"author":{"gitId":"tanjiajiajun"},"content":"3. TA repeats step 1 for all students to be added under class A","lastModifiedDate":"2024-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"tanjiajiajun"},"content":"**Extensions:**","lastModifiedDate":"2024-03-02"},{"lineNumber":332,"author":{"gitId":"tanjiajiajun"},"content":"* 1a. EduConnect detects an invalid student ID, email, etc.","lastModifiedDate":"2024-03-02"},{"lineNumber":333,"author":{"gitId":"tanjiajiajun"},"content":"* 1a1. EduConnect informs TA of the invalid field entered.","lastModifiedDate":"2024-03-02"},{"lineNumber":334,"author":{"gitId":"tanjiajiajun"},"content":"* 1a2. TA enters new student data.","lastModifiedDate":"2024-03-02"},{"lineNumber":335,"author":{"gitId":"tanjiajiajun"},"content":"* 1a3. Steps 1a1-1a2 are repeated until the student is added successfully.","lastModifiedDate":"2024-03-02"},{"lineNumber":336,"author":{"gitId":"tanjiajiajun"},"content":"* 1a4. Use case resumes from step 3.","lastModifiedDate":"2024-03-02"},{"lineNumber":337,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":338,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":339,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":340,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":341,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC3 - Giving reminders for an assignment due**","lastModifiedDate":"2024-03-02"},{"lineNumber":342,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":343,"author":{"gitId":"tanjiajiajun"},"content":"**Actor: TA**","lastModifiedDate":"2024-03-02"},{"lineNumber":344,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":345,"author":{"gitId":"tanjiajiajun"},"content":"**MSS:**","lastModifiedDate":"2024-03-02"},{"lineNumber":346,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":347,"author":{"gitId":"tanjiajiajun"},"content":"1. TA enters a command to filter addresses by tags","lastModifiedDate":"2024-03-02"},{"lineNumber":348,"author":{"gitId":"tanjiajiajun"},"content":"2. EduConnect returns addresses with the filtered tags","lastModifiedDate":"2024-03-02"},{"lineNumber":349,"author":{"gitId":"tanjiajiajun"},"content":"3. TA copies the returned addresses, paste the addresses in the email and sends the reminder for assignment submission","lastModifiedDate":"2024-03-02"},{"lineNumber":350,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":351,"author":{"gitId":"tanjiajiajun"},"content":"**Extensions:**","lastModifiedDate":"2024-03-02"},{"lineNumber":352,"author":{"gitId":"tanjiajiajun"},"content":"* 2a. EduConnect detects no known tags","lastModifiedDate":"2024-03-02"},{"lineNumber":353,"author":{"gitId":"tanjiajiajun"},"content":"* 2a1. EduConnect outputs no known tags error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":354,"author":{"gitId":"tanjiajiajun"},"content":"* 2a2. User enters new tags.","lastModifiedDate":"2024-03-02"},{"lineNumber":355,"author":{"gitId":"tanjiajiajun"},"content":"* Steps 2a1-2a2 are repeated until the tags entered are correct or the user decides to stop.","lastModifiedDate":"2024-03-02"},{"lineNumber":356,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":357,"author":{"gitId":"tanjiajiajun"},"content":"Use Case ends","lastModifiedDate":"2024-03-02"},{"lineNumber":358,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":359,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":360,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":361,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC4 - List all student contacts in a tutorial class**","lastModifiedDate":"2024-03-02"},{"lineNumber":362,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":363,"author":{"gitId":"tanjiajiajun"},"content":"**Actor: TA**","lastModifiedDate":"2024-03-02"},{"lineNumber":364,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":365,"author":{"gitId":"tanjiajiajun"},"content":"**MSS:**","lastModifiedDate":"2024-03-02"},{"lineNumber":366,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":367,"author":{"gitId":"tanjiajiajun"},"content":"1. TA enters filter command with specified tutorial class name","lastModifiedDate":"2024-03-02"},{"lineNumber":368,"author":{"gitId":"tanjiajiajun"},"content":"2. Educonnect returns list of all students  in the tutorial class","lastModifiedDate":"2024-03-02"},{"lineNumber":369,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":370,"author":{"gitId":"tanjiajiajun"},"content":"**Extensions:**","lastModifiedDate":"2024-03-02"},{"lineNumber":371,"author":{"gitId":"tanjiajiajun"},"content":"* 1a. The tutorial class name is not valid","lastModifiedDate":"2024-03-02"},{"lineNumber":372,"author":{"gitId":"tanjiajiajun"},"content":"* 1a1. EduConnect outputs error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":373,"author":{"gitId":"tanjiajiajun"},"content":"* 1b. EduConnect detects an error in the command format","lastModifiedDate":"2024-03-02"},{"lineNumber":374,"author":{"gitId":"tanjiajiajun"},"content":"* 1b1. EduConnect outputs error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":375,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":376,"author":{"gitId":"tanjiajiajun"},"content":"Use Case ends","lastModifiedDate":"2024-03-02"},{"lineNumber":377,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":378,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":379,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":380,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC5 - Delete students from existing contacts in a tutorial class**","lastModifiedDate":"2024-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"tanjiajiajun"},"content":"**Actor: TA**","lastModifiedDate":"2024-03-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"tanjiajiajun"},"content":"**MSS:**","lastModifiedDate":"2024-03-02"},{"lineNumber":385,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":386,"author":{"gitId":"tanjiajiajun"},"content":"1. TA enters the remove command to delete an existing student info in a tutorial class","lastModifiedDate":"2024-03-02"},{"lineNumber":387,"author":{"gitId":"tanjiajiajun"},"content":"2. EduConnect returns the deleted student name and id","lastModifiedDate":"2024-03-02"},{"lineNumber":388,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":389,"author":{"gitId":"tanjiajiajun"},"content":"**Extensions:**","lastModifiedDate":"2024-03-02"},{"lineNumber":390,"author":{"gitId":"tanjiajiajun"},"content":"* 1a. The student is not in the tutorial class","lastModifiedDate":"2024-03-02"},{"lineNumber":391,"author":{"gitId":"tanjiajiajun"},"content":"* 1a1. EduConnect outputs error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":392,"author":{"gitId":"tanjiajiajun"},"content":"* 1b. EduConnect detects an error in the command format","lastModifiedDate":"2024-03-02"},{"lineNumber":393,"author":{"gitId":"tanjiajiajun"},"content":"* 1b1. EduConnect outputs error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":394,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":395,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":396,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":397,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC6 - Find students from existing contacts by their name**","lastModifiedDate":"2024-03-02"},{"lineNumber":398,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":399,"author":{"gitId":"tanjiajiajun"},"content":"**Actor: TA**","lastModifiedDate":"2024-03-02"},{"lineNumber":400,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":401,"author":{"gitId":"tanjiajiajun"},"content":"**MSS:**","lastModifiedDate":"2024-03-02"},{"lineNumber":402,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":403,"author":{"gitId":"tanjiajiajun"},"content":"1. TA enters the find command to find an existing student info","lastModifiedDate":"2024-03-02"},{"lineNumber":404,"author":{"gitId":"tanjiajiajun"},"content":"2. EduConnect returns the students with a matching/partially matching word(s)","lastModifiedDate":"2024-03-02"},{"lineNumber":405,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":406,"author":{"gitId":"tanjiajiajun"},"content":"**Extensions:**","lastModifiedDate":"2024-03-02"},{"lineNumber":407,"author":{"gitId":"tanjiajiajun"},"content":"* 1a. EduConnect cannot find the student with specified name","lastModifiedDate":"2024-03-02"},{"lineNumber":408,"author":{"gitId":"tanjiajiajun"},"content":"* 1a1. EduConnect outputs no match error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":409,"author":{"gitId":"tanjiajiajun"},"content":"* 1b. EduConnect detects an error in the command format","lastModifiedDate":"2024-03-02"},{"lineNumber":410,"author":{"gitId":"tanjiajiajun"},"content":"* 1b1. EduConnect outputs error message to user","lastModifiedDate":"2024-03-02"},{"lineNumber":411,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":412,"author":{"gitId":"tanjiajiajun"},"content":"Use Case ends","lastModifiedDate":"2024-03-02"},{"lineNumber":413,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":414,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":415,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":416,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC7 - TA finds a common time slot amongst one class of students**","lastModifiedDate":"2024-03-02"},{"lineNumber":417,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":418,"author":{"gitId":"tanjiajiajun"},"content":"**Actor: TA**","lastModifiedDate":"2024-03-02"},{"lineNumber":419,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":420,"author":{"gitId":"tanjiajiajun"},"content":"1. TA opens the application.","lastModifiedDate":"2024-03-02"},{"lineNumber":421,"author":{"gitId":"tanjiajiajun"},"content":"2. TA keys in the command to find a common time slot for a specific class.","lastModifiedDate":"2024-03-02"},{"lineNumber":422,"author":{"gitId":"tanjiajiajun"},"content":"3. EduConnect finds a common time slot using the student’s timetable.","lastModifiedDate":"2024-03-02"},{"lineNumber":423,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":424,"author":{"gitId":"tanjiajiajun"},"content":"Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":425,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":426,"author":{"gitId":"tanjiajiajun"},"content":"**Extensions:**","lastModifiedDate":"2024-03-02"},{"lineNumber":427,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":428,"author":{"gitId":"tanjiajiajun"},"content":"* 3a. EduConnect is unable to find a common timeslot.","lastModifiedDate":"2024-03-02"},{"lineNumber":429,"author":{"gitId":"tanjiajiajun"},"content":"* 3a1. EduConnect shows an error message.","lastModifiedDate":"2024-03-02"},{"lineNumber":430,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"tanjiajiajun"},"content":"**System: EduConnect**","lastModifiedDate":"2024-03-02"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"tanjiajiajun"},"content":"**Use Case: UC8 - Exploring the application for the first time**","lastModifiedDate":"2024-03-02"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"tanjiajiajun"},"content":"**Actor: TA (First-time user of the product)**","lastModifiedDate":"2024-03-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"tanjiajiajun"},"content":"**MSS:**","lastModifiedDate":"2024-03-02"},{"lineNumber":439,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":440,"author":{"gitId":"tanjiajiajun"},"content":"1. TA opens the application.","lastModifiedDate":"2024-03-02"},{"lineNumber":441,"author":{"gitId":"tanjiajiajun"},"content":"2. TA is able to see a set of sample contacts pre-loaded into the application as examples.","lastModifiedDate":"2024-03-02"},{"lineNumber":442,"author":{"gitId":"tanjiajiajun"},"content":"3. TA keys in ‘help’ command.","lastModifiedDate":"2024-03-02"},{"lineNumber":443,"author":{"gitId":"tanjiajiajun"},"content":"4. EduConnect brings up a list of commands that it accepts.","lastModifiedDate":"2024-03-02"},{"lineNumber":444,"author":{"gitId":"tanjiajiajun"},"content":"5. TA keys in various commands. (Refer to UC2, UC4, UC5, UC6 …)","lastModifiedDate":"2024-03-02"},{"lineNumber":445,"author":{"gitId":"tanjiajiajun"},"content":"6. TA keys in ‘wipe’ command.","lastModifiedDate":"2024-03-02"},{"lineNumber":446,"author":{"gitId":"tanjiajiajun"},"content":"7. EduConnect erases all data.","lastModifiedDate":"2024-03-02"},{"lineNumber":447,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":448,"author":{"gitId":"tanjiajiajun"},"content":"Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"tanjiajiajun"},"content":"2.  Program should be able to handle multiple classes (at least 5) with each having more than 50 students","lastModifiedDate":"2024-03-02"},{"lineNumber":454,"author":{"gitId":"tanjiajiajun"},"content":"3.  The system should be able to be used by a novice who has never used the product before.","lastModifiedDate":"2024-03-02"},{"lineNumber":455,"author":{"gitId":"tanjiajiajun"},"content":"4.  The system should respond within 2 seconds after a command.","lastModifiedDate":"2024-03-02"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"tanjiajiajun"},"content":"* **CS2040**: Data Structures and Algorithms Course in School of Computing, NUS","lastModifiedDate":"2024-03-02"},{"lineNumber":461,"author":{"gitId":"tanjiajiajun"},"content":"* **Kattis**: Website with competitive programming problems, used by CS2040 students for their take-home assignments","lastModifiedDate":"2024-03-02"},{"lineNumber":462,"author":{"gitId":"tanjiajiajun"},"content":"* **NUS**: National University of Singapore","lastModifiedDate":"2024-03-02"},{"lineNumber":463,"author":{"gitId":"tanjiajiajun"},"content":"* **SoC**: School of Computing","lastModifiedDate":"2024-03-02"},{"lineNumber":464,"author":{"gitId":"tanjiajiajun"},"content":"* **Skill group**: Students who are grouped similarly by their ability and score in CS2040","lastModifiedDate":"2024-03-02"},{"lineNumber":465,"author":{"gitId":"tanjiajiajun"},"content":"* **TAs**: Teaching assistants","lastModifiedDate":"2024-03-02"},{"lineNumber":466,"author":{"gitId":"tanjiajiajun"},"content":"* **Telegram**: Preferred online messaging application used amongst students and TAs.","lastModifiedDate":"2024-03-02"},{"lineNumber":467,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":475,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":476,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fy17ohhh":6,"tanjiajiajun":143,"-":371}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"   1. Run the `educonnect.Main` and try a few commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"fy17ohhh":1,"-":60}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"   e.g. `educonnect.commons.StringUtilTest`","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"   e.g. `educonnect.storage.StorageManagerTest`","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"   e.g. `educonnect.logic.LogicManagerTest`","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"fy17ohhh":3,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"# EduConnect User Guide","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"EduConnect is a **desktop app for managing student contacts, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, EduConnect can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"- [EduConnect User Guide](#educonnect-user-guide)","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"  - [Quick start](#quick-start)","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"  - [Features](#features)","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"    - [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    - [Adding a student: `add`](#adding-a-student-add)","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    - [Listing all students : `list`](#listing-all-students--list)","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    - [Editing a student : `edit`](#editing-a-student--edit)","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"    - [Locating students by name: `find`](#locating-students-by-name-find)","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"    - [Deleting a student : `delete`](#deleting-a-student--delete)","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    - [Clearing all entries : `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    - [Archiving data files `[coming in v2.0]`](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"  - [FAQ](#faq)","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"  - [Known issues](#known-issues)","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"  - [Command summary](#command-summary)","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"1. Download the latest `educonnect.jar` from [here](https://github.com/AY2324S2-CS2103-T14-1/tp/releases).","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for EduConnect.","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar educonnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"   A GUI similar to the below should appear in a few seconds. \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"   * `add n/John Doe s/A1234567X h/@john.doe e/johnd@example.com t/tutorial-1 t/high-ability` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"### Adding a student: `add`","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"jeremiahlzz"},"content":"Adds a student to the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"Format: `add n/NAME s/STUDENT_ID e/EMAIL h/TELEGRAM_HANDLE [c/TIMETABLE] [t/TAG]…​`","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"**Tip:** A student can have any number of tags (including 0)","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"**Tip:** A student can have its timetable field left empty, a default empty timetable will be allocated.","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"* `add n/John Doe s/A1234567X h/@john.doe e/johnd@example.com t/tutorial-1 t/high-ability c/mon: 8-10, 10-12 tue: ","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"  11-13 thu: 12-15, 15-17`","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"jeremiahlzz"},"content":"* `add n/Anne-Marie Rose Nicholson t/singer t/songwriter e/rockabye@friends.uk h/@AnneMarieofficial s/A7041991U`","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"### Listing all students : `list`","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"jeremiahlzz"},"content":"Shows a list of all students in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"jeremiahlzz"},"content":"### Editing a student : `edit`","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"jeremiahlzz"},"content":"Edits an existing student in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"Format: `edit INDEX [n/NAME] [s/STUDENT_ID] [e/EMAIL] [h/TELEGRAM_HANDLE] [c/TIMETABLE] [t/TAG]…​ `","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"jeremiahlzz"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"jeremiahlzz"},"content":"* When editing tags, the existing tags of the student will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"jeremiahlzz"},"content":"* You can remove all the student’s tags by typing `t/` without","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"* You can reset the timetable to be empty by typing \u0027c/\u0027 without specifying anything after it.","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"jeremiahlzz"},"content":"*  `edit 1 s/A0001234A e/johndoe@example.com` Edits the student id and email address of the 1st student to be `A0001234A` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"jeremiahlzz"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd student to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"*  `edit 3 h/@christan c/` Edits the telegram handle and clears the timetable.","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"*  `edit 4 c/mon: 8-10, 10-12 tue: 11-13 thu: 12-15, 15-17` Replaces the timetable with this new one according to ","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"   the specifications in the command.","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"tanjiajiajun"},"content":"### Locating students by name: `find`","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"tanjiajiajun"},"content":"Find students whose names contain any of the given keywords.","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"tanjiajiajun"},"content":"  * Students with names matching any parts of the keyword will be returned.","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"tanjiajiajun"},"content":"    e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`,`J` will return `John Doe`, `Jimmy Lim`.","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"jeremiahlzz"},"content":"  ![result for \u0027find alex david\u0027](images/findAlex.png)","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"jeremiahlzz"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"jeremiahlzz"},"content":"Deletes a specified student from the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"jeremiahlzz"},"content":"Format: `delete [s/STUDENT_ID] [e/EMAIL] [h/TELEGRAM_HANDLE]`","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"jeremiahlzz"},"content":"* Deletes a student with the specified `STUDENT_ID` or `EMAIL` or `TELEGRAM_HANDLE`.","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"jeremiahlzz"},"content":"* Only one field may be used for each delete command.","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"jeremiahlzz"},"content":"* `NAME` or `TAG` may not be used.","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"jeremiahlzz"},"content":"* `delete e/royb@gmail.com` deletes a student with an email of `royb@gmail.com` in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"jeremiahlzz"},"content":"* `delete s/A1654327X` deletes a student with a student id of `A1654327X` in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"jeremiahlzz"},"content":"  ![result for \u0027find alex\u0027, followed by \u0027delete s/A1654327X\u0027](images/findAndDelete.png)","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"fy17ohhh"},"content":"EduConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"fy17ohhh"},"content":"EduConnect data are saved automatically as a JSON file `[JAR file location]/data/educonnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"fy17ohhh"},"content":"If your changes to the data file makes its format invalid, EduConnect will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":200,"author":{"gitId":"fy17ohhh"},"content":"Furthermore, certain edits can cause the EduConnect to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"fy17ohhh"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous EduConnect home folder.","lastModifiedDate":"2024-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"marclamp"},"content":"**Add**    | `add n/NAME s/STUDENT_ID e/EMAIL h/TELEGRAM_HANDLE [c/TIMETABLE] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho s/A2222444X e/jamesho@example.com h/@hohoho t/struggling t/3rd year c/mon: 8-10, 10-12 tue: 11-13 thu: 12-15, 15-17`","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"jeremiahlzz"},"content":"**Delete** | `delete [s/STUDENT_ID] [e/EMAIL] [h/TELEGRAM_HANDLE]`\u003cbr\u003e e.g., `delete s/A1654327X`","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"marclamp"},"content":"**Edit**   | `edit INDEX [n/NAME] [s/STUDENT_ID] [e/EMAIL] [h/TELEGRAM_HANDLE] [c/TIMETABLE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com c/mon: 8-10, 10-12 tue: 11-13 thu: 12-15, 15-17`","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fy17ohhh":10,"marclamp":12,"tanjiajiajun":4,"jeremiahlzz":44,"-":162}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"# EduConnect","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-T14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103-T14-1/tp/actions)","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"\u003c!---[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)---\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"**EduConnect is a desktop application for Teaching Assistants (TAs) in SoC, NUS to manage student contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"* If you are interested in using EduConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"* If you are interested about developing EduConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fy17ohhh":6,"-":15}},{"path":"docs/team/darryl-chan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"  title: \"Darryl Chan\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"### Project: EduConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"EduConnect is a desktop contact management application used for teaching assistants to manage a few different courses or classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. (to be finalised)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"darryl-chan":1,"-":43,"matthewken19":2}},{"path":"docs/team/feiyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"  layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"  title: \"Feiyang\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"### Project: EduConnect","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"EduConnect is a desktop contact management application used for teaching assistants to manage a few different courses or classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about [] kLoC. (to be finalised)","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"\u003c!---","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"* **Project management**:","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    * User Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"* **Community**:","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"--\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"* **Tools**:","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    * Integrated a third party library (Markbind) to the project ([\\#1](https://github.com/AY2324S2-CS2103-T14-1/tp/pull/1))","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"fy17ohhh":43,"matthewken19":1}},{"path":"docs/team/jeremiah.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"  layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"  title: \"Jeremiah\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"### Project: EduConnect","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"EduConnect is a desktop contact management application used for teaching assistants to manage a few different courses or classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. (to be finalised)","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"* **Code contributed**:","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"  * Refactored Person class to Student class","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"jeremiahlzz":13}},{"path":"docs/team/jiajun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"  layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"  title: \"Jia Jun\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"### Project: EduConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"EduConnect is a desktop contact management application used for teaching assistants to manage a few different courses or classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. (to be finalised)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"* **Project management**:","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"tanjiajiajun"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"tanjiajiajun"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"tanjiajiajun"},"content":"    * User Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"tanjiajiajun"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"tanjiajiajun"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"tanjiajiajun"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"tanjiajiajun"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"tanjiajiajun"},"content":"* **Community**:","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"tanjiajiajun"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"tanjiajiajun"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"tanjiajiajun"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"tanjiajiajun"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"tanjiajiajun"},"content":"* **Tools**:","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"tanjiajiajun"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"tanjiajiajun"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"tanjiajiajun"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"tanjiajiajun":44,"matthewken19":2}},{"path":"docs/team/marcuslam.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"  layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"  title: \"Marcus Lam\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"### Project: EduConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"EduConnect is a desktop contact management application used for teaching assistants to manage a few different courses or classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. (to be finalised)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"\u003c!---","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"* **Project management**:","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"  * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"---\u003e","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"marclamp":46,"matthewken19":2}},{"path":"docs/team/matthewken19.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"  title: \"Matthew Ken\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"### Project: EduConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"EduConnect is a desktop contact management application used for teaching assistants to manage a few different courses or classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. (to be finalised)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"\u003c!---","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"---\u003e","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"-":43,"matthewken19":5}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"import model.educonnect.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"fy17ohhh"},"content":"import static util.commons.educonnect.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"fy17ohhh"},"content":"Simply add the following to [`ui.educonnect.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"fy17ohhh":3,"-":399}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"The `address` field in `Person` is actually an instance of the `person.model.educonnect.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fy17ohhh":1,"-":114}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `logic.educonnect.Logic`.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"A quick look at the `logic.educonnect.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fy17ohhh":2,"-":309}},{"path":"src/main/java/educonnect/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.FileUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"fy17ohhh":4,"-":69}},{"path":"src/main/java/educonnect/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"fy17ohhh":2,"-":39}},{"path":"src/main/java/educonnect/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.Config;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.Version;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ConfigUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.LogicManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.AddressBookStorage;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.StorageManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.ui.UiManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":24,"-":162}},{"path":"src/main/java/educonnect/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":2,"-":64}},{"path":"src/main/java/educonnect/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":2,"-":80}},{"path":"src/main/java/educonnect/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":1,"-":105}},{"path":"src/main/java/educonnect/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":1,"-":120}},{"path":"src/main/java/educonnect/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core.index;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"fy17ohhh":2,"-":67}},{"path":"src/main/java/educonnect/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"fy17ohhh":1,"-":10}},{"path":"src/main/java/educonnect/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":1,"-":20}},{"path":"src/main/java/educonnect/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.MainApp;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fy17ohhh":2,"-":40}},{"path":"src/main/java/educonnect/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":1,"-":34}},{"path":"src/main/java/educonnect/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.Config;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fy17ohhh":3,"-":19}},{"path":"src/main/java/educonnect/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":1,"-":82}},{"path":"src/main/java/educonnect/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":3,"-":141}},{"path":"src/main/java/educonnect/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"     *    Ignores case, full word match is not required.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"     *    \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"     *       fuzzyMatchIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"     *       fuzzyMatchIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     *       fuzzyMatchIgnoreCase(\"ABc def\", \"ABc d\") \u003d\u003d true","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     *       fuzzyMatchIgnoreCase(\"ABc def\", \"abc def g\") \u003d\u003d false","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"     * @param word cannot be null, cannot be empty can be multiple words separated by whitespace or hyphen","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    public static boolean fuzzyMatchIgnoreCase(String sentence, String word) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":12,"-":52}},{"path":"src/main/java/educonnect/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"fy17ohhh":1,"-":52}},{"path":"src/main/java/educonnect/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fy17ohhh":8,"jeremiahlzz":3,"-":40}},{"path":"src/main/java/educonnect/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.Command;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.AddressBookParser;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fy17ohhh":11,"jeremiahlzz":3,"-":74}},{"path":"src/main/java/educonnect/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.Prefix;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n\\n%1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_NO_STUDENT_FOUND \u003d \"No such student is found.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"     * Formats the {@code student} for display to the user.","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"    public static String format(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"        builder.append(student.getName())","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                .append(\";\\nStudent ID: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"                .append(student.getStudentId())","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"                .append(\";\\nEmail: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"                .append(student.getEmail())","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                .append(\";\\nTelegram Handle: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"                .append(student.getTelegramHandle())","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"                .append(\";\\nTags: \");","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"        student.getTags().forEach(builder::append);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        builder.append(\";\\n\").append(student.getTimetable());","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":3,"darryl-chan":1,"marclamp":5,"jeremiahlzz":10,"-":34}},{"path":"src/main/java/educonnect/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":" * Adds a student to the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID \"","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE \"","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_STUDENT_ID + \"A1234567X \"","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"@john.doe \"","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_TAG + \"tutorial-1 \"","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_TAG + \"high-ability\";","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_SUCCESS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"            \"New student added: %1$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT_ID \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"            \"This student Id already exists in the address book\";","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"            \"This email already exists in the address book\";","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_TELEGRAM_HANDLE \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"            \"This telegram handle already exists in the address book\";","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"    private final Student toAdd;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"        toAdd \u003d student;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        if (model.hasStudentId(toAdd)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        if (model.hasEmail(toAdd)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        if (model.hasTelegramHandle(toAdd)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":9,"darryl-chan":24,"jeremiahlzz":9,"-":54}},{"path":"src/main/java/educonnect/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":3,"-":20}},{"path":"src/main/java/educonnect/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":3,"-":17}},{"path":"src/main/java/educonnect/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":2,"-":80}},{"path":"src/main/java/educonnect/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"            + \": Deletes the student identified only by the unique identifier used in the displayed student list.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            + \"Parameters: \" + PREFIX_EMAIL + \"EMAIL or \"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE or \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" \" + PREFIX_EMAIL + \"example@email.com\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" \" + PREFIX_STUDENT_ID + \"A1234567X\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"            + \"Example 3: \" + COMMAND_WORD + \" \" + PREFIX_TELEGRAM_HANDLE + \"@john.doe\";","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"    public static final String MULTIPLE_UNIQUE_IDENTIFIER_MESSAGE \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"            \"Multiple unique identifier prefixes used, only use one unique identifier prefix.\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"    public static final String NO_UNIQUE_IDENTIFIER_MESSAGE \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"            \"Non-unique identifier prefixes used, only use one unique identifier prefix.\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"    private final DeleteStudentDescriptor deleteStudentDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"    public DeleteCommand(DeleteStudentDescriptor deleteStudentDescriptor) {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"        this.deleteStudentDescriptor \u003d deleteStudentDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        Optional\u003cStudent\u003e toBeDeleted \u003d Optional.empty();","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"        if (deleteStudentDescriptor.getStudentId().map(","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"                studentId -\u003e model.hasStudentId(studentId)).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"            toBeDeleted \u003d deleteStudentDescriptor.getStudentId().flatMap(","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"                    studentId -\u003e model.getStudentWithStudentId(studentId));","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        } else if (deleteStudentDescriptor.getEmail().map(","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"                email -\u003e model.hasEmail(email)).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"            toBeDeleted \u003d deleteStudentDescriptor.getEmail().flatMap(","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"                    email -\u003e model.getStudentWithEmail(email));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        } else if (deleteStudentDescriptor.getTelegramHandle().map(","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"                telegramHandle -\u003e model.hasTelegramHandle(telegramHandle)).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"            toBeDeleted \u003d deleteStudentDescriptor.getTelegramHandle().flatMap(","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"                    tele -\u003e model.getStudentWithTelegramHandle(tele));","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"        return toBeDeleted.map(studentToDelete -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"            model.deleteStudent(studentToDelete);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, Messages.format(studentToDelete)));","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"        }).orElseThrow(() -\u003e new CommandException(Messages.MESSAGE_NO_STUDENT_FOUND));","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"        return deleteStudentDescriptor.equals(otherDeleteCommand.deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"                .add(\"deleteStudentDescriptor\", deleteStudentDescriptor)","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"     * Stores the details of to delete student with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"     * corresponding field value of the student","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"    public static class DeleteStudentDescriptor {","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"        private StudentId studentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"        private Email email;","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"        public DeleteStudentDescriptor() {}","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"darryl-chan"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"darryl-chan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"darryl-chan"},"content":"                return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"darryl-chan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"darryl-chan"},"content":"            if (!(other instanceof DeleteCommand.DeleteStudentDescriptor)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"darryl-chan"},"content":"                return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"darryl-chan"},"content":"            DeleteCommand.DeleteStudentDescriptor otherDeleteStudentDescriptor \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"darryl-chan"},"content":"                    (DeleteCommand.DeleteStudentDescriptor) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"darryl-chan"},"content":"            return Objects.equals(studentId, otherDeleteStudentDescriptor.studentId)","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"darryl-chan"},"content":"                    \u0026\u0026 Objects.equals(email, otherDeleteStudentDescriptor.email)","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"darryl-chan"},"content":"                    \u0026\u0026 Objects.equals(telegramHandle, otherDeleteStudentDescriptor.telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"darryl-chan"},"content":"        public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"darryl-chan"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"darryl-chan"},"content":"                    .add(\"student id\", studentId)","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"darryl-chan"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"darryl-chan"},"content":"                    .add(\"telegram handle\", telegramHandle)","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"darryl-chan"},"content":"                    .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":5,"darryl-chan":114,"jeremiahlzz":4,"-":42}},{"path":"src/main/java/educonnect/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"            + \"[\" + PREFIX_STUDENT_ID + \"STUDENT_ID] \"","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE] \"","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"@john.doe \"","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"            + PREFIX_STUDENT_ID + \"A1234567X \"","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"            \"Edited Student: %1$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"            \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT_ID \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"            \"This student Id already exists in the address book\";","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"            \"This email already exists in the address book\";","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_TELEGRAM_HANDLE \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"            \"This telegram handle already exists in the address book\";","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"        if (!studentToEdit.isSameStudentId(editedStudent) \u0026\u0026 model.hasStudentId(editedStudent)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        if (!studentToEdit.isSameEmail(editedStudent) \u0026\u0026 model.hasEmail(editedStudent)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"        if (!studentToEdit.isSameTelegramHandle(editedStudent) \u0026\u0026 model.hasTelegramHandle(editedStudent)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"jeremiahlzz"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"jeremiahlzz"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, Messages.format(editedStudent)));","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"jeremiahlzz"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"jeremiahlzz"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"jeremiahlzz"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"jeremiahlzz"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"        StudentId updatedStudentId \u003d editStudentDescriptor.getStudentId().orElse(studentToEdit.getStudentId());","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"jeremiahlzz"},"content":"        TelegramHandle updatedTelegramHandle \u003d editStudentDescriptor.getTelegramHandle().orElse(","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"jeremiahlzz"},"content":"                    studentToEdit.getTelegramHandle());","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"jeremiahlzz"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"        Timetable timetable \u003d editStudentDescriptor.getTimetable().orElse(studentToEdit.getTimetable());","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"        return new Student(updatedName, updatedStudentId, updatedEmail, updatedTelegramHandle, updatedTags, timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 editStudentDescriptor.equals(otherEditCommand.editStudentDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"jeremiahlzz"},"content":"                .add(\"editStudentDescriptor\", editStudentDescriptor)","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"jeremiahlzz"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"jeremiahlzz"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"jeremiahlzz"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"darryl-chan"},"content":"        private StudentId studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"darryl-chan"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2024-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"marclamp"},"content":"        private Timetable timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"jeremiahlzz"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"darryl-chan"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2024-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"darryl-chan"},"content":"            setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2024-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"marclamp"},"content":"            setTimetable(toCopy.timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"marclamp"},"content":"            return CollectionUtil.isAnyNonNull(name, studentId, email, telegramHandle, tags, timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"darryl-chan"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-02"},{"lineNumber":190,"author":{"gitId":"darryl-chan"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2024-03-02"},{"lineNumber":194,"author":{"gitId":"darryl-chan"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2024-03-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"darryl-chan"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-02"},{"lineNumber":206,"author":{"gitId":"darryl-chan"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-02"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2024-03-02"},{"lineNumber":210,"author":{"gitId":"darryl-chan"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2024-03-02"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"marclamp"},"content":"        public void setTimetable(Timetable timetable) {","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"marclamp"},"content":"            this.timetable \u003d timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"marclamp"},"content":"        public Optional\u003cTimetable\u003e getTimetable() {","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"marclamp"},"content":"            return Optional.ofNullable(timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":220,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"jeremiahlzz"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"jeremiahlzz"},"content":"            EditStudentDescriptor otherEditStudentDescriptor \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":250,"author":{"gitId":"jeremiahlzz"},"content":"            return Objects.equals(name, otherEditStudentDescriptor.name)","lastModifiedDate":"2024-03-12"},{"lineNumber":251,"author":{"gitId":"jeremiahlzz"},"content":"                    \u0026\u0026 Objects.equals(studentId, otherEditStudentDescriptor.studentId)","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"jeremiahlzz"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditStudentDescriptor.email)","lastModifiedDate":"2024-03-12"},{"lineNumber":253,"author":{"gitId":"jeremiahlzz"},"content":"                    \u0026\u0026 Objects.equals(telegramHandle, otherEditStudentDescriptor.telegramHandle)","lastModifiedDate":"2024-03-12"},{"lineNumber":254,"author":{"gitId":"marclamp"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditStudentDescriptor.tags)","lastModifiedDate":"2024-03-17"},{"lineNumber":255,"author":{"gitId":"marclamp"},"content":"                    \u0026\u0026 Objects.equals(timetable, otherEditStudentDescriptor.timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"darryl-chan"},"content":"                    .add(\"student id\", studentId)","lastModifiedDate":"2024-03-02"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"darryl-chan"},"content":"                    .add(\"telegram handle\", telegramHandle)","lastModifiedDate":"2024-03-02"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"marclamp"},"content":"                    .add(\"timetable\", timetable \u003d\u003d null ? null : timetable.convertToCommandString())","lastModifiedDate":"2024-03-17"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"fy17ohhh":11,"darryl-chan":38,"marclamp":17,"jeremiahlzz":44,"-":160}},{"path":"src/main/java/educonnect/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"fy17ohhh":2,"-":17}},{"path":"src/main/java/educonnect/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":" * Finds and lists all students in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"fy17ohhh":4,"jeremiahlzz":5,"-":49}},{"path":"src/main/java/educonnect/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":2,"-":19}},{"path":"src/main/java/educonnect/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":" * Lists all students in the address book to the user.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":2,"jeremiahlzz":3,"-":18}},{"path":"src/main/java/educonnect/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands.exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":" * Represents an error which occurs during execution of a {@link educonnect.logic.commands.Command}.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"fy17ohhh":2,"-":15}},{"path":"src/main/java/educonnect/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_FRIDAY;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_MONDAY;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_SATURDAY;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_SUNDAY;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_THURSDAY;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_TUESDAY;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_WEDNESDAY;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_EMAIL,","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                         PREFIX_TELEGRAM_HANDLE, PREFIX_TAG, PREFIX_TIMETABLE);","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_STUDENT_ID,","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                PREFIX_EMAIL, PREFIX_TELEGRAM_HANDLE, PREFIX_TIMETABLE);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle telegramHandle \u003d ParserUtil.parseTelegramHandle(","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"                    argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get());","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        Timetable timetable \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parseTimetable(tokenizeForTimetable(argMultimap.getValue(PREFIX_TIMETABLE).orElse(\"\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"        Student student \u003d new Student(name, studentId, email, telegramHandle, tagList, timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"        return new AddCommand(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"     * Tokenizes the input arguments for Timetable under Add Command.","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"     * @param fullTimetableString a full {@code String} containing the arguments. E.g. \"mon: 1-4, 12-14 tue: 14-16 ...\"","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"     * @return an {@code ArrayList\u003cString\u003e}, with each entry containing arguments for each day of the Timetable week.","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"    public static ArrayList\u003cString\u003e tokenizeForTimetable(String fullTimetableString) {","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                ArgumentTokenizer.tokenize(fullTimetableString, PREFIX_TIMETABLE_MONDAY, PREFIX_TIMETABLE_TUESDAY,","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"                        PREFIX_TIMETABLE_WEDNESDAY, PREFIX_TIMETABLE_THURSDAY, PREFIX_TIMETABLE_FRIDAY,","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                        PREFIX_TIMETABLE_SATURDAY, PREFIX_TIMETABLE_SUNDAY);","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cString\u003e allDays \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_MONDAY).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_TUESDAY).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_WEDNESDAY).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_THURSDAY).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_FRIDAY).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"        if (Timetable.is7Days()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"            allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_SATURDAY).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"            allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_SUNDAY).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"        return allDays;","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"fy17ohhh":8,"darryl-chan":7,"marclamp":43,"jeremiahlzz":6,"-":39}},{"path":"src/main/java/educonnect/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.Command;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.ListCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":14,"-":72}},{"path":"src/main/java/educonnect/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"fy17ohhh":3,"-":75}},{"path":"src/main/java/educonnect/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"     * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"fy17ohhh":1,"marclamp":1,"-":146}},{"path":"src/main/java/educonnect/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"h/\");","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    public static final Prefix PREFIX_STUDENT_ID \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE_MONDAY \u003d new Prefix(\"mon:\");","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE_TUESDAY \u003d new Prefix(\"tue:\");","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE_WEDNESDAY \u003d new Prefix(\"wed:\");","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE_THURSDAY \u003d new Prefix(\"thu:\");","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE_FRIDAY \u003d new Prefix(\"fri:\");","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE_SATURDAY \u003d new Prefix(\"sat:\");","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    public static final Prefix PREFIX_TIMETABLE_SUNDAY \u003d new Prefix(\"sun:\");","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public static final Prefix[] PREFIXES_TIMETABLE_DAYS \u003d new Prefix[]{","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        PREFIX_TIMETABLE_MONDAY, PREFIX_TIMETABLE_TUESDAY, PREFIX_TIMETABLE_WEDNESDAY,","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        PREFIX_TIMETABLE_THURSDAY, PREFIX_TIMETABLE_FRIDAY, PREFIX_TIMETABLE_SATURDAY, PREFIX_TIMETABLE_SUNDAY","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    };","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fy17ohhh":1,"darryl-chan":2,"marclamp":12,"-":11}},{"path":"src/main/java/educonnect/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_TAG);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        // No prefixes used","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        if (!areAnyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TAG, PREFIX_STUDENT_ID, PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"                PREFIX_TELEGRAM_HANDLE, PREFIX_TAG)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"        // Non-unique identifiers present","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"        if (areAnyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TAG)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"                    DeleteCommand.NO_UNIQUE_IDENTIFIER_MESSAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"        // Multiple unique identifiers present","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID, PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"            || arePrefixesPresent(argMultimap, PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"            || arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID, PREFIX_EMAIL)","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"            || arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID, PREFIX_TELEGRAM_HANDLE)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"                    DeleteCommand.MULTIPLE_UNIQUE_IDENTIFIER_MESSAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"        // Find the unique identifier used only one of the guard clause will be triggered","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        if (argMultimap.getValue(PREFIX_STUDENT_ID).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"            deletePersonDescriptor.setStudentId(","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"                    ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"            deletePersonDescriptor.setTelegramHandle(","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"                    ParserUtil.parseTelegramHandle(argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"            deletePersonDescriptor.setEmail(","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"                    ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"        return new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fy17ohhh":4,"darryl-chan":60,"-":18}},{"path":"src/main/java/educonnect/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_FRIDAY;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_MONDAY;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_SATURDAY;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_SUNDAY;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_THURSDAY;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_TUESDAY;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE_WEDNESDAY;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_ID,","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                        PREFIX_EMAIL, PREFIX_TELEGRAM_HANDLE, PREFIX_TAG, PREFIX_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_EMAIL, PREFIX_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        EditCommand.EditStudentDescriptor editPersonDescriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"        if (argMultimap.getValue(PREFIX_STUDENT_ID).isPresent()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"            editPersonDescriptor.setStudentId(ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get()));","lastModifiedDate":"2024-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"            editPersonDescriptor.setTelegramHandle(ParserUtil.parseTelegramHandle(argMultimap.getValue(","lastModifiedDate":"2024-03-02"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"                        PREFIX_TELEGRAM_HANDLE).get()));","lastModifiedDate":"2024-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        if (argMultimap.getValue(PREFIX_TIMETABLE).isPresent()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"            editPersonDescriptor.setTimetable(ParserUtil.parseTimetable(","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                    tokenizeForTimetable(argMultimap.getValue(PREFIX_TIMETABLE).orElse(\"\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"     * Tokenizes the input arguments for Timetable under Add Command.","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"     * @param fullTimetableString a full {@code String} containing the arguments. E.g. \"mon: 1-4, 12-14 tue: 14-16 ...\"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"     * @return an {@code ArrayList\u003cString\u003e}, with each entry containing arguments for each day of the Timetable week.","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"    public static ArrayList\u003cString\u003e tokenizeForTimetable(String fullTimetableString) {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"                ArgumentTokenizer.tokenize(fullTimetableString, PREFIX_TIMETABLE_MONDAY, PREFIX_TIMETABLE_TUESDAY,","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"                        PREFIX_TIMETABLE_WEDNESDAY, PREFIX_TIMETABLE_THURSDAY, PREFIX_TIMETABLE_FRIDAY,","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"                        PREFIX_TIMETABLE_SATURDAY, PREFIX_TIMETABLE_SUNDAY);","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cString\u003e allDays \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_MONDAY).orElse(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_TUESDAY).orElse(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_WEDNESDAY).orElse(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_THURSDAY).orElse(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"        allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_FRIDAY).orElse(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"        if (Timetable.is7Days()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"            allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_SATURDAY).orElse(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"            allDays.add(argMultimap.getValue(PREFIX_TIMETABLE_SUNDAY).orElse(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"        return allDays;","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fy17ohhh":6,"darryl-chan":8,"marclamp":50,"jeremiahlzz":1,"-":66}},{"path":"src/main/java/educonnect/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(trimmedArgs));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fy17ohhh":4,"darryl-chan":1,"jeremiahlzz":1,"-":23}},{"path":"src/main/java/educonnect/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.Command;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"fy17ohhh":3,"-":13}},{"path":"src/main/java/educonnect/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static educonnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Period;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.NumberOfDaysException;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        String capitalName \u003d createCapitalName(trimmedName);","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        return new Name(capitalName);","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"     * Capitalises the names separated by a space","lastModifiedDate":"2024-03-09"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"     * Removes unecessary spaces in between names","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    public static String createCapitalName(String trimmedName) {","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"        String[] words \u003d trimmedName.split(\"[\\\\s-]+\");","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        StringBuilder namesUnparsed \u003d new StringBuilder(trimmedName);","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-03-09"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"        for (String word : words) {","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"            if (word.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"                continue;","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-03-09"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"            int lengthOfWord \u003d word.length();","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"            int indexOfWord \u003d namesUnparsed.indexOf(word);","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"            //Appends the character behind the individual word","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"            if (indexOfWord !\u003d 0) {","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"                result.append(namesUnparsed.charAt(indexOfWord - 1));","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"            result.append(Character.toUpperCase(word.charAt(0)));","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"            if (word.length() \u003e 1) {","lastModifiedDate":"2024-03-09"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"                result.append(word.substring(1));","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"            namesUnparsed.delete(0, indexOfWord + lengthOfWord);","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"        String capitalised \u003d result.toString();","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"        return capitalised;","lastModifiedDate":"2024-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"     * Parses a {@code String studentId} into a {@code StudentId}.","lastModifiedDate":"2024-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"     * @throws ParseException if the given {@code studentId} is invalid.","lastModifiedDate":"2024-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2024-03-02"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2024-03-02"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"        String trimmedId \u003d studentId.trim();","lastModifiedDate":"2024-03-02"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"        if (!StudentId.isValidStudentId(trimmedId)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"        String capitalised \u003d createCapitalStudentId(trimmedId);","lastModifiedDate":"2024-03-09"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"        return new StudentId(capitalised);","lastModifiedDate":"2024-03-09"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"     * Capitalises the \u0027A\u0027 at the start of the Student ID","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"     * @param trimmedId","lastModifiedDate":"2024-03-09"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"     * @return Capitalised String of Student ID","lastModifiedDate":"2024-03-09"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"    public static String createCapitalStudentId(String trimmedId) {","lastModifiedDate":"2024-03-09"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-03-09"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"        result.append(Character.toUpperCase(trimmedId.charAt(0)));","lastModifiedDate":"2024-03-09"},{"lineNumber":116,"author":{"gitId":"darryl-chan"},"content":"        result.append(trimmedId.substring(1));","lastModifiedDate":"2024-03-09"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"        String capitalised \u003d result.toString();","lastModifiedDate":"2024-03-09"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"        return capitalised;","lastModifiedDate":"2024-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"     * Parses a {@code telegramHandle} into a {@code TelegramHandle}.","lastModifiedDate":"2024-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2024-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"darryl-chan"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2024-03-02"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2024-03-02"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"        String trimmedHandle \u003d telegramHandle.trim();","lastModifiedDate":"2024-03-02"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedHandle)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"        return new TelegramHandle(trimmedHandle);","lastModifiedDate":"2024-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"marclamp"},"content":"     * Parses {@code ArrayList\u003cString\u003e allDays} into a {@code Timetable}.","lastModifiedDate":"2024-03-15"},{"lineNumber":180,"author":{"gitId":"marclamp"},"content":"     * Defaults to empty Timetable if no arguments (empty {@code allDays}).","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"marclamp"},"content":"    public static Timetable parseTimetable(ArrayList\u003cString\u003e allDays) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"marclamp"},"content":"        requireNonNull(allDays);","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"marclamp"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"marclamp"},"content":"        for (int i \u003d 1; i \u003c allDays.size(); i++) {","lastModifiedDate":"2024-03-15"},{"lineNumber":186,"author":{"gitId":"marclamp"},"content":"            parseDay(i, timetable, parsePeriods(allDays.get(i - 1)));","lastModifiedDate":"2024-03-15"},{"lineNumber":187,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":188,"author":{"gitId":"marclamp"},"content":"        return timetable;","lastModifiedDate":"2024-03-15"},{"lineNumber":189,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":191,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"marclamp"},"content":"     * Parses {@code Optional\u003cArrayList\u003cString\u003e\u003e periods} into a {@code Day}. Helper method.","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"marclamp"},"content":"    public static boolean parseDay(int dayNumber, Timetable timetable, Optional\u003cArrayList\u003cPeriod\u003e\u003e allPeriods)","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"marclamp"},"content":"            throws NumberOfDaysException, OverlapPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"marclamp"},"content":"        requireAllNonNull(dayNumber, timetable, allPeriods);","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"marclamp"},"content":"        if (allPeriods.isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"marclamp"},"content":"            for (Period period : allPeriods.get()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":199,"author":{"gitId":"marclamp"},"content":"                timetable.addPeriodToDay(dayNumber, period);","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":201,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"marclamp"},"content":"        return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":204,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"marclamp"},"content":"     * Parses {@code String allPeriods} into a {@code Optional\u003cArrayList\u003cString\u003e\u003e periods}. Helper method.","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"marclamp"},"content":"    public static Optional\u003cArrayList\u003cPeriod\u003e\u003e parsePeriods(String allPeriodsString) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"marclamp"},"content":"        requireNonNull(allPeriodsString);","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"marclamp"},"content":"        if (allPeriodsString.isBlank()) { // no period in this day","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"marclamp"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-15"},{"lineNumber":212,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cPeriod\u003e periodsForDay \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"marclamp"},"content":"        String[] allPeriods \u003d allPeriodsString.split(\",\");","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"marclamp"},"content":"        for (String eachPeriod : allPeriods) {","lastModifiedDate":"2024-03-15"},{"lineNumber":217,"author":{"gitId":"marclamp"},"content":"            periodsForDay.add(parsePeriod(eachPeriod));","lastModifiedDate":"2024-03-15"},{"lineNumber":218,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"marclamp"},"content":"        return Optional.of(periodsForDay);","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"marclamp"},"content":"     * Parses {@code String period} into a {@code Period}. Helper method.","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"marclamp"},"content":"    public static Period parsePeriod(String eachPeriod) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"marclamp"},"content":"        String trimmedPeriod \u003d eachPeriod.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"marclamp"},"content":"        if (!Period.isValidPeriod(trimmedPeriod)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"marclamp"},"content":"            throw new ParseException(Period.PERIOD_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":230,"author":{"gitId":"marclamp"},"content":"        return new Period(\"period\", trimmedPeriod);","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fy17ohhh":5,"darryl-chan":62,"marclamp":63,"jeremiahlzz":4,"-":98}},{"path":"src/main/java/educonnect/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"fy17ohhh":1,"-":41}},{"path":"src/main/java/educonnect/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser.exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"fy17ohhh":2,"-":15}},{"path":"src/main/java/educonnect/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.UniqueStudentList;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"    //// student-level operations","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with same unique identifier as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasSameUniqueIdentifier(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"        return students.containsSameUniqueIdentifier(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with same student id as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasStudentId(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"        return students.containsStudentId(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with same student id as {@code studentId} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"        return students.containsStudentId(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"     * Returns Optional of Student if a student with same student id as {@code studentId} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"        return students.getStudentWithStudentId(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with same email  as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasEmail(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"        return students.containsEmail(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with same email as {@code email} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"        return students.containsEmail(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"     * Returns Optional of Student if a student with same email as {@code email} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"        return students.getStudentWithEmail(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with same telegram handle  as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasTelegramHandle(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"        return students.containsTelegramHandle(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with same telegram handle as {@code telegramHandle} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"        return students.containsTelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"     * Returns Optional of Student if a student with same telegram handle","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"darryl-chan"},"content":"     * as {@code telegramHandle} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"        return students.getStudentWithTelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"jeremiahlzz"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"jeremiahlzz"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"jeremiahlzz"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"jeremiahlzz"},"content":"        students.add(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"jeremiahlzz"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":155,"author":{"gitId":"jeremiahlzz"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"jeremiahlzz"},"content":"     * the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":161,"author":{"gitId":"jeremiahlzz"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"jeremiahlzz"},"content":"     * Removes {@code student} from this {@code AddressBook}.","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"jeremiahlzz"},"content":"     * {@code student} must exist in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"jeremiahlzz"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"jeremiahlzz"},"content":"        students.remove(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"jeremiahlzz"},"content":"                .add(\"students\", students)","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"jeremiahlzz"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"jeremiahlzz"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"jeremiahlzz"},"content":"        return students.equals(otherAddressBook.students);","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"jeremiahlzz"},"content":"        return students.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":77,"jeremiahlzz":32,"-":94}},{"path":"src/main/java/educonnect/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with the same unique identifer as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"     * The unique identifiers are student id, email, telegram handle","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    boolean hasSameUniqueIdentifier(Student student);","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with the student id as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"    boolean hasStudentId(Student student);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"    boolean hasStudentId(StudentId studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"    Optional\u003cStudent\u003e getStudentWithStudentId(StudentId studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with the email as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"    boolean hasEmail(Student student);","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"    boolean hasEmail(Email email);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"    Optional\u003cStudent\u003e getStudentWithEmail(Email email);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if a student with the telegram handle as {@code student} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"    boolean hasTelegramHandle(Student student);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"    boolean hasTelegramHandle(TelegramHandle telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"    Optional\u003cStudent\u003e getStudentWithTelegramHandle(TelegramHandle telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"     * Deletes the given student.","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"     * Adds the given student.","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"    void addStudent(Student student);","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"jeremiahlzz"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"jeremiahlzz"},"content":"     * the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"jeremiahlzz"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"jeremiahlzz"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"jeremiahlzz"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":29,"jeremiahlzz":16,"-":67}},{"path":"src/main/java/educonnect/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        CollectionUtil.requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasSameUniqueIdentifier(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.hasSameUniqueIdentifier(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasStudentId(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.hasStudentId(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.hasStudentId(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.getStudentWithStudentId(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasEmail(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.hasEmail(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.hasEmail(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.getStudentWithEmail(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasTelegramHandle(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.hasTelegramHandle(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"    public boolean hasTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.hasTelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"darryl-chan"},"content":"        return addressBook.getStudentWithTelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"jeremiahlzz"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"jeremiahlzz"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"jeremiahlzz"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"jeremiahlzz"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"jeremiahlzz"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":166,"author":{"gitId":"jeremiahlzz"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":169,"author":{"gitId":"jeremiahlzz"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":172,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"jeremiahlzz"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"jeremiahlzz"},"content":"        return filteredStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"jeremiahlzz"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":183,"author":{"gitId":"jeremiahlzz"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 filteredStudents.equals(otherModelManager.filteredStudents);","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":5,"darryl-chan":57,"jeremiahlzz":19,"-":122}},{"path":"src/main/java/educonnect/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":1,"jeremiahlzz":4,"-":12}},{"path":"src/main/java/educonnect/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"fy17ohhh":2,"-":14}},{"path":"src/main/java/educonnect/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"educonnect.json\");","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":3,"-":85}},{"path":"src/main/java/educonnect/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" * Represents a Student\u0027s email in EduConnect.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":1,"jeremiahlzz":2,"-":76}},{"path":"src/main/java/educonnect/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"            \"Names should only contain alphanumeric characters, spaces and hyphens, and it should not be blank\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} -]*\";","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":2,"jeremiahlzz":2,"-":62}},{"path":"src/main/java/educonnect/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    private final String keywordName;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    public NameContainsKeywordsPredicate(String keywordName) {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"        this.keywordName \u003d keywordName; //replace","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"        return StringUtil.fuzzyMatchIgnoreCase(student.getName().fullName, keywordName);","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        return keywordName.equals(otherNameContainsKeywordsPredicate.keywordName);","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywordName).toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":8,"jeremiahlzz":4,"-":28}},{"path":"src/main/java/educonnect/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"public class Student {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    private final StudentId studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    private final Timetable timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    public Student(Name name, StudentId studentId, Email email, TelegramHandle telegramHandle, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"                   Timetable timetable) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        requireAllNonNull(name, studentId, email, telegramHandle, tags, timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        return studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        return telegramHandle;","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"    public Timetable getTimetable() {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        return timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName())","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId());","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if both students share same student id or email or telegram handle, these are unique identifiers.","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"    public boolean isSameUniqueIdentifier(Student otherStudent) {","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"                \u0026\u0026 (otherStudent.getStudentId().equals(getStudentId())","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"                || otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"                || otherStudent.getTelegramHandle().equals(getTelegramHandle()));","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if both students have the same student id.","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"    public boolean isSameStudentId(Student otherStudent) {","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"                \u0026\u0026 isSameStudentId(otherStudent.getStudentId());","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if student id is same as current student.","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"    public boolean isSameStudentId(StudentId otherStudentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"        return otherStudentId !\u003d null \u0026\u0026 otherStudentId.equals(getStudentId());","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if both students have the same email.","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"    public boolean isSameEmail(Student otherStudent) {","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"darryl-chan"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"darryl-chan"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"                \u0026\u0026 isSameEmail(otherStudent.getEmail());","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if email is same as current student.","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"    public boolean isSameEmail(Email otherEmail) {","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"darryl-chan"},"content":"        return otherEmail !\u003d null \u0026\u0026 otherEmail.equals(getEmail());","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if both students have the same telegram handle.","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"darryl-chan"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"darryl-chan"},"content":"    public boolean isSameTelegramHandle(Student otherStudent) {","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"darryl-chan"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"darryl-chan"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"darryl-chan"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"darryl-chan"},"content":"                \u0026\u0026 isSameTelegramHandle(otherStudent.getTelegramHandle());","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if telegram handle is same as current student.","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"darryl-chan"},"content":"    public boolean isSameTelegramHandle(TelegramHandle otherTelegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"darryl-chan"},"content":"        return otherTelegramHandle !\u003d null \u0026\u0026 otherTelegramHandle.equals(getTelegramHandle());","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"jeremiahlzz"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"jeremiahlzz"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"jeremiahlzz"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"jeremiahlzz"},"content":"        return name.equals(otherStudent.name)","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 studentId.equals(otherStudent.studentId)","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 email.equals(otherStudent.email)","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 telegramHandle.equals(otherStudent.telegramHandle)","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"jeremiahlzz"},"content":"                \u0026\u0026 tags.equals(otherStudent.tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"darryl-chan"},"content":"        return Objects.hash(name, studentId, email, telegramHandle, tags);","lastModifiedDate":"2024-03-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"darryl-chan"},"content":"                .add(\"student id\", studentId)","lastModifiedDate":"2024-03-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"darryl-chan"},"content":"                .add(\"telegram handle\", telegramHandle)","lastModifiedDate":"2024-03-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":3,"darryl-chan":86,"marclamp":10,"jeremiahlzz":19,"-":83}},{"path":"src/main/java/educonnect/model/student/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" * Represents a Student\u0027s Student Id in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"public class StudentId {","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"            \"Student ID must start with A followed by 7 digits and end with a capital letter\";","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[aA]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     * Constructs an {@code StudentId}.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * @param studentId A valid student ID number.","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"        checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        value \u003d studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     * Returns true if a given string is a valid student ID number.","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"        if (!(other instanceof StudentId)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        StudentId otherId \u003d (StudentId) other;","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        return value.equals(otherId.value);","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"darryl-chan":15,"marclamp":3,"jeremiahlzz":2,"-":47}},{"path":"src/main/java/educonnect/model/student/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" * Represents a Student\u0027s phone number in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"public class TelegramHandle {","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"            \"Telegram handles should start with @\";","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^@.*\";","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Constructs a {@code TelegramHandle}.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * @param handle a valid {@code String} representing the telegram handle.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    public TelegramHandle(String handle) {","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(handle);","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"        checkArgument(isValidTelegramHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"        value \u003d handle;","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Returns true if a given string is a valid telegram handle.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        if (!(other instanceof TelegramHandle)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle otherHandle \u003d (TelegramHandle) other;","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        return value.equals(otherHandle.value);","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":1,"darryl-chan":11,"marclamp":4,"jeremiahlzz":2,"-":41}},{"path":"src/main/java/educonnect/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":" * As such, adding and updating of students uses {@code Student#isSameStudent(Student)} for equality","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":" * so as to ensure that the student being added or updated is unique in terms of identity in the UniqueStudentList.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":" * However, the removal of a student uses {@code Student#equals(Object)} so as to ensure that the student","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":" *","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":" *","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if the list contains an equivalent student unique identifier as the given argument.","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"     * The unique identifiers are student id, email and telegram handle","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"    public boolean containsSameUniqueIdentifier(Student toCheck) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudentId)","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"                || internalList.stream().anyMatch(toCheck::isSameEmail)","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"                || internalList.stream().anyMatch(toCheck::isSameTelegramHandle);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if the list contains a student with an equivalent student id as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    public boolean containsStudentId(Student toCheck) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudentId);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if the list contains an equivalent student id as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"    public boolean containsStudentId(StudentId studentIdToCheck) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(studentIdToCheck);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().anyMatch(student -\u003e student.isSameStudentId(studentIdToCheck));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"     * Returns Optional of Student if the list contains an equivalent student id as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().filter(student -\u003e student.isSameStudentId(studentId)).findFirst();","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if the list contains a student with equivalent email as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"    public boolean containsEmail(Student toCheck) {","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEmail);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if the list contains an equivalent email as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"    public boolean containsEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().anyMatch(student -\u003e student.isSameEmail(email));","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"     * Returns Optional of Student if the list contains an equivalent email as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().filter(student -\u003e student.isSameEmail(email)).findFirst();","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if the list contains a student with an equivalent telegram handle as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"    public boolean containsTelegramHandle(Student toCheck) {","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTelegramHandle);","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if the list contains an equivalent telegram handle as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"    public boolean containsTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().anyMatch(student -\u003e student.isSameTelegramHandle(telegramHandle));","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"     * Returns Optional of Student if the list contains an equivalent telegram handle as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"    public Optional\u003cStudent\u003e getStudentWithTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"        return internalList.stream().filter(student -\u003e student.isSameTelegramHandle(telegramHandle)).findFirst();","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"     * Adds a student to the list.","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"     * The student must not share the same unique identifier in the list.","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"jeremiahlzz"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"        if (containsSameUniqueIdentifier(toAdd)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"jeremiahlzz"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"jeremiahlzz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"jeremiahlzz"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"jeremiahlzz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"jeremiahlzz"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"jeremiahlzz"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"jeremiahlzz"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"jeremiahlzz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"jeremiahlzz"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"        if (!target.isSameStudentId(editedStudent) \u0026\u0026 containsStudentId(editedStudent)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"darryl-chan"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"        if (!target.isSameEmail(editedStudent) \u0026\u0026 containsEmail(editedStudent)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"darryl-chan"},"content":"        if (!target.isSameTelegramHandle(editedStudent) \u0026\u0026 containsTelegramHandle(editedStudent)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"jeremiahlzz"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"jeremiahlzz"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"jeremiahlzz"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"jeremiahlzz"},"content":"     * The student must exist in the list.","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"jeremiahlzz"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"jeremiahlzz"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"jeremiahlzz"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"jeremiahlzz"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"jeremiahlzz"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"jeremiahlzz"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"jeremiahlzz"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"jeremiahlzz"},"content":"        CollectionUtil.requireAllNonNull(students);","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"jeremiahlzz"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"jeremiahlzz"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"jeremiahlzz"},"content":"        internalList.setAll(students);","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"jeremiahlzz"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"jeremiahlzz"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"jeremiahlzz"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"jeremiahlzz"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":190,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"jeremiahlzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"jeremiahlzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"jeremiahlzz"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"jeremiahlzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"jeremiahlzz"},"content":"        if (!(other instanceof UniqueStudentList)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"jeremiahlzz"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"jeremiahlzz"},"content":"        UniqueStudentList otherUniqueStudentList \u003d (UniqueStudentList) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"jeremiahlzz"},"content":"        return internalList.equals(otherUniqueStudentList.internalList);","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"jeremiahlzz"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"jeremiahlzz"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":212,"author":{"gitId":"jeremiahlzz"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"jeremiahlzz"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":216,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"darryl-chan"},"content":"     * Returns true if {@code students} contains unique students that do not share the same unique identifier.","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":219,"author":{"gitId":"jeremiahlzz"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"jeremiahlzz"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"jeremiahlzz"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"darryl-chan"},"content":"                if (students.get(i).isSameUniqueIdentifier(students.get(j))) {","lastModifiedDate":"2024-03-13"},{"lineNumber":223,"author":{"gitId":"jeremiahlzz"},"content":"                    return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"jeremiahlzz"},"content":"                }","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"jeremiahlzz"},"content":"            }","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":227,"author":{"gitId":"jeremiahlzz"},"content":"        return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"darryl-chan":87,"jeremiahlzz":142}},{"path":"src/main/java/educonnect/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":" * Signals that the operation will result in duplicate Students","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" * (Students are considered duplicates if they share same identifiers).","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"        super(\"Operation would result in students with duplicate unique identifiers\");","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"darryl-chan":2,"jeremiahlzz":9}},{"path":"src/main/java/educonnect/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"jeremiahlzz":6}},{"path":"src/main/java/educonnect/model/student/timetable/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIXES_TIMETABLE_DAYS;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":" * Represents a day in a weekly timetable schedule.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"public class Day {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    private final DayOfWeek dayOfWeek;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    private final ArrayList\u003cPeriod\u003e periods;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * Constructor for JSON Serialisation, included only for JSON to work, not intended as a constructor to be used!","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    private Day() {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.dayOfWeek \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        this.periods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * Constructor for {@code Day} objects, uses {@code int} as input.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param day int representing the day of the week,","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     *            starts from 1, representing MONDAY,","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     *            till 7, representing SUNDAY.","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    public Day(int day) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        this.dayOfWeek \u003d DayOfWeek.of(day);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        this.periods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"     * Constructor for {@code Day} objects, uses {@code DayOfWeek} as input.","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     * @param day {@code DayOfWeek} enum, e.g {@code DayOfWeek.MONDAY}.","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    public Day(DayOfWeek day) {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        requireNonNull(day);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"        this.dayOfWeek \u003d day;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        this.periods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"     * Checks if the days are the same.","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"     * @param day Other day to be checked against.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"     * @return {@code True} if it is the same day.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    public boolean isSameDay(Day day) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"        return this.dayOfWeek.equals(day.dayOfWeek);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"     * Checks if the {@code Day} contains any {@code Period}.","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"    public boolean hasPeriods() {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"        return !this.periods.isEmpty();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"     * Adds a {@code Period} into this {@code Day}. The period cannot overlap with another period.","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"     * Automatically sorts all periods after each addition.","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"     * @param period a {@code Period} object.","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"     * @return {@code true} if added successfully.","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"    public boolean addPeriod(Period period) throws OverlapPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"        for (Period per : periods) {","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"            if (per.hasOverlap(period)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                throw new OverlapPeriodException();","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"        this.periods.add(period);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"        Collections.sort(this.periods);","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"     * Check if list of {@code Period} is sorted.","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"     * @return {@code true} if the list of periods is sorted.","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"    public boolean isSorted() {","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        return this.periods.stream().sorted().collect(Collectors.toList()).equals(this.periods);","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"     * Converts {@code Day} object back into its command {@code String}.","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"     * @return {@code String} command, e.g. \"mon: 13-15, 16-18\"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"    public String convertToCommandString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"        if (periods.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"            return \"\"; // returns empty string as no command specified will result in a day with no periods","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"        int index \u003d dayOfWeek.getValue() - 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"        sb.append(PREFIXES_TIMETABLE_DAYS[index]).append(\" \"); // appends the correct prefix","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"        for (Period period : periods) {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"            if (sb.length() !\u003d 5) { // 5 because no matter which prefix, with space, the length is always 5","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"                sb.append(\", \");","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"            sb.append(period.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"        sb.append(\"For \").append(dayOfWeek).append(\", schedule is:\\n\");","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"        for (Period per : periods) {","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"            sb.append(per);","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":126}},{"path":"src/main/java/educonnect/model/student/timetable/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static educonnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.InvalidPeriodException;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * Class for a {@code Period} of time.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"public class Period implements Comparable\u003cPeriod\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public static final String VALIDATION_REGEX \u003d \"([0-9]|1[0-9]|2[0-3])-([0-9]|1[0-9]|2[0-3])\";","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    public static final String PERIOD_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"            \"Periods should be in the format of time-time, \"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"            + \"where time can be any digit between 0 - 23. \\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"            + \"This means that all Period objects are tracked with a 24-hour clock.\";","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    private final String periodName;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    private final LocalTime timeStart;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    private final LocalTime timeEnd;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class. All parameters require non-null.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     * @param periodName the name of this {@code Period}","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * @param timeStart the start timing of this {@code Period}","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * @param timeEnd the end timing of this {@code Period}","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * @throws InvalidPeriodException if the name is invalid or if the end timing is before the start timing.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    public Period(String periodName, LocalTime timeStart, LocalTime timeEnd) throws InvalidPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        requireAllNonNull(periodName, timeStart, timeEnd);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"        if (timeEnd.isBefore(timeStart) || periodName.isBlank()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"            throw new InvalidPeriodException();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        this.periodName \u003d periodName.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        this.timeStart \u003d timeStart;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        this.timeEnd \u003d timeEnd;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class, accepts {@code String} as inputs.","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"     * @param periodName the name of this {@code Period}","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"     * @param periodString the period of this {@code Period}, accepts only \"0-23\" in this format.","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"     * @throws InvalidPeriodException if the name is invalid or if the end timing is before the start timing.","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    public Period(String periodName, String periodString) throws InvalidPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"        requireAllNonNull(periodName, periodString);","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"        String[] args \u003d periodString.split(\"-\");","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        LocalTime timeStart \u003d LocalTime.of(Integer.parseInt(args[0]), 0, 0);","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        LocalTime timeEnd \u003d LocalTime.of(Integer.parseInt(args[1]), 0, 0);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"        if (timeEnd.isBefore(timeStart) || periodName.isBlank()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"            throw new InvalidPeriodException();","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"        this.periodName \u003d periodName.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        this.timeStart \u003d timeStart;","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"        this.timeEnd \u003d timeEnd;","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"     * Constructor for JSON Serialisation, included only for JSON to work, not intended as a constructor to be used!","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"    private Period() {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"        this.periodName \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        this.timeStart \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"        this.timeEnd \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"     * Checks if a {@code String} input is in a valid period format.","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"     * @param period the period of this {@code Period}, accepts only \"0-23\" in this format.","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"     * @return {@code true} if the {@code String} is in the correct format.","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"    public static boolean isValidPeriod(String period) {","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"        return period.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"     * Checks if this {@code Period} has overlap with another {@code Period} object.","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"     * @param period Other {@code Period} object to check against.","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"     * @return {@code true} if there is any overlap.","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"    public boolean hasOverlap(Period period) {","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"        return this.timeStart.isBefore(period.timeEnd) \u0026\u0026 period.timeStart.isBefore(this.timeEnd);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"     * Converts {@code Period} object back into its command {@code String}.","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"     * @return {@code String} command, e.g. \"13-15\"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"    public String convertToCommandString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"        return timeStart.getHour() + \"-\" + timeEnd.getHour();","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"    public int compareTo(Period period) {","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"        return this.timeStart.compareTo(period.timeStart);","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"        if (!(obj instanceof Period)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"        Period period \u003d (Period) obj;","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"        return this.timeStart.equals(period.timeStart) \u0026\u0026 this.timeEnd.equals(period.timeEnd);","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"        return \"Period: (\" + this.timeStart + \" to \" + this.timeEnd + \")\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":124}},{"path":"src/main/java/educonnect/model/student/timetable/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.NumberOfDaysException;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * Represents the timetable of a student for a week.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"public class Timetable {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    private static final boolean TIMETABLE_7_DAYS \u003d false; // default is 5 days","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    private static final int NUMBER_OF_DAYS_MAX \u003d 7;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    private static final int NUMBER_OF_DAYS_TYPICAL \u003d 5;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private final ArrayList\u003cDay\u003e days;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    private final int numOfDays;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * Default constructor for {@code Timetable} class.","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * Checks against TIMETABLE_7_DAYS for 5 or 7 days in the week.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public Timetable() {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        this.numOfDays \u003d TIMETABLE_7_DAYS ? NUMBER_OF_DAYS_MAX : NUMBER_OF_DAYS_TYPICAL;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.days \u003d createTimetable(this.numOfDays);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Overloaded constructor where the number of days in a week can be specified.","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * @param numOfDays the number of days in a week to keep track of.","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    public Timetable(int numOfDays) {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        this.numOfDays \u003d numOfDays;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"        this.days \u003d createTimetable(this.numOfDays);","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     * Helper method to initialise empty timetable with the specified number of days.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     * Typical values in a week are 5 or 7. The week always start with Monday.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"     * @param numOfDays number of days in the week.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     * @return an {@code ArrayList\u003cDay\u003e} containing each day in the week.","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    private ArrayList\u003cDay\u003e createTimetable(int numOfDays) throws NumberOfDaysException {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        if (numOfDays \u003c 1 || numOfDays \u003e NUMBER_OF_DAYS_MAX) {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"            throw new NumberOfDaysException();","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e(numOfDays);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        for (int i \u003d 1; i \u003c\u003d numOfDays; i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            Day day \u003d new Day(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"            days.add(i - 1, day);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        return days;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"     * Gets a {@code boolean} of whether the timetable is 5 or 7 days.","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"     * @return {@code true} if 7 days, {@code false} if 5 days.","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"    public static boolean is7Days() {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"        return TIMETABLE_7_DAYS;","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"     * Adds a {@code Period} to a specified day.","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"     * @param dayNumber the {@code int} representing the day of the week, 1 represents Monday.","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"     * @param period a period of time to be added into the timetable.","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"     * @return true if successfully added.","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"    public boolean addPeriodToDay(int dayNumber, Period period) throws NumberOfDaysException, OverlapPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"        if (dayNumber \u003c 1 || dayNumber \u003e this.numOfDays) {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"            throw new NumberOfDaysException();","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"        Day day \u003d this.days.get(dayNumber - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        return day.addPeriod(period);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"     * Adds a Collection of {@code Period} to a specified day.","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"     * @param dayNumber the {@code int} representing the day of the week, 1 represents Monday.","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"     * @param periods a {@code Collection} of {@code Period} of time to be added into the timetable.","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"     * @return {@code false} if the day specified is not within the week, otherwise {@code true}.","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"     * @throws OverlapPeriodException if there is an overlap in the periods given.","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"    public boolean addPeriodsToDay(int dayNumber, ArrayList\u003cPeriod\u003e periods) throws OverlapPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        if (dayNumber \u003c 1 || dayNumber \u003e this.numOfDays) {","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"        for (Period period : periods) {","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"            addPeriodToDay(dayNumber, period);","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"        return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"     * Converts {@code Timetable} object back into its command {@code String}.","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"     * @return {@code String} command, e.g. \"mon: 13-15, 16-18 tue: 12-18 thu: 11-13, 19-21\"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"    public String convertToCommandString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"        for (Day day : days) {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"            sb.append(day.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"        sb.append(\"Timetable\\n\");","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"        for (Day eachDay : this.days) {","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"            sb.append(eachDay).append(\"\\n\");","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":122}},{"path":"src/main/java/educonnect/model/student/timetable/exceptions/InvalidPeriodException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":" * Signals an invalid {@code Period} being created.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":" * Invalid period can be from empty names, or when the end time is earlier than the start time.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class InvalidPeriodException extends IllegalArgumentException {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    private static final String MESSAGE \u003d \"Period name cannot be blank, \"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"                                          + \"or end time should not be earlier than start time!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"        return MESSAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":15}},{"path":"src/main/java/educonnect/model/student/timetable/exceptions/NumberOfDaysException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":" * Signals an invalid input to the number of days in the week.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":" * Invalid input refers to less than 1 or more than 7 in a week.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class NumberOfDaysException extends IllegalArgumentException {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    private static final String MESSAGE \u003d \"Number of days cannot be less than 1 or more than 7!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        return MESSAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":14}},{"path":"src/main/java/educonnect/model/student/timetable/exceptions/OverlapPeriodException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable.exceptions;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" * Signals that there are at least two or more {@code Period} objects with overlapping timeframes.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"public class OverlapPeriodException extends ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    private static final String MESSAGE \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"            \"There cannot be overlapping Periods.\"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"            + \"Ensure that each Period starts at least at the end time of the previous Period.\";","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public OverlapPeriodException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        super(MESSAGE);","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        return MESSAGE;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"marclamp":21}},{"path":"src/main/java/educonnect/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model.tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"            \"Tags names should be alphanumeric or with a \u0027-\u0027 between two alphanumeric description\";","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)?\";","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":3,"-":58}},{"path":"src/main/java/educonnect/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Period;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"        Timetable[] timetables \u003d getSampleTimetables();","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"        return new Student[] {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"            new Student(","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"                    new Name(\"Alex Yeoh\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"                    new StudentId(\"A1654327X\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"                    new TelegramHandle(\"@alyeoh\"),","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"                    getTagSet(\"tutorial-1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"                    timetables[0]),","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"            new Student(","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"                    new Name(\"John Smith\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"                    new StudentId(\"A9876543Y\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"                    new Email(\"johnsmith@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"                    new TelegramHandle(\"@johnsmith\"),","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                    getTagSet(\"tutorial-2\", \"weak-student\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                    timetables[1]),","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"            new Student(","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                    new Name(\"Emily Davis\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                    new StudentId(\"A5678901Z\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"                    new Email(\"emilydavis@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"                    new TelegramHandle(\"@davemily\"),","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"                    getTagSet(\"tutorial-3\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"                    timetables[2]),","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"            new Student(","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                    new Name(\"David Li\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                    new StudentId(\"A2345678U\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"                    new TelegramHandle(\"@davidlii2\"),","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                    getTagSet(\"tutorial-1\", \"strong-student\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                    timetables[3]),","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"            new Student(","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                    new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                    new StudentId(\"A8901234T\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"                    new TelegramHandle(\"@ifanhim\"),","lastModifiedDate":"2024-03-02"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                    getTagSet(\"tutorial-2\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                    timetables[4]),","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"            new Student(","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                    new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                    new StudentId(\"A3456789W\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"                    new TelegramHandle(\"@balakrishnan\"),","lastModifiedDate":"2024-03-02"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                    getTagSet(\"tutorial-2\", \"strong-student\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                    timetables[5])","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"     * Helper method to generate sample {@code Timetable} objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"     * @return an array of sample {@code Timetable} objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"    private static Timetable[] getSampleTimetables() {","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"            Timetable emptyTimetable \u003d new Timetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"            Timetable timetable1 \u003d new Timetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"            Timetable timetable2 \u003d new Timetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"            Timetable timetable3 \u003d new Timetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"            Timetable timetable4 \u003d new Timetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"            timetable1.addPeriodsToDay(1, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"13-15\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period2\", \"16-18\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"            timetable1.addPeriodsToDay(4, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"16-18\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period2\", \"13-15\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"            timetable2.addPeriodsToDay(2, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"11-13\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period2\", \"14-17\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"            timetable2.addPeriodsToDay(3, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"12-14\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period2\", \"14-16\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period3\", \"16-18\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"            timetable3.addPeriodsToDay(1, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"13-15\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period2\", \"16-18\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"            timetable3.addPeriodsToDay(2, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"16-18\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period2\", \"13-15\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"            timetable3.addPeriodsToDay(3, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"18-20\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"                            new Period(\"period2\", \"15-17\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"            timetable4.addPeriodsToDay(5, new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"                    List.of(new Period(\"period1\", \"12-18\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"            return new Timetable[]{timetable1, emptyTimetable, timetable2, timetable3, emptyTimetable, timetable4};","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"        } catch (OverlapPeriodException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"fy17ohhh":4,"darryl-chan":11,"marclamp":84,"jeremiahlzz":9,"-":29}},{"path":"src/main/java/educonnect/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fy17ohhh":5,"-":41}},{"path":"src/main/java/educonnect/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    private final String studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"    private final String telegramHandle;","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    private final Timetable timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"                              @JsonProperty(\"studentId\") String studentId,","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                              @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                              @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"                              @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"                              @JsonProperty(\"timetable\") Timetable timetable) {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"        studentId \u003d source.getStudentId().value;","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"        telegramHandle \u003d source.getTelegramHandle().value;","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"        timetable \u003d source.getTimetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2024-03-02"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"                StudentId.class.getSimpleName()));","lastModifiedDate":"2024-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"        final StudentId modelstudentId \u003d new StudentId(studentId);","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-02"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"                Email.class.getSimpleName()));","lastModifiedDate":"2024-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2024-03-02"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-02"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"                TelegramHandle.class.getSimpleName()));","lastModifiedDate":"2024-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"        if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"        final TelegramHandle modeltelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"jeremiahlzz"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"        if (timetable \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"                    Timetable.class.getSimpleName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"        return new Student(modelName, modelstudentId, modelEmail, modeltelegramHandle, modelTags, timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fy17ohhh":3,"darryl-chan":20,"marclamp":17,"jeremiahlzz":17,"-":68}},{"path":"src/main/java/educonnect/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fy17ohhh":3,"-":45}},{"path":"src/main/java/educonnect/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.FileUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.JsonUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fy17ohhh":7,"-":73}},{"path":"src/main/java/educonnect/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT_ID \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"        \"Students list contains duplicate student id(s).\";","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"            \"Students list contains duplicate email(s).\";","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    public static final String MESSAGE_DUPLICATE_TELEGRAM_HANDLE \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"            \"Students list contains duplicate telegram handle(s).\";","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given students.","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        this.students.addAll(students);","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"            if (addressBook.hasStudentId(student)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"            if (addressBook.hasEmail(student)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"            if (addressBook.hasTelegramHandle(student)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fy17ohhh":4,"darryl-chan":16,"jeremiahlzz":9,"-":44}},{"path":"src/main/java/educonnect/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.JsonUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fy17ohhh":5,"-":42}},{"path":"src/main/java/educonnect/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fy17ohhh":5,"-":27}},{"path":"src/main/java/educonnect/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":6,"-":72}},{"path":"src/main/java/educonnect/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fy17ohhh":6,"-":30}},{"path":"src/main/java/educonnect/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"fy17ohhh":6,"-":80}},{"path":"src/main/java/educonnect/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2324s2-cs2103-t14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public static final String HELP_MESSAGE_EXTENDED \u003d // Update as necessary (when more features/commands are added)","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"            \"\\n\\nFor a quick reference: \\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"            + \"\u0027add\u0027 - Adds a student to EduConnect\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"            + \"\u0027clear\u0027 - Clears all entries from EduConnect\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"            + \"\u0027delete\u0027 - Deletes the specified person from EduConnect\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"            + \"\u0027edit\u0027 - Edits an existing student in EduConnect\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"            + \"\u0027find\u0027 - Finds students whose names contain any of the given keywords\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"            + \"\u0027help\u0027 - Brings up the help page\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"            + \"\u0027list\u0027 - Shows a list of all students in EduConnect\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"            + \"\u0027exit\u0027 - Exits the program\\n\";","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        helpMessage.setText(HELP_MESSAGE + HELP_MESSAGE_EXTENDED);","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fy17ohhh":2,"marclamp":14,"-":95}},{"path":"src/main/java/educonnect/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"jeremiahlzz"},"content":"        return studentListPanel;","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"fy17ohhh"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fy17ohhh":8,"jeremiahlzz":6,"-":182}},{"path":"src/main/java/educonnect/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fy17ohhh":1,"-":27}},{"path":"src/main/java/educonnect/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":1,"-":27}},{"path":"src/main/java/educonnect/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"    public final Student student;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    private Label studentID;","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    private Label telegram;","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"    private Label timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a {@code StudentCard} with the given {@code Student} and index to display.","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"        this.student \u003d student;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"        studentID.setText(student.getStudentId().value);","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"        telegram.setText(student.getTelegramHandle().value);","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"        student.getTags().stream()","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"        timetable.setText(student.getTimetable().toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fy17ohhh":6,"marclamp":3,"jeremiahlzz":11,"-":41}},{"path":"src/main/java/educonnect/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":" * Panel containing the list of students.","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"        super(FXML);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"                setText(null);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"            } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"            }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"jeremiahlzz":49}},{"path":"src/main/java/educonnect/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fy17ohhh":1,"-":12}},{"path":"src/main/java/educonnect/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.MainApp;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fy17ohhh":5,"-":83}},{"path":"src/main/java/educonnect/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.MainApp;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fy17ohhh":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"      \u003cfont\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"      \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"fy17ohhh":5,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-style: italic bold;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-style: bold;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 20%);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 20%);","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"fy17ohhh"},"content":"    -fx-padding: 10 0 10 0;","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"fy17ohhh"},"content":".list-cell:filled {","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-radius: 30px;","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-width: 5;","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: #EFC59D;","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-color: #EFC59D;","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"fy17ohhh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":138,"author":{"gitId":"fy17ohhh"},"content":"     -fx-background-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"fy17ohhh"},"content":"     -fx-background-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"fy17ohhh"},"content":"     -fx-border-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 30%);","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-radius: 20px;","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"fy17ohhh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 30%);","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-color: derive(#749362, 30%);","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":181,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 30%);","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 50%);","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"fy17ohhh"},"content":".text-area .scroll-pane .viewport,","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"fy17ohhh"},"content":".text-area .content {","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: null;","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 20%);","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":223,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-03-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 25%);","lastModifiedDate":"2024-03-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 20%);","lastModifiedDate":"2024-03-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 50%);","lastModifiedDate":"2024-03-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2024-03-13"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: transparent #749362 transparent #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-color: #749362 #749362 white #749362;","lastModifiedDate":"2024-03-13"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-13"},{"lineNumber":323,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"fy17ohhh"},"content":"#filterField, #studentListPanel, #studentWebpage {","lastModifiedDate":"2024-03-13"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-13"},{"lineNumber":334,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-radius: 20px;","lastModifiedDate":"2024-03-13"},{"lineNumber":335,"author":{"gitId":"fy17ohhh"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2024-03-13"},{"lineNumber":336,"author":{"gitId":"fy17ohhh"},"content":"    -fx-control-inner-background:white;","lastModifiedDate":"2024-03-13"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: #cf580e;","lastModifiedDate":"2024-03-14"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2024-03-14"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"fy17ohhh":63,"-":288}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"    -fx-text-fill: #d06651 !important;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\"; /* The error class should always override the default text-fill style */","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background: #749362;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":4,"-":18}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"    -fx-font-family: \"Gill Sans\";","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    -fx-background-color: derive(#749362, 20%);","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"fy17ohhh":2,"-":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"EduConnect\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"      \u003cVBox prefHeight\u003d\"600\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        \u003cMenuBar prefHeight\u003d\"25\" fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        \u003cStackPane prefHeight\u003d\"50\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        \u003cHBox prefHeight\u003d\"500\" \u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"          \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" prefWidth\u003d\"100\"  styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        \u003cVBox fx:id\u003d\"studentList\" prefWidth\u003d\"350\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"        \u003cStackPane prefHeight\u003d\"50\" fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"fy17ohhh":14,"jeremiahlzz":1,"-":43}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"fy17ohhh":2,"-":6}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"      \u003cLabel fx:id\u003d\"studentID\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentID\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"   \u003cLabel fx:id\u003d\"timetable\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"\\$timetable\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":2,"marclamp":9,"-":23}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeremiahlzz":1,"-":7}},{"path":"src/test/java/educonnect/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"fy17ohhh":1,"-":88}},{"path":"src/test/java/educonnect/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"fy17ohhh":1,"-":26}},{"path":"src/test/java/educonnect/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"fy17ohhh":1,"-":15}},{"path":"src/test/java/educonnect/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":2,"-":133}},{"path":"src/test/java/educonnect/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.core.index;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"fy17ohhh":5,"-":63}},{"path":"src/test/java/educonnect/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"                .checkArgument(false, errorMessage));","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"fy17ohhh":7,"-":31}},{"path":"src/test/java/educonnect/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"fy17ohhh"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"fy17ohhh"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"fy17ohhh":7,"-":101}},{"path":"src/test/java/educonnect/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.Config;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fy17ohhh":8,"-":108}},{"path":"src/test/java/educonnect/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":4,"-":20}},{"path":"src/test/java/educonnect/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.SerializableTestClass;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.TestUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":3,"-":42}},{"path":"src/test/java/educonnect/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.commons.util;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"fy17ohhh":4,"-":62}},{"path":"src/test/java/educonnect/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"import educonnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"import educonnect.logic.commands.ListCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.storage.StorageManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"        assertParseException(deleteCommand, String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"darryl-chan"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + STUDENT_ID_DESC_AMY","lastModifiedDate":"2024-03-02"},{"lineNumber":170,"author":{"gitId":"darryl-chan"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-02"},{"lineNumber":171,"author":{"gitId":"jeremiahlzz"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fy17ohhh":13,"darryl-chan":11,"jeremiahlzz":7,"-":145}},{"path":"src/test/java/educonnect/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_NAME \u003d \"Barbara Choo\";","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_STUDENT_ID \u003d \"A7777777B\";","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_EMAIL \u003d \"barbarachoo@gmail.com\";","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d \"@babchoo\";","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validStudent)),","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateStudentId_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        Student duplicateStudentIdStudent \u003d new StudentBuilder(studentInList)","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"                .withName(VALID_NAME)","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(VALID_EMAIL)","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE)","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"                .build();","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(new AddCommand(duplicateStudentIdStudent), model,","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"                AddCommand.MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateEmail_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"        Student duplicateEmailStudent \u003d new StudentBuilder(studentInList)","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"                .withName(VALID_NAME)","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(VALID_STUDENT_ID)","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE)","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"                .build();","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(new AddCommand(duplicateEmailStudent), model,","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"                AddCommand.MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateTelegramHandle_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        Student duplicateTelegramHandleStudent \u003d new StudentBuilder(studentInList)","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"                .withName(VALID_NAME)","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(VALID_EMAIL)","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(VALID_STUDENT_ID)","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"                .build();","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"        assertCommandFailure(new AddCommand(duplicateTelegramHandleStudent), model,","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"                AddCommand.MESSAGE_DUPLICATE_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fy17ohhh":7,"darryl-chan":37,"jeremiahlzz":11,"-":29}},{"path":"src/test/java/educonnect/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validStudent)),","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateStudentId_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"        Student validStudent1 \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        Student validStudent2 \u003d new StudentBuilder().alternate()","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(validStudent1.getStudentId().value).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent1);","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        ModelStub modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        modelStub.addStudent(validStudent2);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        Assert.assertThrows(CommandException.class, AddCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"                .MESSAGE_DUPLICATE_STUDENT_ID, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateEmail_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        Student validStudent1 \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"        Student validStudent2 \u003d new StudentBuilder().alternate()","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(validStudent1.getEmail().value).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent1);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"        ModelStub modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"        modelStub.addStudent(validStudent2);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"        Assert.assertThrows(CommandException.class, AddCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"                .MESSAGE_DUPLICATE_EMAIL, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateTelegramId_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"        Student validStudent1 \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"        Student validStudent2 \u003d new StudentBuilder().alternate()","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(validStudent1.getTelegramHandle().value).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent1);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"        ModelStub modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"        modelStub.addStudent(validStudent2);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(CommandException.class, AddCommand","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"                .MESSAGE_DUPLICATE_TELEGRAM_HANDLE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"jeremiahlzz"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"jeremiahlzz"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalStudents.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"jeremiahlzz"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + TypicalStudents.ALICE + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"jeremiahlzz"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasSameUniqueIdentifier(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasStudentId(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cStudent\u003e getStudentWithStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasEmail(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cStudent\u003e getStudentWithEmail(Email email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasTelegramHandle(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"darryl-chan"},"content":"        public Optional\u003cStudent\u003e getStudentWithTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":209,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":212,"author":{"gitId":"darryl-chan"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-13"},{"lineNumber":213,"author":{"gitId":"darryl-chan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":214,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":216,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":217,"author":{"gitId":"darryl-chan"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"jeremiahlzz"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"jeremiahlzz"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"jeremiahlzz"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"jeremiahlzz"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"jeremiahlzz"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"jeremiahlzz"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":246,"author":{"gitId":"jeremiahlzz"},"content":"        private final Student student;","lastModifiedDate":"2024-03-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":249,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":250,"author":{"gitId":"jeremiahlzz"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":251,"author":{"gitId":"jeremiahlzz"},"content":"            requireNonNull(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"jeremiahlzz"},"content":"            this.student \u003d student;","lastModifiedDate":"2024-03-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"jeremiahlzz"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2024-03-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"jeremiahlzz"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":260,"author":{"gitId":"jeremiahlzz"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasStudentId(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":264,"author":{"gitId":"darryl-chan"},"content":"            requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":265,"author":{"gitId":"darryl-chan"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudentId);","lastModifiedDate":"2024-03-13"},{"lineNumber":266,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":267,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":268,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":269,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasEmail(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":270,"author":{"gitId":"darryl-chan"},"content":"            requireNonNull(student);","lastModifiedDate":"2024-03-13"},{"lineNumber":271,"author":{"gitId":"darryl-chan"},"content":"            return studentsAdded.stream().anyMatch(student::isSameEmail);","lastModifiedDate":"2024-03-13"},{"lineNumber":272,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":273,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":274,"author":{"gitId":"darryl-chan"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":275,"author":{"gitId":"darryl-chan"},"content":"        public boolean hasTelegramHandle(Student student) {","lastModifiedDate":"2024-03-13"},{"lineNumber":276,"author":{"gitId":"jeremiahlzz"},"content":"            requireNonNull(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":277,"author":{"gitId":"darryl-chan"},"content":"            return studentsAdded.stream().anyMatch(student::isSameTelegramHandle);","lastModifiedDate":"2024-03-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"jeremiahlzz"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":282,"author":{"gitId":"jeremiahlzz"},"content":"            requireNonNull(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":283,"author":{"gitId":"jeremiahlzz"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"fy17ohhh":11,"darryl-chan":102,"jeremiahlzz":34,"-":145}},{"path":"src/test/java/educonnect/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class ClearCommandTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"        Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"        Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"fy17ohhh":27,"jeremiahlzz":3}},{"path":"src/test/java/educonnect/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"fy17ohhh":1,"-":62}},{"path":"src/test/java/educonnect/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.VALID_TIMETABLE_2;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_NAME_JOHN \u003d \"John Doer\";","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_STUDENT_ID_AMY \u003d \"A0265491U\";","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_STUDENT_ID_BOB \u003d \"A0365501X\";","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_STUDENT_ID_JOHN \u003d \"A1897496H\";","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_EMAIL_JOHN \u003d \"johndoedoejohn@example.com\";","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_TELEGRAM_HANDLE_AMY \u003d \"@amyb\";","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_TELEGRAM_HANDLE_BOB \u003d \"@choobobco\";","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_TELEGRAM_HANDLE_JOHN \u003d \"@doedoejohnjohn.joe\";","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"    public static final String VALID_TAG_SMART \u003d \"smart\";","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"    public static final String STUDENT_ID_DESC_AMY \u003d \" \" + PREFIX_STUDENT_ID + VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"    public static final String STUDENT_ID_DESC_BOB \u003d \" \" + PREFIX_STUDENT_ID + VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    public static final String TELEGRAM_HANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"    public static final String TELEGRAM_HANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"    public static final String TIMETABLE_DESC_VALID1 \u003d \" \" + PREFIX_TIMETABLE + VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"    public static final String TIMETABLE_DESC_VALID2 \u003d \" \" + PREFIX_TIMETABLE + VALID_TIMETABLE_2;","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"    public static final String INVALID_STUDENT_ID_DESC \u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"        \" \" + PREFIX_STUDENT_ID + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    public static final String INVALID_TELEGRAM_HANDLE_DESC \u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"        \" \" + PREFIX_TELEGRAM_HANDLE; // empty string not allowed for addresses","lastModifiedDate":"2024-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"    public static final String INVALID_TIMETABLE_DESC \u003d \" \" + PREFIX_TIMETABLE","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                                                        + \"mon: 13 to 15\" // \u0027to\u0027 is not allowed, use \u0027-\u0027","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                                                        + \"tue: 2pm-4pm \" // \u0027pm\u0027 is not recognised, use 0-23 clock","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                                                        + \"wed: 1-3 4-7 \" // no \u0027,\u0027 between periods","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"                                                        + \"thu: 24-27 \" // numbers above 23 not recognised, use 0-23","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                                                        + \"fri 12-14\"; // no \u0027:\u0027 after \u0027fri\u0027","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_JOHN;","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(VALID_STUDENT_ID_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-02"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY)","lastModifiedDate":"2024-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(VALID_STUDENT_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-02"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"        DESC_JOHN \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_JOHN)","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(VALID_STUDENT_ID_JOHN).withEmail(VALID_EMAIL_JOHN)","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_JOHN)","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"                .withTags(VALID_TAG_SMART).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"jeremiahlzz"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"jeremiahlzz"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"     * Potentially buggy as names can be duplicated in the future","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"jeremiahlzz"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"jeremiahlzz"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"jeremiahlzz"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"jeremiahlzz"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"darryl-chan"},"content":"        final String name \u003d student.getName().fullName;","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"darryl-chan"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(name));","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fy17ohhh":9,"darryl-chan":31,"marclamp":12,"jeremiahlzz":15,"-":87}},{"path":"src/test/java/educonnect/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.testutil.TypicalStudents.JOHHNY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"    public void execute_validStudentIdUnfilteredList_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"        StudentId studentId \u003d studentToDelete.getStudentId();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setStudentId(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"                Messages.format(studentToDelete));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    public void execute_validEmaildUnfilteredList_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        Email email \u003d studentToDelete.getEmail();","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setEmail(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"                Messages.format(studentToDelete));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"    public void execute_validTelegramHandleUnfilteredList_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle telegramHandle \u003d studentToDelete.getTelegramHandle();","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setTelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"                Messages.format(studentToDelete));","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"    public void execute_validAllUniqueIdentifiersUnfilteredList_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle telegramHandle \u003d studentToDelete.getTelegramHandle();","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        Email email \u003d studentToDelete.getEmail();","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"        StudentId studentId \u003d studentToDelete.getStudentId();","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setTelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setEmail(email);","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setStudentId(studentId);","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"jeremiahlzz"},"content":"                Messages.format(studentToDelete));","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"    public void execute_noStudentIdFound_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"        StudentId notInList \u003d JOHHNY.getStudentId();","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setStudentId(notInList);","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NO_STUDENT_FOUND);","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"darryl-chan"},"content":"    public void execute_noEmailFound_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"        Email notInList \u003d JOHHNY.getEmail();","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setEmail(notInList);","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NO_STUDENT_FOUND);","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"    public void execute_noTelegramHandleFound_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle notInList \u003d JOHHNY.getTelegramHandle();","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setTelegramHandle(notInList);","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NO_STUDENT_FOUND);","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor1 \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor2 \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor1.setStudentId(new StudentId(VALID_STUDENT_ID_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor2.setStudentId(new StudentId(VALID_STUDENT_ID_BOB));","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(deleteStudentDescriptor1);","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(deleteStudentDescriptor2);","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(deleteStudentDescriptor1);","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"jeremiahlzz"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setStudentId(new StudentId(VALID_STUDENT_ID_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteStudentDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"darryl-chan"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{deleteStudentDescriptor\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"darryl-chan"},"content":"                + deleteStudentDescriptor + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"jeremiahlzz"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"jeremiahlzz"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"jeremiahlzz"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fy17ohhh":9,"darryl-chan":110,"jeremiahlzz":16,"-":68}},{"path":"src/test/java/educonnect/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"                Messages.format(editedStudent));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                .withStudentId(VALID_STUDENT_ID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                .withTimetable(VALID_TIMETABLE_1).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                .withStudentId(VALID_STUDENT_ID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                .withTimetable(VALID_TIMETABLE_1).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"                Messages.format(editedStudent));","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"                Messages.format(editedStudent));","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"jeremiahlzz"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"                Messages.format(editedStudent));","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateStudentIdUnfilteredList_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"jeremiahlzz"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"        Student secondStudent \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(secondStudent)","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(firstStudent.getStudentId().value).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateEmailUnfilteredList_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"        Student secondStudent \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"darryl-chan"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(secondStudent)","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(firstStudent.getEmail().value).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"    public void execute_duplicateTelegramHandleUnfilteredList_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"darryl-chan"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"darryl-chan"},"content":"        Student secondStudent \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(secondStudent)","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(firstStudent.getTelegramHandle().value).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"darryl-chan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"jeremiahlzz"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"jeremiahlzz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"fy17ohhh"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"jeremiahlzz"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"jeremiahlzz"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"jeremiahlzz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"jeremiahlzz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"jeremiahlzz"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"jeremiahlzz"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"jeremiahlzz"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"jeremiahlzz"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"marclamp"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"marclamp"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY));","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB));","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"jeremiahlzz"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"jeremiahlzz"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editStudentDescriptor\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"jeremiahlzz"},"content":"                + editStudentDescriptor + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"fy17ohhh":9,"darryl-chan":31,"marclamp":13,"jeremiahlzz":53,"-":101}},{"path":"src/test/java/educonnect/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"        assertEquals(DESC_AMY, descriptorWithSameValues);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        assertEquals(DESC_AMY, DESC_AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(null, DESC_AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(5, DESC_AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(DESC_AMY, DESC_BOB);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withStudentId(VALID_STUDENT_ID_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        // different timetable -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTimetable(VALID_TIMETABLE_1).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"        String expected \u003d EditStudentDescriptor.class.getCanonicalName()","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                          + \"{name\u003d\" + editStudentDescriptor.getName().orElse(null)","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                          + \", student id\u003d\" + editStudentDescriptor.getStudentId().orElse(null)","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                          + \", email\u003d\" + editStudentDescriptor.getEmail().orElse(null)","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"                          + \", telegram handle\u003d\" + editStudentDescriptor.getTelegramHandle().orElse(null)","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                          + \", tags\u003d\" + editStudentDescriptor.getTags().orElse(null)","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                          + \", timetable\u003d\" + editStudentDescriptor.getTimetable().orElse(null) + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expected, editStudentDescriptor.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"fy17ohhh":6,"darryl-chan":2,"marclamp":23,"jeremiahlzz":12,"-":34}},{"path":"src/test/java/educonnect/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"fy17ohhh":5,"-":15}},{"path":"src/test/java/educonnect/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"                new NameContainsKeywordsPredicate(\"first\");","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"                new NameContainsKeywordsPredicate(\"second\");","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Zero-Keyword-String-No-Match\");","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    public void execute_keywords_multipleStudentsFound() {","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Me\");","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(Arrays.asList(TypicalStudents.BENSON,","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"                TypicalStudents.DANIEL, TypicalStudents.ELLE), model.getFilteredStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"keyword\");","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"        return new NameContainsKeywordsPredicate(userInput);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"fy17ohhh":7,"darryl-chan":9,"jeremiahlzz":12,"-":61}},{"path":"src/test/java/educonnect/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"fy17ohhh":5,"-":15}},{"path":"src/test/java/educonnect/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"        CommandTestUtil.showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"fy17ohhh":5,"jeremiahlzz":3,"-":30}},{"path":"src/test/java/educonnect/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_TIMETABLE_DESC;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.STUDENT_ID_DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.commands.CommandTestUtil.TIMETABLE_DESC_VALID1;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.commands.CommandTestUtil.TIMETABLE_DESC_VALID2;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.DEFAULT_EMPTY_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"import educonnect.testutil.TypicalTimetableAndValues;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"                .withTimetable(VALID_TIMETABLE_1)","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-02"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_FRIEND + TIMETABLE_DESC_VALID1,","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"                NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"                + TAG_DESC_FRIEND + TIMETABLE_DESC_VALID2,","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"                new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"        // no timetable in command, defaults to empty timetable","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"        Student expectedStudentWithNoTimetable \u003d new StudentBuilder(AMY).withTimetable(DEFAULT_EMPTY_TIMETABLE).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"                NAME_DESC_AMY + STUDENT_ID_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"                + TELEGRAM_HANDLE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"                new AddCommand(expectedStudentWithNoTimetable));","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"        String validExpectedStudentString \u003d NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_FRIEND + TIMETABLE_DESC_VALID1;","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"        // multiple student IDs","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_AMY + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT_ID));","lastModifiedDate":"2024-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"        // multiple handles","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, TELEGRAM_HANDLE_DESC_AMY + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"jeremiahlzz"},"content":"                validExpectedStudentString + STUDENT_ID_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"jeremiahlzz"},"content":"                        + NAME_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME,","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL, PREFIX_STUDENT_ID, PREFIX_TIMETABLE));","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"        // multiple timetables","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"        assertParseFailure(parser, TIMETABLE_DESC_VALID1 + validExpectedStudentString,","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIMETABLE));","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"        // invalid student ID","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, INVALID_STUDENT_ID_DESC + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT_ID));","lastModifiedDate":"2024-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"        // invalid handle","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, INVALID_TELEGRAM_HANDLE_DESC + validExpectedStudentString,","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, validExpectedStudentString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, validExpectedStudentString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, validExpectedStudentString + INVALID_STUDENT_ID_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT_ID));","lastModifiedDate":"2024-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"marclamp"},"content":"        // invalid handle","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"jeremiahlzz"},"content":"        assertParseFailure(parser, validExpectedStudentString + INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-02"},{"lineNumber":158,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"marclamp"},"content":"        // invalid timetable","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"marclamp"},"content":"        assertParseFailure(parser, validExpectedStudentString + INVALID_TIMETABLE_DESC,","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"marclamp"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIMETABLE));","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"jeremiahlzz"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"darryl-chan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + STUDENT_ID_DESC_AMY + EMAIL_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY,","lastModifiedDate":"2024-03-02"},{"lineNumber":169,"author":{"gitId":"jeremiahlzz"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB,","lastModifiedDate":"2024-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_STUDENT_ID_BOB + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB,","lastModifiedDate":"2024-03-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_ID_DESC_BOB + VALID_EMAIL_BOB + TELEGRAM_HANDLE_DESC_BOB,","lastModifiedDate":"2024-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"marclamp"},"content":"        // missing handle prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + VALID_TELEGRAM_HANDLE_BOB,","lastModifiedDate":"2024-03-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_STUDENT_ID_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-03"},{"lineNumber":194,"author":{"gitId":"darryl-chan"},"content":"                + VALID_TELEGRAM_HANDLE_BOB, expectedMessage);","lastModifiedDate":"2024-03-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2024-03-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"darryl-chan"},"content":"        // invalid student id","lastModifiedDate":"2024-03-02"},{"lineNumber":204,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_STUDENT_ID_DESC + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2024-03-02"},{"lineNumber":205,"author":{"gitId":"darryl-chan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":206,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":207,"author":{"gitId":"darryl-chan"},"content":"        // invalid phone","lastModifiedDate":"2024-03-02"},{"lineNumber":208,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_STUDENT_ID_DESC + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2024-03-02"},{"lineNumber":209,"author":{"gitId":"darryl-chan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_ID_DESC_BOB + INVALID_EMAIL_DESC + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2024-03-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"darryl-chan"},"content":"        // invalid telegram handle","lastModifiedDate":"2024-03-02"},{"lineNumber":216,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + INVALID_TELEGRAM_HANDLE_DESC","lastModifiedDate":"2024-03-02"},{"lineNumber":217,"author":{"gitId":"darryl-chan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":218,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":219,"author":{"gitId":"darryl-chan"},"content":"        // invalid telegram handle","lastModifiedDate":"2024-03-02"},{"lineNumber":220,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + INVALID_TELEGRAM_HANDLE_DESC","lastModifiedDate":"2024-03-02"},{"lineNumber":221,"author":{"gitId":"darryl-chan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2024-03-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-03"},{"lineNumber":229,"author":{"gitId":"darryl-chan"},"content":"                + INVALID_TELEGRAM_HANDLE_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-03"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":232,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-02"},{"lineNumber":233,"author":{"gitId":"darryl-chan"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":236,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"marclamp"},"content":"    public void tokenizeForTimetable_emptyInput_returnsEmptyArrayList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":239,"author":{"gitId":"marclamp"},"content":"        assertEquals(Stream.generate(() -\u003e \"\")","lastModifiedDate":"2024-03-15"},{"lineNumber":240,"author":{"gitId":"marclamp"},"content":"                        .limit(Timetable.is7Days() ? 7 : 5)","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"marclamp"},"content":"                        .collect(Collectors.toCollection(ArrayList::new)),","lastModifiedDate":"2024-03-15"},{"lineNumber":242,"author":{"gitId":"marclamp"},"content":"                AddCommandParser.tokenizeForTimetable(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":243,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":244,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":245,"author":{"gitId":"marclamp"},"content":"    public void tokenizeForTimetable_validInputs_returnsArrayList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":246,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.VALID_TIMETABLE_INPUT_1,","lastModifiedDate":"2024-03-15"},{"lineNumber":247,"author":{"gitId":"marclamp"},"content":"                AddCommandParser.tokenizeForTimetable(","lastModifiedDate":"2024-03-15"},{"lineNumber":248,"author":{"gitId":"marclamp"},"content":"                        TypicalTimetableAndValues.VALID_ADD_COMMAND_TIMETABLE_ARGUMENTS_1));","lastModifiedDate":"2024-03-15"},{"lineNumber":249,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":250,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.VALID_TIMETABLE_INPUT_2,","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"marclamp"},"content":"                AddCommandParser.tokenizeForTimetable(","lastModifiedDate":"2024-03-15"},{"lineNumber":252,"author":{"gitId":"marclamp"},"content":"                        TypicalTimetableAndValues.VALID_ADD_COMMAND_TIMETABLE_ARGUMENTS_2));","lastModifiedDate":"2024-03-15"},{"lineNumber":253,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fy17ohhh":10,"darryl-chan":62,"marclamp":63,"jeremiahlzz":27,"-":92}},{"path":"src/test/java/educonnect/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.ListCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + PREFIX_STUDENT_ID + VALID_STUDENT_ID_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setStudentId(new StudentId(VALID_STUDENT_ID_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(new DeleteCommand(deleteStudentDescriptor), command);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor).toString(), command.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"        String keyword \u003d \"foo bar baz\";","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"                FindCommand.COMMAND_WORD + \" \" + keyword);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keyword)), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"fy17ohhh":13,"darryl-chan":11,"marclamp":1,"jeremiahlzz":13,"-":65}},{"path":"src/test/java/educonnect/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"fy17ohhh":1,"-":149}},{"path":"src/test/java/educonnect/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.Command;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"fy17ohhh":3,"-":36}},{"path":"src/test/java/educonnect/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"        DeleteCommand.DeleteStudentDescriptor deleteStudentDescriptor \u003d new DeleteCommand.DeleteStudentDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"        deleteStudentDescriptor.setStudentId(new StudentId(VALID_STUDENT_ID_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \" + PREFIX_STUDENT_ID + VALID_STUDENT_ID_AMY,","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"                new DeleteCommand(deleteStudentDescriptor));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"fy17ohhh":5,"darryl-chan":8,"-":24}},{"path":"src/test/java/educonnect/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.STUDENT_ID_DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.Messages;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_ID_DESC, StudentId.MESSAGE_CONSTRAINTS); // invalid student id","lastModifiedDate":"2024-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"            TelegramHandle.MESSAGE_CONSTRAINTS); // invalid telegram handle","lastModifiedDate":"2024-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        // invalid student id followed by valid email","lastModifiedDate":"2024-03-02"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_ID_DESC + EMAIL_DESC_AMY, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"                + VALID_TELEGRAM_HANDLE_AMY + VALID_STUDENT_ID_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"jeremiahlzz"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"        String userInput \u003d targetIndex.getOneBased() + STUDENT_ID_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-02"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(VALID_STUDENT_ID_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY)","lastModifiedDate":"2024-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"jeremiahlzz"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"        String userInput \u003d targetIndex.getOneBased() + STUDENT_ID_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"                .withStudentId(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"jeremiahlzz"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"darryl-chan"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"darryl-chan"},"content":"        // student id","lastModifiedDate":"2024-03-02"},{"lineNumber":146,"author":{"gitId":"darryl-chan"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-02"},{"lineNumber":147,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withStudentId(VALID_STUDENT_ID_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"marclamp"},"content":"        // handle","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"darryl-chan"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-02"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"jeremiahlzz"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"darryl-chan"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_STUDENT_ID_DESC + STUDENT_ID_DESC_BOB;","lastModifiedDate":"2024-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT_ID));","lastModifiedDate":"2024-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"darryl-chan"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENT_ID_DESC_BOB + INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2024-03-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"darryl-chan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT_ID));","lastModifiedDate":"2024-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"marclamp"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"darryl-chan"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENT_ID_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-02"},{"lineNumber":188,"author":{"gitId":"darryl-chan"},"content":"                + TAG_DESC_FRIEND + STUDENT_ID_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-02"},{"lineNumber":189,"author":{"gitId":"darryl-chan"},"content":"                + STUDENT_ID_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT_ID, PREFIX_EMAIL, PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"darryl-chan"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_STUDENT_ID_DESC","lastModifiedDate":"2024-03-03"},{"lineNumber":196,"author":{"gitId":"darryl-chan"},"content":"                + INVALID_TELEGRAM_HANDLE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-03"},{"lineNumber":197,"author":{"gitId":"darryl-chan"},"content":"                + INVALID_STUDENT_ID_DESC + INVALID_TELEGRAM_HANDLE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"darryl-chan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT_ID, PREFIX_EMAIL, PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"jeremiahlzz"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"jeremiahlzz"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"fy17ohhh":8,"darryl-chan":54,"marclamp":2,"jeremiahlzz":23,"-":126}},{"path":"src/test/java/educonnect/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"fy17ohhh":18,"darryl-chan":1}},{"path":"src/test/java/educonnect/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Period;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.NumberOfDaysException;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"import educonnect.testutil.TypicalTimetableAndValues;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"    private static final String INVALID_STUDENT_ID \u003d \"B1234567X\";","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"johndoe\";","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_STUDENT_ID \u003d \"A1234567U\";","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d \"@smithSon\";","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"    public void parseStudentId_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentId(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"    public void parseStudentId_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentId(INVALID_STUDENT_ID));","lastModifiedDate":"2024-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"    public void parseStudentId_validValueWithoutWhitespace_returnsStudentId() throws Exception {","lastModifiedDate":"2024-03-02"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2024-03-02"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(VALID_STUDENT_ID));","lastModifiedDate":"2024-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"    public void parseStudentId_validValueWithWhitespace_returnsTrimmedStudentId() throws Exception {","lastModifiedDate":"2024-03-02"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_STUDENT_ID + WHITESPACE;","lastModifiedDate":"2024-03-02"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2024-03-02"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(phoneWithWhitespace));","lastModifiedDate":"2024-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"    public void parseTelegramHandle_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegramHandle(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"    public void parseTelegramHandle_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegramHandle(INVALID_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"    public void parseTelegramHandle_validValueWithoutWhitespace_returnsTelegramHandle() throws Exception {","lastModifiedDate":"2024-03-02"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-02"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(VALID_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"    public void parseTelegramHandle_validValueWithWhitespace_returnsTrimmedTelegramHandle() throws Exception {","lastModifiedDate":"2024-03-02"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM_HANDLE + WHITESPACE;","lastModifiedDate":"2024-03-02"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-02"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(addressWithWhitespace));","lastModifiedDate":"2024-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":204,"author":{"gitId":"marclamp"},"content":"    public void parsePeriod_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePeriod(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"marclamp"},"content":"    public void parsePeriod_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"marclamp"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePeriod(TypicalTimetableAndValues.INVALID_PERIOD1));","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"marclamp"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePeriod(TypicalTimetableAndValues.INVALID_PERIOD2));","lastModifiedDate":"2024-03-15"},{"lineNumber":212,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"marclamp"},"content":"    public void parsePeriod_validValueWithoutWhitespace_returnsPeriod() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"marclamp"},"content":"        Period actualPeriod1 \u003d ParserUtil.parsePeriod(TypicalTimetableAndValues.VALID_PERIOD1);","lastModifiedDate":"2024-03-15"},{"lineNumber":217,"author":{"gitId":"marclamp"},"content":"        Period actualPeriod2 \u003d ParserUtil.parsePeriod(TypicalTimetableAndValues.VALID_PERIOD3);","lastModifiedDate":"2024-03-15"},{"lineNumber":218,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.EXPECTED_PERIOD_1, actualPeriod1);","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.EXPECTED_PERIOD_3, actualPeriod2);","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"marclamp"},"content":"    public void parsePeriod_validValueWithWhitespace_returnsPeriodWithTrimmedName() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"marclamp"},"content":"        Period actualPeriod1 \u003d ParserUtil.parsePeriod(","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"marclamp"},"content":"                WHITESPACE + TypicalTimetableAndValues.VALID_PERIOD1 + WHITESPACE);","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"marclamp"},"content":"        Period actualPeriod2 \u003d ParserUtil.parsePeriod(","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"marclamp"},"content":"                WHITESPACE + TypicalTimetableAndValues.VALID_PERIOD2 + WHITESPACE);","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":230,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.EXPECTED_PERIOD_1, actualPeriod1);","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.EXPECTED_PERIOD_2, actualPeriod2);","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":233,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":234,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":235,"author":{"gitId":"marclamp"},"content":"    public void parsePeriods_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":236,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePeriods(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":239,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":240,"author":{"gitId":"marclamp"},"content":"    public void parsePeriods_emptyString_returnsOptionalEmpty() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":241,"author":{"gitId":"marclamp"},"content":"        String empty \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":242,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":243,"author":{"gitId":"marclamp"},"content":"        assertEquals(Optional.empty(), ParserUtil.parsePeriods(empty));","lastModifiedDate":"2024-03-15"},{"lineNumber":244,"author":{"gitId":"marclamp"},"content":"        assertEquals(Optional.empty(), ParserUtil.parsePeriods(WHITESPACE));","lastModifiedDate":"2024-03-15"},{"lineNumber":245,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":246,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":247,"author":{"gitId":"marclamp"},"content":"    public void parsePeriods_stringWithInvalidValues_throwsParseException() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":248,"author":{"gitId":"marclamp"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":249,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parsePeriods(TypicalTimetableAndValues.FULL_STRING_WITH_INVALID_INPUT));","lastModifiedDate":"2024-03-15"},{"lineNumber":250,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":252,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":253,"author":{"gitId":"marclamp"},"content":"    public void parsePeriods_stringWithValidValuesWithoutWhitespace_returnsOptionalArrayList() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":254,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.VALID_PERIOD_OPTIONAL_ARRAYLIST,","lastModifiedDate":"2024-03-15"},{"lineNumber":255,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parsePeriods(TypicalTimetableAndValues.FULL_STRING_VALID_INPUT));","lastModifiedDate":"2024-03-15"},{"lineNumber":256,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":257,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":258,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":259,"author":{"gitId":"marclamp"},"content":"    public void parsePeriods_stringWithValidValuesWithWhitespace_returnsOptionalArrayListWithTrimmedPeriods()","lastModifiedDate":"2024-03-15"},{"lineNumber":260,"author":{"gitId":"marclamp"},"content":"            throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":261,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.VALID_PERIOD_OPTIONAL_ARRAYLIST,","lastModifiedDate":"2024-03-15"},{"lineNumber":262,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parsePeriods(TypicalTimetableAndValues.FULL_STRING_WITH_WHITESPACE_VALID_INPUT));","lastModifiedDate":"2024-03-15"},{"lineNumber":263,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":264,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":265,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":266,"author":{"gitId":"marclamp"},"content":"    public void parseDay_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":267,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDay(1, null, null));","lastModifiedDate":"2024-03-15"},{"lineNumber":268,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":269,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":270,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":271,"author":{"gitId":"marclamp"},"content":"    public void parseDay_invalidInputs() throws OverlapPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":272,"author":{"gitId":"marclamp"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-15"},{"lineNumber":273,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":274,"author":{"gitId":"marclamp"},"content":"        // invalid inputs, day cannot be 0 -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":275,"author":{"gitId":"marclamp"},"content":"        assertThrows(NumberOfDaysException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":276,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parseDay(0, timetable,","lastModifiedDate":"2024-03-15"},{"lineNumber":277,"author":{"gitId":"marclamp"},"content":"                        TypicalTimetableAndValues.INVALID_PERIOD_OPTIONAL_ARRAYLIST));","lastModifiedDate":"2024-03-15"},{"lineNumber":278,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":279,"author":{"gitId":"marclamp"},"content":"        // invalid inputs, allPeriods contains invalid inputs (overlap periods) -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":280,"author":{"gitId":"marclamp"},"content":"        assertThrows(OverlapPeriodException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":281,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parseDay(1, timetable,","lastModifiedDate":"2024-03-15"},{"lineNumber":282,"author":{"gitId":"marclamp"},"content":"                        TypicalTimetableAndValues.INVALID_PERIOD_OPTIONAL_ARRAYLIST));","lastModifiedDate":"2024-03-15"},{"lineNumber":283,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":284,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":285,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":286,"author":{"gitId":"marclamp"},"content":"    public void parseDay_validInputs_returnsTimetableWithUpdatedDay() throws OverlapPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":287,"author":{"gitId":"marclamp"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-15"},{"lineNumber":288,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":289,"author":{"gitId":"marclamp"},"content":"        String expectedTimetable \u003d \"Timetable\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":290,"author":{"gitId":"marclamp"},"content":"                                   + \"For MONDAY, schedule is:\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":291,"author":{"gitId":"marclamp"},"content":"                                   + \"Period: (13:00 to 15:00)\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":292,"author":{"gitId":"marclamp"},"content":"                                   + \"Period: (16:00 to 18:00)\\n\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":293,"author":{"gitId":"marclamp"},"content":"                                   + \"For TUESDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":294,"author":{"gitId":"marclamp"},"content":"                                   + \"For WEDNESDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":295,"author":{"gitId":"marclamp"},"content":"                                   + \"For THURSDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":296,"author":{"gitId":"marclamp"},"content":"                                   + \"For FRIDAY, schedule is:\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":297,"author":{"gitId":"marclamp"},"content":"                                   + \"Period: (13:00 to 15:00)\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":298,"author":{"gitId":"marclamp"},"content":"                                   + \"Period: (16:00 to 18:00)\\n\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":299,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":300,"author":{"gitId":"marclamp"},"content":"        if (Timetable.is7Days()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":301,"author":{"gitId":"marclamp"},"content":"            expectedTimetable +\u003d \"For SATURDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":302,"author":{"gitId":"marclamp"},"content":"                                 + \"For SUNDAY, schedule is:\\n\\n\";","lastModifiedDate":"2024-03-15"},{"lineNumber":303,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":304,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":305,"author":{"gitId":"marclamp"},"content":"        // valid inputs, successfully added -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":306,"author":{"gitId":"marclamp"},"content":"        assertTrue(ParserUtil.parseDay(1, timetable, TypicalTimetableAndValues.VALID_PERIOD_OPTIONAL_ARRAYLIST));","lastModifiedDate":"2024-03-15"},{"lineNumber":307,"author":{"gitId":"marclamp"},"content":"        assertTrue(ParserUtil.parseDay(5, timetable, TypicalTimetableAndValues.VALID_PERIOD_OPTIONAL_ARRAYLIST));","lastModifiedDate":"2024-03-15"},{"lineNumber":308,"author":{"gitId":"marclamp"},"content":"        assertEquals(expectedTimetable, timetable.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":309,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":310,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":311,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":312,"author":{"gitId":"marclamp"},"content":"    public void parseTimetable_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":313,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTimetable(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":314,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":315,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":316,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":317,"author":{"gitId":"marclamp"},"content":"    public void parseTimetable_validInputs_returnsCompletedTimetable() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":318,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.VALID_TIMETABLE_1.toString(),","lastModifiedDate":"2024-03-17"},{"lineNumber":319,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parseTimetable(TypicalTimetableAndValues.VALID_TIMETABLE_INPUT_1).toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":320,"author":{"gitId":"marclamp"},"content":"        assertEquals(TypicalTimetableAndValues.VALID_TIMETABLE_2.toString(),","lastModifiedDate":"2024-03-17"},{"lineNumber":321,"author":{"gitId":"marclamp"},"content":"                ParserUtil.parseTimetable(TypicalTimetableAndValues.VALID_TIMETABLE_INPUT_2).toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":322,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"fy17ohhh":5,"darryl-chan":24,"marclamp":132,"jeremiahlzz":7,"-":155}},{"path":"src/test/java/educonnect/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(TypicalStudents.ALICE, editedAlice);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasSameUniqueIdentifier(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(addressBook.hasSameUniqueIdentifier(TypicalStudents.ALICE));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"        addressBook.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(addressBook.hasSameUniqueIdentifier(TypicalStudents.ALICE));","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"    public void hasStudent_studentWithSameUniqueIdentifierInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-02"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(addressBook.hasSameUniqueIdentifier(editedAlice));","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{students\u003d\" + addressBook.getStudentList() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"jeremiahlzz"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"jeremiahlzz"},"content":"            this.students.setAll(students);","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"jeremiahlzz"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"jeremiahlzz"},"content":"            return students;","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"fy17ohhh":1,"darryl-chan":10,"jeremiahlzz":28,"-":72}},{"path":"src/test/java/educonnect/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        Assertions.assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasSameUniqueIdentifier(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(modelManager.hasSameUniqueIdentifier(TypicalStudents.ALICE));","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"        modelManager.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(modelManager.hasSameUniqueIdentifier(TypicalStudents.ALICE));","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(TypicalStudents.ALICE)","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"                .withStudent(TypicalStudents.BENSON).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"        String keywords \u003d TypicalStudents.ALICE.getName().fullName;","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"jeremiahlzz"},"content":"        modelManager.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"fy17ohhh":10,"darryl-chan":5,"jeremiahlzz":11,"-":105}},{"path":"src/test/java/educonnect/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"fy17ohhh":5,"-":16}},{"path":"src/test/java/educonnect/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"fy17ohhh":5,"jeremiahlzz":2,"-":83}},{"path":"src/test/java/educonnect/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"        String secondPredicateKeyword \u003d \"second\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"Alice\");","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        // Incomplete name","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Alice B\");","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"        // Incomplete first name","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Ali\");","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"aLIce bOB\");","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        // Mixed-case and incomplete name","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"alIce bO\");","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"x\");","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Carol\");","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"        // Name is contained in key word but key word is not contained in name","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Alice Carol Bob\");","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"        // Same test but keywords are switched","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Alice Bob Carol\");","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"        // Keywords email but does not match name","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"alice@email.com\");","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withStudentId(\"A1234567G\")","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(\"alice@email.com\").withTelegramHandle(\"@balice\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"        // Keywords matches Student ID but does not match name","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"A1234567G\");","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withStudentId(\"A1234567G\")","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(\"alice@email.com\").withTelegramHandle(\"@balice\").build()));","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"        // Keywords matches Telegram Handle but does not match name","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"@balice\");","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withStudentId(\"A1234567G\")","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(\"alice@email.com\").withTelegramHandle(\"@balice\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"    public void findStudent_emptyStringGiven_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"\");","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e predicate.test(","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"                new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"    @ Test","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"    public void findStudent_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(null);","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(NullPointerException.class, () -\u003e predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"        String keywords \u003d \"keyword1 keyword2\";","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"darryl-chan":56,"jeremiahlzz":10,"-":54}},{"path":"src/test/java/educonnect/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"fy17ohhh":5,"jeremiahlzz":2,"-":55}},{"path":"src/test/java/educonnect/model/student/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"public class StudentIdTest {","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    public void constructor_invalidStudentId_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"        String invalidStudentId \u003d \"\";","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidStudentId));","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    public void isValidStudentId() {","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"        // null address","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentId.isValidStudentId(null));","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        // invalid student id","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(StudentId.isValidStudentId(\"\")); // empty string","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(StudentId.isValidStudentId(\" \")); // spaces only","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(StudentId.isValidStudentId(\"A\")); // one character","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(StudentId.isValidStudentId(\"A127461242412319824X\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        // valid student id","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(StudentId.isValidStudentId(\"A1234567H\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(StudentId.isValidStudentId(\"A1274612X\")); // long id","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"        StudentId studentId \u003d new StudentId(\"A1234567X\");","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(studentId.equals(new StudentId(\"A1234567X\")));","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(studentId.equals(studentId));","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(studentId.equals(null));","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(studentId.equals(5.0f));","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(studentId.equals(new StudentId(\"A2345678U\")));","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"darryl-chan":56,"jeremiahlzz":2}},{"path":"src/test/java/educonnect/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"public class StudentTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    public void isSameStudent() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"        // same name, all other attributes different -\u003e returns False","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENT_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENT_ID_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"        String expected \u003d Student.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", student id\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"                + ALICE.getStudentId() + \", email\u003d\" + ALICE.getEmail() + \", telegram handle\u003d\"","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"                + ALICE.getTelegramHandle() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"darryl-chan":10,"jeremiahlzz":28,"-":64}},{"path":"src/test/java/educonnect/model/student/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"public class TelegramHandleTest {","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TelegramHandle(null));","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public void constructor_invalidTelegramHandle_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        String invalidHandle \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(invalidHandle));","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public void isValidTelegramHandle() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"        // null telegram handle","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(NullPointerException.class, () -\u003e TelegramHandle.isValidTelegramHandle(null));","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        // invalid phone numbers","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\" \"));","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"91\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"phone\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"9011p041\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"9312 1534\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        // valid phone numbers","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@911\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@bobthebuilder\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@hello123goodbye456\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"    @SuppressWarnings(\"unlikely-arg-type\")","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"        TelegramHandle handle \u003d new TelegramHandle(\"@linus\");","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(handle.equals(new TelegramHandle(\"@linus\")));","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(handle.equals(handle));","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(handle.equals(null));","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(handle.equals(5.0f));","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(handle.equals(new TelegramHandle(\"@linux\")));","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"darryl-chan":55,"marclamp":4,"jeremiahlzz":2}},{"path":"src/test/java/educonnect/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.model.student;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.StudentBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.containsSameUniqueIdentifier(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        assertFalse(uniqueStudentList.containsSameUniqueIdentifier(ALICE));","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(uniqueStudentList.containsSameUniqueIdentifier(ALICE));","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"                .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(uniqueStudentList.containsSameUniqueIdentifier(editedAlice));","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"    public void contains_studentWithSameStudentId_returnsTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"                .withTags(VALID_TAG_HUSBAND).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"                .build();","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(uniqueStudentList.containsSameUniqueIdentifier(editedAlice));","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    public void contains_studentWithSameEmail_returnsTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"                .withTags(VALID_TAG_HUSBAND).withStudentId(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"                .build();","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(uniqueStudentList.containsSameUniqueIdentifier(editedAlice));","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"    public void contains_studentWithSameTelegramHandle_returnsTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"                .withTags(VALID_TAG_HUSBAND).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"                .build();","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"        assertTrue(uniqueStudentList.containsSameUniqueIdentifier(editedAlice));","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"jeremiahlzz"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"jeremiahlzz"},"content":"                .setStudent(ALICE, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"jeremiahlzz"},"content":"                .setStudent(ALICE, ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"jeremiahlzz"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"jeremiahlzz"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"jeremiahlzz"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"jeremiahlzz"},"content":"                .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"jeremiahlzz"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"jeremiahlzz"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"jeremiahlzz"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"jeremiahlzz"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"jeremiahlzz"},"content":"                .setStudent(ALICE, BOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"jeremiahlzz"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"jeremiahlzz"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"jeremiahlzz"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"jeremiahlzz"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"jeremiahlzz"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"jeremiahlzz"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"jeremiahlzz"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"jeremiahlzz"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"jeremiahlzz"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"jeremiahlzz"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":190,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"jeremiahlzz"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"jeremiahlzz"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"jeremiahlzz"},"content":"                .setStudents(listWithDuplicateStudents));","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"jeremiahlzz"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"jeremiahlzz"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"jeremiahlzz"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(uniqueStudentList.asUnmodifiableObservableList().toString(), uniqueStudentList.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"darryl-chan":33,"jeremiahlzz":177}},{"path":"src/test/java/educonnect/model/student/timetable/DayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"public class DayTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Day(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public void isSameDay() {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        Day day \u003d new Day(DayOfWeek.SUNDAY);","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        // same Day -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"        assertTrue(day.isSameDay(new Day(DayOfWeek.SUNDAY)));","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        assertTrue(day.isSameDay(day));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        // different Day -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        assertFalse(day.isSameDay(new Day(DayOfWeek.MONDAY)));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    public void addPeriod_invalidInputs_throwsOverlapPeriodException() throws OverlapPeriodException {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        Day day \u003d new Day(DayOfWeek.SUNDAY);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        Period period1 \u003d // 1 AM to 3 AM","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"                new Period(\"period1\", LocalTime.of(1, 0, 0), LocalTime.of(3, 0, 0));","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        Period period2 \u003d // 3 AM to 5 AM","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                new Period(\"period2\", LocalTime.of(3, 0, 0), LocalTime.of(5, 0, 0));","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        Period period3 \u003d // 2 AM to 4 PM","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"                new Period(\"period3\", LocalTime.of(2, 0, 0), LocalTime.of(4, 0, 0));","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"        day.addPeriod(period1);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        day.addPeriod(period2);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        // has overlap, not successfully added -\u003e throws OverlapPeriodException","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        assertThrows(OverlapPeriodException.class, () -\u003e day.addPeriod(period3));","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"    public void addPeriod_validInputs_returnsTrue() throws OverlapPeriodException {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        Day day \u003d new Day(DayOfWeek.SUNDAY);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        Period period1 \u003d // 1 AM to 3 AM","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                new Period(\"period1\", LocalTime.of(1, 0, 0), LocalTime.of(3, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"        Period period2 \u003d // 3 AM to 5 AM","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                new Period(\"period2\", LocalTime.of(3, 0, 0), LocalTime.of(5, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"        // no overlap, successfully added -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        assertTrue(day.addPeriod(period2));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"        assertTrue(day.addPeriod(period1));","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"        // check if the periods added are sorted automatically.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"        assertTrue(day.isSorted());","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"    public void convertToCommandString() throws OverlapPeriodException {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        String expectedString1 \u003d \"mon: 1-3\";","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"        String expectedString2 \u003d expectedString1 + \", 3-5\";","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"        String expectedString3 \u003d expectedString2 + \", 7-11\";","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"        Day day \u003d new Day(DayOfWeek.MONDAY);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"        Period period1 \u003d // 1 AM to 3 AM","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                new Period(\"period1\", LocalTime.of(1, 0, 0), LocalTime.of(3, 0, 0));","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"        Period period2 \u003d // 3 AM to 5 AM","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"                new Period(\"period2\", LocalTime.of(3, 0, 0), LocalTime.of(5, 0, 0));","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        Period period3 \u003d // 7 AM to 11 AM","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                new Period(\"period2\", LocalTime.of(7, 0, 0), LocalTime.of(11, 0, 0));","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"        day.addPeriod(period1);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"        // only 1 period","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"        assertEquals(expectedString1, day.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"        // multiple periods","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"        day.addPeriod(period2);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"        assertEquals(expectedString2, day.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"        day.addPeriod(period3);","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        assertEquals(expectedString3, day.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":93}},{"path":"src/test/java/educonnect/model/student/timetable/PeriodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.InvalidPeriodException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class PeriodTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Period(null, null, null));","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public void constructor_invalidInputs_throwsInvalidPersonException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        LocalTime time1 \u003d LocalTime.of(1, 0, 0);","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        LocalTime time2 \u003d LocalTime.of(2, 0, 0);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        Assert.assertThrows(InvalidPeriodException.class, () -\u003e new Period(\"period\", time2, time1));","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        Assert.assertThrows(InvalidPeriodException.class, () -\u003e new Period(\"\", time1, time2));","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        Assert.assertThrows(InvalidPeriodException.class, () -\u003e new Period(\" \", time1, time2));","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    public void hasOverlap() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        Period period1 \u003d // 1 AM to 3 AM","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"                new Period(\"period1\", LocalTime.of(1, 0, 0), LocalTime.of(3, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"        Period period2 \u003d // 3 AM to 5 AM","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"                new Period(\"period2\", LocalTime.of(3, 0, 0), LocalTime.of(5, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        Period period3 \u003d // 2 AM to 4 PM","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"                new Period(\"period3\", LocalTime.of(2, 0, 0), LocalTime.of(4, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        // has no overlap -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        assertFalse(period1.hasOverlap(period2));","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        assertFalse(period2.hasOverlap(period1));","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        // has overlap -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        assertTrue(period1.hasOverlap(period3));","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        assertTrue(period2.hasOverlap(period3));","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        assertTrue(period3.hasOverlap(period3));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        assertTrue(period3.hasOverlap(period1));","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        assertTrue(period3.hasOverlap(period2));","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"    public void convertToCommandString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        Period period1 \u003d // 1 PM to 3 PM","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"                new Period(\"period1\",","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"                        LocalTime.of(13, 0, 0),","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"                        LocalTime.of(15, 0, 0));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        assertEquals(\"13-15\", period1.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"    public void compareTo() {","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"        Period period1 \u003d // 1 AM to 3 AM","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"                new Period(\"period1\", LocalTime.of(1, 0, 0), LocalTime.of(3, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"        Period period2 \u003d // 3 AM to 5 AM","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                new Period(\"period2\", LocalTime.of(3, 0, 0), LocalTime.of(5, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"        Period period3 \u003d // 2 AM to 4 PM","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"                new Period(\"period3\", LocalTime.of(2, 0, 0), LocalTime.of(4, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"        Period period4 \u003d // 2 AM to 4 PM","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                new Period(\"period4\", LocalTime.of(2, 0, 0), LocalTime.of(4, 0, 0));","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"        // smaller than (starts earlier) -\u003e returns -1","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        assertEquals(period1.compareTo(period2), -1);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"        assertEquals(period1.compareTo(period3), -1);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"        assertEquals(period3.compareTo(period2), -1);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"        // larger than (starts later) -\u003e returns 1","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"        assertEquals(period2.compareTo(period1), 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"        assertEquals(period2.compareTo(period3), 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"        assertEquals(period3.compareTo(period1), 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        // same time or same object -\u003e returns 0","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"        assertEquals(period1.compareTo(period1), 0);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"        assertEquals(period3.compareTo(period4), 0);","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":82}},{"path":"src/test/java/educonnect/model/student/timetable/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.model.student.timetable;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.NumberOfDaysException;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class TimetableTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private static final String EMPTY_TIMETABLE_FIVE \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"            \"Timetable\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"            + \"For MONDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"            + \"For TUESDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"            + \"For WEDNESDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"            + \"For THURSDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"            + \"For FRIDAY, schedule is:\\n\\n\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    private static final String EMPTY_TIMETABLE_SEVEN \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"            EMPTY_TIMETABLE_FIVE","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"            + \"For SATURDAY, schedule is:\\n\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"            + \"For SUNDAY, schedule is:\\n\\n\";","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    private static final Period PERIOD_1 \u003d new Period(\"period1\",","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(13, 0, 0),","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(14, 0, 0));","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    private static final Period PERIOD_2 \u003d new Period(\"period2\",","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(15, 0, 0),","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(17, 0, 0));","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    private static final Period PERIOD_3 \u003d new Period(\"period3\",","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(14, 0, 0),","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(16, 0, 0));","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    public void constructor() {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        Timetable timetable5 \u003d new Timetable(5);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        Timetable timetable7 \u003d new Timetable(7);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        Timetable timetableDefault \u003d new Timetable();","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        assertEquals(EMPTY_TIMETABLE_FIVE, timetable5.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        assertEquals(EMPTY_TIMETABLE_SEVEN, timetable7.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"        assertEquals(EMPTY_TIMETABLE_FIVE, timetableDefault.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    public void addPeriodToDay_invalidInputs_throwsOverlapPeriodException() throws OverlapPeriodException {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"        Timetable timetable5 \u003d new Timetable(5);","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"        timetable5.addPeriodToDay(1, PERIOD_3);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        // adding to Monday, period from 2 PM to 4 PM, failure -\u003e throws OverlapPeriodException","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        assertThrows(OverlapPeriodException.class, () -\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                timetable5.addPeriodToDay(1, PERIOD_3));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"        // adding to a day outside the normal 7 days, failure -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"        assertThrows(NumberOfDaysException.class, () -\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"                timetable5.addPeriodToDay(10, PERIOD_3));","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    public void addPeriodToDay_validInputs_returnsTrue() throws OverlapPeriodException {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"        Timetable timetable5 \u003d new Timetable(5);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"        // adding to Monday, period from 1 PM to 2 PM, success -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"        assertTrue(timetable5.addPeriodToDay(1, PERIOD_1));","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        // adding to Monday, period from 3 PM to 5 PM, success -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"        assertTrue(timetable5.addPeriodToDay(1, PERIOD_2));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"        // adding to Friday, period from 3 PM to 5 PM, success -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"        assertTrue(timetable5.addPeriodToDay(5, PERIOD_2));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"        // adding to Friday, period from 1 PM to 2 PM, success -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"        assertTrue(timetable5.addPeriodToDay(5, PERIOD_1));","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"    public void convertToCommandString() throws OverlapPeriodException {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"        String expectedString1 \u003d \"mon: 14-16\";","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"        String expectedString2 \u003d expectedString1 + \"tue: 13-14, 15-17\";","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"        String expectedString3 \u003d expectedString2 + \"fri: 13-14, 14-16\";","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"        Timetable timetable5 \u003d new Timetable(5);","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"        // one day only","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"        timetable5.addPeriodToDay(1, PERIOD_3);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"        assertEquals(expectedString1, timetable5.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"        // multiple days","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"        timetable5.addPeriodToDay(2, PERIOD_1);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"        timetable5.addPeriodToDay(2, PERIOD_2);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"        assertEquals(expectedString2, timetable5.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"        timetable5.addPeriodToDay(5, PERIOD_1);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"        timetable5.addPeriodToDay(5, PERIOD_3);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"        assertEquals(expectedString3, timetable5.convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"marclamp":100}},{"path":"src/test/java/educonnect/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.model.tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"fy17ohhh":6,"-":20}},{"path":"src/test/java/educonnect/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import static educonnect.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"import educonnect.testutil.TypicalTimetableAndValues;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    private static final String INVALID_STUDENT_ID \u003d \"A1\";","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \" \";","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_STUDENT_ID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d BENSON.getTelegramHandle().toString();","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    private static final Timetable VALID_DEFAULT_EMPTY_TIMETABLE \u003d TypicalTimetableAndValues.DEFAULT_EMPTY_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_STUDENT_ID, VALID_EMAIL, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"                        VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"            null, VALID_STUDENT_ID, VALID_EMAIL, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_STUDENT_ID, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"            VALID_NAME, null, VALID_EMAIL, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2024-03-02"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"                new JsonAdaptedStudent(","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"                    VALID_NAME, VALID_STUDENT_ID, INVALID_EMAIL, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"                        VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"            VALID_NAME, VALID_STUDENT_ID, null, VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"    public void toModelType_invalidTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":100,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"                new JsonAdaptedStudent(","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"                    VALID_NAME, VALID_STUDENT_ID, VALID_EMAIL, INVALID_TELEGRAM_HANDLE,","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"                        VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-02"},{"lineNumber":105,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"    public void toModelType_nullTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2024-03-02"},{"lineNumber":110,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"            VALID_NAME, VALID_STUDENT_ID, VALID_EMAIL, null,","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"                VALID_TAGS, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TelegramHandle.class.getSimpleName());","lastModifiedDate":"2024-03-02"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"jeremiahlzz"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_STUDENT_ID, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"                        VALID_TELEGRAM_HANDLE, invalidTags, VALID_DEFAULT_EMPTY_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"jeremiahlzz"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"    public void toModelType_nullTimetable_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"                VALID_NAME, VALID_STUDENT_ID, VALID_EMAIL, VALID_TELEGRAM_HANDLE, VALID_TAGS, null);","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timetable.class.getSimpleName());","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":13,"marclamp":28,"jeremiahlzz":30,"-":62}},{"path":"src/test/java/educonnect/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    public void readAddressBook_invalidStudentAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidStudentAddressBook.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"    public void readAddressBook_invalidAndValidStudentAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"                readAddressBook(\"invalidAndValidStudentAddressBook.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        Path filePath \u003d testFolder.resolve(\"TempEduConnect.json\");","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"        AddressBook original \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"        original.addStudent(TypicalStudents.HOON);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"        original.removeStudent(TypicalStudents.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"        original.addStudent(TypicalStudents.IDA);","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fy17ohhh":10,"jeremiahlzz":10,"-":88}},{"path":"src/test/java/educonnect/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.util.JsonUtil;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"            .resolve(\"typicalStudentsAddressBook.json\");","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"            .resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    private static final Path DUPLICATE_STUDENT_ID_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"            .resolve(\"duplicateStudentIdAddressBook.json\");","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    private static final Path DUPLICATE_EMAIL_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"            .resolve(\"duplicateEmailAddressBook.json\");","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"    private static final Path DUPLICATE_TELEGRAM_HANDLE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            .resolve(\"duplicateTelegramHandleAddressBook.json\");","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        AddressBook typicalStudentsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(addressBookFromFile, typicalStudentsAddressBook);","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"    public void toModelType_duplicateStudentIds_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_ID_FILE,","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT_ID,","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"    public void toModelType_duplicateEmails_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EMAIL_FILE,","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"    public void toModelType_duplicateTelegramHandle_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TELEGRAM_HANDLE,","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TELEGRAM_HANDLE,","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fy17ohhh":6,"darryl-chan":31,"jeremiahlzz":7,"-":27}},{"path":"src/test/java/educonnect/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.testutil.Assert;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"educonnect.json\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fy17ohhh":10,"-":113}},{"path":"src/test/java/educonnect/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.UserPrefs;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.testutil.TypicalStudents;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        AddressBook original \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":5,"jeremiahlzz":2,"-":61}},{"path":"src/test/java/educonnect/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":2,"jeremiahlzz":5,"-":27}},{"path":"src/test/java/educonnect/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"fy17ohhh":1,"-":33}},{"path":"src/test/java/educonnect/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setStudentId(student.getStudentId());","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setTelegramHandle(student.getTelegramHandle());","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        descriptor.setTimetable(student.getTimetable());","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"     * Sets the {@code StudentId} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"     * Sets the {@code Telegram Handle} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(telegramHandle));","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"     * that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"     * Sets the {@code Timetable} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"    public EditStudentDescriptorBuilder withTimetable(Timetable timetable) {","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        descriptor.setTimetable(timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"        return descriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"marclamp":10,"jeremiahlzz":87}},{"path":"src/test/java/educonnect/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":1,"-":71}},{"path":"src/test/java/educonnect/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.StudentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.TelegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"public class StudentBuilder {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String DEFAULT_STUDENT_ID \u003d \"A1234567X\";","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    public static final String DEFAULT_TELEGRAM_HANDLE \u003d \"@Beeam\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    public static final Timetable DEFAULT_TIMETABLE \u003d TypicalTimetableAndValues.DEFAULT_EMPTY_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    public static final String ALTERNATE_NAME \u003d \"Bob Builder\";","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"    public static final String ALTERNATE_STUDENT_ID \u003d \"A9876543U\";","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"    public static final String ALTERNATE_EMAIL \u003d \"builderbob@gmail.com\";","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    public static final String ALTERNATE_TELEGRAM_HANDLE \u003d \"@bobthebuilder\";","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    public static final Timetable ALTERNATE_TIMETABLE \u003d TypicalTimetableAndValues.VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"    private Name name;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"    private StudentId studentId;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    private Email email;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    private Timetable timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentBuilder() {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"        studentId \u003d new StudentId(DEFAULT_STUDENT_ID);","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        timetable \u003d DEFAULT_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"        studentId \u003d studentToCopy.getStudentId();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"        telegramHandle \u003d studentToCopy.getTelegramHandle();","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        timetable \u003d studentToCopy.getTimetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"     * Creates a {@code StudentBuilder} with the alternate default details.","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"    public StudentBuilder alternate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        return new StudentBuilder()","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"                .withName(ALTERNATE_NAME)","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"                .withTelegramHandle(ALTERNATE_TELEGRAM_HANDLE)","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"                .withEmail(ALTERNATE_EMAIL)","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                .withStudentId(ALTERNATE_STUDENT_ID)","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"                .withTimetable(ALTERNATE_TIMETABLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"     * Sets the {@code TelegramHandle} of the {@code Student} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"        this.telegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"     * Sets the {@code StudentId} of the {@code Student} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentBuilder withStudentId(String studentId) {","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"jeremiahlzz"},"content":"        this.studentId \u003d new StudentId(studentId);","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"jeremiahlzz"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"jeremiahlzz"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"jeremiahlzz"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"jeremiahlzz"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"     * Sets the {@code Timetable} of the {@code Student} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"    public StudentBuilder withTimetable(Timetable timetable) {","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"jeremiahlzz"},"content":"    public Student build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"        return new Student(name, studentId, email, telegramHandle, tags, timetable);","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"darryl-chan":15,"marclamp":19,"jeremiahlzz":93}},{"path":"src/test/java/educonnect/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import static educonnect.logic.parser.CliSyntax.PREFIX_TIMETABLE;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.tag.Tag;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":" * A utility class for Student.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"public class StudentUtil {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        sb.append(PREFIX_NAME).append(student.getName().fullName).append(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        sb.append(PREFIX_STUDENT_ID).append(student.getStudentId().value).append(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        sb.append(PREFIX_EMAIL).append(student.getEmail().value).append(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        sb.append(PREFIX_TELEGRAM_HANDLE).append(student.getTelegramHandle().value).append(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"            s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        sb.append(PREFIX_TIMETABLE).append(student.getTimetable().convertToCommandString());","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        descriptor.getStudentId().ifPresent(phone -\u003e sb.append(PREFIX_STUDENT_ID).append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        descriptor.getTelegramHandle().ifPresent(","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                address -\u003e sb.append(PREFIX_TELEGRAM_HANDLE).append(address.value).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"        descriptor.getTimetable().ifPresent(","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"                timetable -\u003e sb.append(PREFIX_TIMETABLE).append(timetable.convertToCommandString()));","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"fy17ohhh":3,"darryl-chan":6,"marclamp":14,"jeremiahlzz":12,"-":33}},{"path":"src/test/java/educonnect/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"    public static Student getPerson(Model model, Index index) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fy17ohhh":3,"jeremiahlzz":8,"-":44}},{"path":"src/test/java/educonnect/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.commons.core.index.Index;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"fy17ohhh":2,"jeremiahlzz":3,"-":7}},{"path":"src/test/java/educonnect/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"import static educonnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import static educonnect.testutil.TypicalTimetableAndValues.VALID_TIMETABLE_2;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"import educonnect.model.student.Student;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"public class TypicalStudents {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            .withTelegramHandle(\"@Paulice\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"            .withStudentId(\"A0077493U\")","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"            .withTags(\"tutorial-1\")","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"            .withTimetable(VALID_TIMETABLE_1).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"            .withTelegramHandle(\"@benmeier\")","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"            .withEmail(\"johnd@example.com\").withStudentId(\"A1235678J\")","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"            .withTags(\"tutorial-2\", \"strong-student\").build();","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withStudentId(\"A9876543N\")","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"            .withEmail(\"heinz@example.com\").withTelegramHandle(\"@wallstreet\").withTimetable(VALID_TIMETABLE_1).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withStudentId(\"A1357924D\")","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"            .withEmail(\"cornelia@example.com\").withTelegramHandle(\"@danelia\").withTags(\"tutorial-3\").build();","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withStudentId(\"A9482224Y\")","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"            .withEmail(\"werner@example.com\").withTelegramHandle(\"@michegan\").withTimetable(VALID_TIMETABLE_2).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withStudentId(\"A9482427K\")","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"            .withEmail(\"lydia@example.com\").withTelegramHandle(\"@littletokyo\").build();","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withStudentId(\"A6482442L\")","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"            .withEmail(\"anna@example.com\").withTelegramHandle(\"@georgie\").withTimetable(VALID_TIMETABLE_2).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withStudentId(\"A8482424W\")","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"            .withEmail(\"stefan@example.com\").withTelegramHandle(\"@hoon\").build();","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withStudentId(\"A8482131M\")","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"            .withEmail(\"hans@example.com\").withTelegramHandle(\"@idaho\").withTimetable(VALID_TIMETABLE_1).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    public static final Student AMY \u003d new StudentBuilder()","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"            .withName(VALID_NAME_AMY).withStudentId(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"            .withEmail(VALID_EMAIL_AMY).withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY)","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    public static final Student BOB \u003d new StudentBuilder()","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"            .withName(VALID_NAME_BOB).withStudentId(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"            .withEmail(VALID_EMAIL_BOB).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    // Not added to address","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"    public static final Student JOHHNY \u003d new StudentBuilder().withName(\"Johnny Jenson\").withStudentId(\"A9345680M\")","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"            .withEmail(\"johnhojmjogn@example.com\").withTelegramHandle(\"@johnnyjjohnny\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"            ab.addStudent(student);","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"fy17ohhh":2,"darryl-chan":26,"marclamp":12,"jeremiahlzz":18,"-":29}},{"path":"src/test/java/educonnect/testutil/TypicalTimetableAndValues.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package educonnect.testutil;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Period;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.Timetable;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import educonnect.model.student.timetable.exceptions.OverlapPeriodException;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":" * A utility class containing a list of {@code String, Period, Timetable}","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":" * and other peripheral objects to be used in tests.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"public class TypicalTimetableAndValues {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    // additional strings","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public static final String PERIOD_SPACER \u003d \", \";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    // invalid period strings used in parsing","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    public static final String INVALID_PERIOD1 \u003d \"25-30\";","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    public static final String INVALID_PERIOD2 \u003d \"a14-16\";","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    // valid period strings used in parsing","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_PERIOD_NAME \u003d \"period\";","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_PERIOD1 \u003d \"13-15\";","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_PERIOD2 \u003d \"0-23\";","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_PERIOD3 \u003d \"16-18\";","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_PERIODS_STRING1 \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"            VALID_PERIOD1 + PERIOD_SPACER + VALID_PERIOD3;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_PERIODS_STRING2 \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"            VALID_PERIOD3 + PERIOD_SPACER + VALID_PERIOD1;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    public static final String FULL_STRING_WITH_INVALID_INPUT \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"            INVALID_PERIOD1 + PERIOD_SPACER + INVALID_PERIOD2 + PERIOD_SPACER + VALID_PERIOD1;","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    public static final String FULL_STRING_VALID_INPUT \u003d VALID_PERIOD1 + PERIOD_SPACER + VALID_PERIOD3;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    public static final String FULL_STRING_WITH_WHITESPACE_VALID_INPUT \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"            WHITESPACE + VALID_PERIOD1 + WHITESPACE + PERIOD_SPACER + WHITESPACE + VALID_PERIOD3 + WHITESPACE;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"    // valid period values used in tests for assertions","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    public static final int VALID_PERIOD1_VALUE1 \u003d 13;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"    public static final int VALID_PERIOD1_VALUE2 \u003d 15;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    public static final int VALID_PERIOD2_VALUE1 \u003d 0;","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"    public static final int VALID_PERIOD2_VALUE2 \u003d 23;","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    public static final int VALID_PERIOD3_VALUE1 \u003d 16;","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"    public static final int VALID_PERIOD3_VALUE2 \u003d 18;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    // add command arguments for Timetable","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_ADD_COMMAND_TIMETABLE_ARGUMENTS_1 \u003d \" mon: 13-15, 16-18 thu: 16-18, 13-15\";","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"    public static final String VALID_ADD_COMMAND_TIMETABLE_ARGUMENTS_2 \u003d \" tue: 16-18, 13-15 wed: 13-15, 16-18\";","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"    // valid period objects used in assertions.","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    public static final Period EXPECTED_PERIOD_1 \u003d new Period(VALID_PERIOD_NAME,","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(VALID_PERIOD1_VALUE1, 0, 0),","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(VALID_PERIOD1_VALUE2, 0, 0));","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"    public static final Period EXPECTED_PERIOD_2 \u003d new Period(VALID_PERIOD_NAME,","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(VALID_PERIOD2_VALUE1, 0, 0),","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(VALID_PERIOD2_VALUE2, 0, 0));","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"    public static final Period EXPECTED_PERIOD_3 \u003d new Period(VALID_PERIOD_NAME,","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(VALID_PERIOD3_VALUE1, 0, 0),","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"            LocalTime.of(VALID_PERIOD3_VALUE2, 0, 0));","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    // Optional ArrayList of Period objects, used in assertions.","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"    public static final Optional\u003cArrayList\u003cPeriod\u003e\u003e VALID_PERIOD_OPTIONAL_ARRAYLIST \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"            Optional.of(new ArrayList\u003c\u003e(List.of(EXPECTED_PERIOD_1, EXPECTED_PERIOD_3)));","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"    public static final Optional\u003cArrayList\u003cPeriod\u003e\u003e INVALID_PERIOD_OPTIONAL_ARRAYLIST \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"            Optional.of(new ArrayList\u003c\u003e(List.of(EXPECTED_PERIOD_1, EXPECTED_PERIOD_2)));","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"    // ArrayLists of valid Periods","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"    public static final ArrayList\u003cPeriod\u003e VALID_PERIODS_LIST1 \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"            buildPeriodList(new Period[] {EXPECTED_PERIOD_1, EXPECTED_PERIOD_3});","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"    public static final ArrayList\u003cPeriod\u003e VALID_PERIODS_LIST2 \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"            buildPeriodList(new Period[] {EXPECTED_PERIOD_3, EXPECTED_PERIOD_1});","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"    // valid List of Period Strings for all days","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"    public static final ArrayList\u003cString\u003e VALID_TIMETABLE_INPUT_1 \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"            getListOfPeriods(List.of(VALID_PERIODS_STRING1, EMPTY, EMPTY, VALID_PERIODS_STRING2, EMPTY)));","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"    public static final ArrayList\u003cString\u003e VALID_TIMETABLE_INPUT_2 \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"            getListOfPeriods(List.of(EMPTY, VALID_PERIODS_STRING2, VALID_PERIODS_STRING1, EMPTY, EMPTY)));","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"    // valid Timetable","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"    public static final Timetable VALID_TIMETABLE_1;","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"    public static final Timetable VALID_TIMETABLE_2;","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"    public static final Timetable DEFAULT_EMPTY_TIMETABLE \u003d new Timetable();","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"    static {","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"            VALID_TIMETABLE_1 \u003d buildTimetable(new int[] {1, 4},","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"                    new ArrayList\u003c\u003e(List.of(VALID_PERIODS_LIST1, VALID_PERIODS_LIST2)));","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"        } catch (OverlapPeriodException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"    static {","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"            VALID_TIMETABLE_2 \u003d buildTimetable(new int[] {2, 3},","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"                    new ArrayList\u003c\u003e(List.of(VALID_PERIODS_LIST2, VALID_PERIODS_LIST1)));","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"        } catch (OverlapPeriodException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"     * Helper method to create List of Periods","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"     * @param periods an array pf {@code Period} objects.","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"     * @return an {@code ArrayList} of {@code Period} objects.","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"    public static ArrayList\u003cPeriod\u003e buildPeriodList(Period[] periods) {","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(periods));","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"     * Helper method to get List of Period Strings, according to number of days in Timetable","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"     * @param original List of Strings for 5 days in the week.","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"     * @return List of Strings for 7 days of the week, if {@code Timetable.getTimetable7Days()} is {@code true}.","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"    public static List\u003cString\u003e getListOfPeriods(List\u003cString\u003e original) {","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cString\u003e newList \u003d new ArrayList\u003c\u003e(original);","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"        if (Timetable.is7Days()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"            newList.addAll(List.of(EMPTY, EMPTY));","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"        return newList;","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"     * Helper method to build timetable.","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"     * @param indexesOfDays indexes containing days which has {@code Period} to add.","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"     * @param periodsEachDay {@code ArrayList} of {@code ArrayList\u003cPeriod\u003e} objects corresponding to the indexes.","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"     * @return a {@code Timetable} object.","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"     * @throws OverlapPeriodException if there is an overlap in the periods given.","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"    public static Timetable buildTimetable(int[] indexesOfDays, ArrayList\u003cArrayList\u003cPeriod\u003e\u003e periodsEachDay)","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"            throws OverlapPeriodException {","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"marclamp"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"marclamp"},"content":"        for (int i \u003d 0; i \u003c indexesOfDays.length; i++) {","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"marclamp"},"content":"            timetable.addPeriodsToDay(indexesOfDays[i], periodsEachDay.get(i));","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"marclamp"},"content":"        return timetable;","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"marclamp":147}},{"path":"src/test/java/educonnect/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"fy17ohhh":1,"-":44}},{"path":"src/test/java/educonnect/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package educonnect.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static educonnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import educonnect.MainApp;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link #VALID_FILE_PATH}.","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"fy17ohhh":4,"-":110}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import educonnect.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"fy17ohhh":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"\u003cfx:root type\u003d\"educonnect.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"fy17ohhh":1,"-":5}}]
