[{"path":".github/workflows/gradle.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: Java CI","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"on: [push, pull_request]","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"jobs:","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  build:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    strategy:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      matrix:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    steps:","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","lastModifiedDate":"2020-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","lastModifiedDate":"2020-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          ref: master","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      - name: Merge to master","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      - name: Run repository-wide tests","lastModifiedDate":"2020-06-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2020-06-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        working-directory:  ${{ github.workspace }}/.github","lastModifiedDate":"2020-06-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        run: ./run-checks.sh","lastModifiedDate":"2020-06-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        uses: gradle/wrapper-validation-action@v1","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      - name: Setup JDK 11","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        uses: actions/setup-java@v1","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          java-version: \u002711\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          java-package: jdk+fx","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"      - name: Build and check with Gradle (Ubuntu)","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        run: xvfb-run ./gradlew check coverage","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"      - name: Build and check with Gradle (macOS)","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"        if: runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        run: ./gradlew check coverage","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"      - name: Build and check with Gradle (Windows)","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        if: runner.os \u003d\u003d \u0027Windows\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        run: ./gradlew check coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      - name: Upload coverage reports to Codecov","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        uses: codecov/codecov-action@v3","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        env:","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"-":44,"ChillinRage":10}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T11-2/tp/actions)","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"[![CodeCov Status](https://codecov.io/gh/AY2324S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2324S2-CS2103T-T11-2/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"reetmitra"},"content":"# NUSContacts","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"reetmitra"},"content":"NUSContacts is a desktop application for students to manage their contacts, specifically Tutors (Professors and Teaching Assistants) and course coordinators. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, NUSContacts can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"Refer to [the project website](https://ay2324s2-cs2103t-t11-2.github.io/tp/) for more information.","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"E0735389":4,"reetmitra":4,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"check.dependsOn javadoc","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"    systemProperties \u003d [\u0027testfx.robot\u0027: \u0027glass\u0027]","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"run {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"    String testFxVersion \u003d \"4.0.18\"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-junit5\u0027, version: testFxVersion","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-12.0.1+2\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"    archiveFileName \u003d \u0027NUSContacts.jar\u0027","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"E0735389":6,"-":71,"ChillinRage":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"reetmitra"},"content":"## CS2103T T11-2 Team Members","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"reetmitra"},"content":"### Reet Mitra","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"reetmitra"},"content":"\u003cimg src\u003d\"images/reetmitra.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"reetmitra"},"content":"[[Github](https://github.com/reetmitra)]","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"reetmitra"},"content":"* Role: Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"reetmitra"},"content":"* Responsibilities: Code Testing","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"reetmitra"},"content":"### Bui Hong Duc","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"reetmitra"},"content":"\u003cimg src\u003d\"images/e0735389.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"reetmitra"},"content":"[[Github](https://github.com/E0735389)]","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"reetmitra"},"content":"* Role: Team Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"reetmitra"},"content":"* Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"reetmitra"},"content":"### Chong Chan How","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"reetmitra"},"content":"\u003cimg src\u003d\"images/chillinrage.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"reetmitra"},"content":"[[Github](https://github.com/ChillinRage)]","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"reetmitra"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"reetmitra"},"content":"### Timothy Soh Yee Song","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"reetmitra"},"content":"\u003cimg src\u003d\"images/largecrowd.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"reetmitra"},"content":"[[Github](https://github.com/LargeCrowd)]","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"reetmitra"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"### Yang Heebeom","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"reetmitra"},"content":"\u003cimg src\u003d\"images/hibeom0929.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"reetmitra"},"content":"[[Github](https://github.com/Hibeom0929)]","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Hibeom0929"},"content":"* Responsibilities: Code Testing","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"Hibeom0929":1,"E0735389":2,"reetmitra":21,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"* Several features was inspired from common programs and/or other CS2103/T teams projects features.","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"\u003cimg src\u003d\"images/OldArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"The description is a high-level description and is not exactly accurate, for example,","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"the `execute()` method in fact takes in a `CommandString` object that represents a command string,","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"instead of a literal string. Refer to [the implementation detail of \"highlight error\" feature](#implementation-1) for","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"more details.","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"E0735389"},"content":"The description is a high-level description and is not exactly accurate, for example,","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"the `execute()` method in fact takes in a `CommandString` object that represents a command string,","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"instead of a literal string. Refer to [the implementation detail of \"highlight error\" feature](#implementation-1) for","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"more details.","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"E0735389"},"content":"Several other components (`XYZCommandParser`, and `CommandBox` in [`UI` component](#ui-component))  also depends on `CommandPart`","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"E0735389"},"content":"to indicate which part of the command causes the error,","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"E0735389"},"content":"however to avoid cluttering the diagram, the dependency is not shown.","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"E0735389"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"E0735389"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"E0735389"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"380\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"E0735389"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"E0735389"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"E0735389"},"content":"### Highlight error feature","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"E0735389"},"content":"This feature would automatically highlight (select) the part of the command that contains the error in the command box,","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"E0735389"},"content":"so that the user can edit it more quickly.","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"E0735389"},"content":"For example, if the user type `edit 1 p/12 c/CS2103T`, since the phone number is invalid (but the course code `CS2103T` is valid), then `12` will be highlighted, which speeds up the process of data entry because the user no longer have to press `[←]` several times to navigate to `12`.","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"E0735389"},"content":"#### Implementation","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"E0735389"},"content":"First, many functions that originally takes the command string, will now take `CommandString`, which is a class","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"E0735389"},"content":"containing a string.","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"E0735389"},"content":"Compare the old and the new sequence diagram below for the execution of a command. This is the old sequence diagram.","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"E0735389"},"content":"![OldArchitectureSequenceDiagram](images/OldArchitectureSequenceDiagram.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"E0735389"},"content":"And this is the new sequence diagram.","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"E0735389"},"content":"![ArchitectureSequenceDiagram](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"E0735389"},"content":"A class `CommandPart` is used to maintain a part of a command. For example, if `s` is a `CommandString` with value `edit 1 p/12 c/CS2103T`, then `new CommandPart(s).substring(9, 11)` returns a `CommandPart` whose `toString()` representation is `12`, but it also remembers the index into the original `CommandString` object.","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"E0735389"},"content":"![CommandPartClassDiagram](images/CommandPartClassDiagram.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"E0735389"},"content":"Then, `ParseException` and `CommandExecutionException` are two exception classes that implements the `CommandException`","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"E0735389"},"content":"interface. A `CommandException` has an `getErroneousPart()` method that returns an `Optional\u003cCommandPart\u003e`.","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"E0735389"},"content":"![CommandExceptionClassDiagram](images/CommandExceptionClassDiagram.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"E0735389"},"content":"When the UI catches a `ParseException` or `CommandExecutionException`, it will call `getErroneousPart()` on the","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"E0735389"},"content":"exception object. If the result is not `Optional.empty()`, it will select the corresponding part in the command box.","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"E0735389"},"content":"Various methods in the parser and the command executor is modified to include the correct command part.","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"E0735389"},"content":"For backwards compatibility, not all `CommandException` object need to know what part of the command causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"E0735389"},"content":"#### Design considerations","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"E0735389"},"content":"**Aspect: How to represent a command string:**","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"E0735389"},"content":"* **Alternative 1 (current choice):** Name the class `CommandString`.","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"E0735389"},"content":"**Aspect: How to represent a part of the command string:**","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"E0735389"},"content":"* **Alternative 1 (current choice):** Name the class `CommandPart`, and make it specifically only represent a part of a","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"E0735389"},"content":"  command.","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"E0735389"},"content":"  * Pros: Descriptive class name.","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"E0735389"},"content":"  * Cons: See the pros of alternative 2.","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"E0735389"},"content":"* **Alternative 2:** Name the class `StringPart` or equivalent, and make it represent a part of *any* string.","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"E0735389"},"content":"  * Pros: Later if the need to maintain a substring with reference to the original string shows up in another part of","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"E0735389"},"content":"    the code, the class can be reused.","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"E0735389"},"content":"  * Cons: See the pros of alternative 1.","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"E0735389"},"content":"**Aspect: How to implement common `getErroneousPart()` method for the exception classes:**","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"E0735389"},"content":"* **Alternative 1 (current choice):** Make an interface `CommandException`, which exposes `getErroneousPart()`.","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"E0735389"},"content":"  * Pros: Caller can call `getErroneousPart()` without checking and casting it to `CommandExecutionException` to","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"E0735389"},"content":"    `ParseException`.","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"E0735389"},"content":"  * Cons: Ambiguous semantic. There\u0027s no guarantee a class implementing `CommandException` also extends `Exception`.","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"E0735389"},"content":"* **Alternative 2:** Make an abstract class `CommandException`, and make both classes inherit from that.","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"E0735389"},"content":"  * Pros: Allows a common implementation for `getErroneousPart()` without duplicating the code across classes.","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"E0735389"},"content":"  * Pros: Allows code to write `catch (CommandException e)` instead of `catch (ParseException | CommandExecutionException","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"E0735389"},"content":"    e)`.","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"E0735389"},"content":"  * Cons: `ParseException` already inherit from `IllegalValueException`, and Java does not allow diamond inheritance.","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"E0735389"},"content":"* **Alternative 3:** Same as alternative 2, but make `ParseException` no longer inherit from `IllegalValueException`.","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"E0735389"},"content":"  * Pros: Same as in alternative 2.","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"E0735389"},"content":"  * Cons: Breaks backwards compatibility, because some part of the code may expect `catch (IllegalValueException)` to","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"E0735389"},"content":"    also catch a `ParseException`.","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"Hibeom0929"},"content":"* has a need to manage a significant number of contacts of NUS students, tutors, and professors","lastModifiedDate":"2024-03-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"Hibeom0929"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-07"},{"lineNumber":279,"author":{"gitId":"Hibeom0929"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-07"},{"lineNumber":280,"author":{"gitId":"Hibeom0929"},"content":"* allow NUS students to save and search up contacts of students/tutors/instructors and the courses they are in. (e.g. tutorial/lecture groupings)","lastModifiedDate":"2024-03-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                                                       | So that I can…​                                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"LargeCrowd"},"content":"|-----|--------------------------------------------|------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* * *` | new user                                   | see usage instructions                                                             | refer to instructions when I forget how to use the App                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"LargeCrowd"},"content":"| `* * *` | user                                       | add a new contact                                                                  |                                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":291,"author":{"gitId":"LargeCrowd"},"content":"| `* * *` | user                                       | delete a contact                                                                   | remove entries that I no longer need                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"LargeCrowd"},"content":"| `* * *` | user                                       | edit a contact                                                                     | change incorrect or new information about a contact                                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"LargeCrowd"},"content":"| `* * *` | user                                       | find a contact by name                                                             | locate details of contact without having to go through the entire list             |","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"LargeCrowd"},"content":"| `* * *` | user                                       | find a contact by course code                                                      | locate contact from a specific course without having to go through the entire list |","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"LargeCrowd"},"content":"| `*` | user                                       | find a contact by tag                                                              | find contacts with similar roles quickly  |","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"LargeCrowd"},"content":"| `* * *` | user                                       | list all contacts                                                                  | see all contacts at a glance                                                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"LargeCrowd"},"content":"| `* *` | user                                       | undo the previous command                                                          | revert the previous action                                                        |","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"LargeCrowd"},"content":"| `* *` | user                                       | redo the previous command                                                          | redo the previous action                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"LargeCrowd"},"content":"| `* *` | user                                       | tag contacts with custom labels                                                    | easily identify their roles in my academic life                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"LargeCrowd"},"content":"| `* *` | user                                       | press [↑] to fill the command-line box with previous commands from command history | edit the last-typed erroneous command quickly  |","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"LargeCrowd"},"content":"| `*` | user                                       | share a contact with my classmates                                                 | collaborate more easily on group assignments  |","lastModifiedDate":"2024-04-15"},{"lineNumber":302,"author":{"gitId":"LargeCrowd"},"content":"| `*` | user                                       | set reminders to contact instructors before important deadlines                    | ensure timely communication  |","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"LargeCrowd"},"content":"| `*` | user                                       | rate and review my interactions with instructors                                   | keep track of my personal experiences and preferences  |","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"LargeCrowd"},"content":"(For all use cases below, the **System** is the `NUSContacts` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"E0735389"},"content":"**UC1: Add a contact**","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"E0735389"},"content":"1.  User requests to add a contact","lastModifiedDate":"2024-04-15"},{"lineNumber":314,"author":{"gitId":"E0735389"},"content":"2.  User provides the contact\u0027s details","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"E0735389"},"content":"3.  NUSContacts adds the contact","lastModifiedDate":"2024-04-15"},{"lineNumber":316,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":317,"author":{"gitId":"LargeCrowd"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":318,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":319,"author":{"gitId":"LargeCrowd"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":320,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":321,"author":{"gitId":"E0735389"},"content":"* 2a. The contact already exists.","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"LargeCrowd"},"content":"    * 2a1. NUSContacts informs the user of the error.","lastModifiedDate":"2024-03-07"},{"lineNumber":323,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":324,"author":{"gitId":"LargeCrowd"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":325,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":326,"author":{"gitId":"E0735389"},"content":"**UC2: Delete a contact**","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":328,"author":{"gitId":"LargeCrowd"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":329,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":330,"author":{"gitId":"LargeCrowd"},"content":"1.  User requests to list tutors","lastModifiedDate":"2024-03-07"},{"lineNumber":331,"author":{"gitId":"LargeCrowd"},"content":"2.  NUSContacts shows a list of tutors","lastModifiedDate":"2024-03-07"},{"lineNumber":332,"author":{"gitId":"E0735389"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"E0735389"},"content":"4.  NUSContacts deletes the contact","lastModifiedDate":"2024-04-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"LargeCrowd"},"content":"    * 3a1. NUSContacts shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"E0735389"},"content":"**UC3: Edit a contact**","lastModifiedDate":"2024-04-15"},{"lineNumber":350,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":351,"author":{"gitId":"LargeCrowd"},"content":"**MSS**","lastModifiedDate":"2024-04-03"},{"lineNumber":352,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":353,"author":{"gitId":"E0735389"},"content":"1. User requests to edit a contact","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"LargeCrowd"},"content":"2. User provides the field to edit and the new value","lastModifiedDate":"2024-04-03"},{"lineNumber":355,"author":{"gitId":"E0735389"},"content":"3. NUSContacts edits the contact","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":357,"author":{"gitId":"LargeCrowd"},"content":"   Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":358,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"LargeCrowd"},"content":"**Extensions**","lastModifiedDate":"2024-04-03"},{"lineNumber":360,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"LargeCrowd"},"content":"* 2a. User provides an empty address for a PROFESSOR.","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"LargeCrowd"},"content":"    * 2a1. NUSContacts shows an error message.","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"LargeCrowd"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-03"},{"lineNumber":365,"author":{"gitId":"E0735389"},"content":"* 2b. User gives a contact without an address the PROFESSOR role.","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"LargeCrowd"},"content":"    * 2b1. NUSContacts shows an error message.","lastModifiedDate":"2024-04-03"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":370,"author":{"gitId":"E0735389"},"content":"* 2c. User provides an invalid index such as -1.","lastModifiedDate":"2024-04-04"},{"lineNumber":371,"author":{"gitId":"E0735389"},"content":"    * 2c1. NUSContacts points out where the index is in the command and shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":372,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":373,"author":{"gitId":"E0735389"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"E0735389"},"content":"* 2d. User provides a phone number that does not conform to the expected format.","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"E0735389"},"content":"    * 2d1. NUSContacts points out where the phone number is in the command and shows a warning.","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"E0735389"},"content":"    * 2d2. User specify that the warning is to be ignored.","lastModifiedDate":"2024-04-04"},{"lineNumber":378,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":379,"author":{"gitId":"E0735389"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-04"},{"lineNumber":380,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":381,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":382,"author":{"gitId":"E0735389"},"content":"**UC4: Find a contact by name**","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":384,"author":{"gitId":"LargeCrowd"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":385,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":386,"author":{"gitId":"E0735389"},"content":"1.  User requests to find a contact","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"LargeCrowd"},"content":"2.  NUSContacts prompts search criterion (name or course code)","lastModifiedDate":"2024-03-07"},{"lineNumber":388,"author":{"gitId":"LargeCrowd"},"content":"3.  User provides the search criterion (name)","lastModifiedDate":"2024-03-07"},{"lineNumber":389,"author":{"gitId":"E0735389"},"content":"4.  NUSContacts shows the contact(s) that match the criterion","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":391,"author":{"gitId":"LargeCrowd"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":392,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":393,"author":{"gitId":"LargeCrowd"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":394,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":395,"author":{"gitId":"E0735389"},"content":"* 4a. No contact matches the criterion.","lastModifiedDate":"2024-04-15"},{"lineNumber":396,"author":{"gitId":"LargeCrowd"},"content":"    * 4a1. NUSContacts informs the user of the error.","lastModifiedDate":"2024-03-07"},{"lineNumber":397,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":398,"author":{"gitId":"LargeCrowd"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":399,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":400,"author":{"gitId":"E0735389"},"content":"**UC5: Find a contact by course code**","lastModifiedDate":"2024-04-15"},{"lineNumber":401,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":402,"author":{"gitId":"LargeCrowd"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":403,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":404,"author":{"gitId":"E0735389"},"content":"1.  User requests to find a contact","lastModifiedDate":"2024-04-15"},{"lineNumber":405,"author":{"gitId":"LargeCrowd"},"content":"2.  NUSContacts prompts search criterion (name or course code)","lastModifiedDate":"2024-03-07"},{"lineNumber":406,"author":{"gitId":"LargeCrowd"},"content":"3.  User provides the search criterion (course code)","lastModifiedDate":"2024-03-07"},{"lineNumber":407,"author":{"gitId":"E0735389"},"content":"4.  NUSContacts shows the contact(s) that match the criterion","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":409,"author":{"gitId":"LargeCrowd"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":410,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":411,"author":{"gitId":"LargeCrowd"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":412,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":413,"author":{"gitId":"E0735389"},"content":"* 4a. No contact matches the criterion.","lastModifiedDate":"2024-04-15"},{"lineNumber":414,"author":{"gitId":"LargeCrowd"},"content":"    * 4a1. NUSContacts informs the user of the error.","lastModifiedDate":"2024-03-07"},{"lineNumber":415,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":416,"author":{"gitId":"LargeCrowd"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":417,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":418,"author":{"gitId":"E0735389"},"content":"**UC5: Clear all contacts**","lastModifiedDate":"2024-04-15"},{"lineNumber":419,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":420,"author":{"gitId":"E0735389"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"E0735389"},"content":"1.  User requests to clear all contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":423,"author":{"gitId":"E0735389"},"content":"3.  NUSContacts clears all contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"E0735389"},"content":"    Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":427,"author":{"gitId":"E0735389"},"content":"**UC6: Clear all contacts**","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":429,"author":{"gitId":"E0735389"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":430,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"E0735389"},"content":"1.  User requests to clear all contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":432,"author":{"gitId":"E0735389"},"content":"3.  NUSContacts clears all contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"E0735389"},"content":"    Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":435,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":436,"author":{"gitId":"E0735389"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":437,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":438,"author":{"gitId":"E0735389"},"content":"* 2a. The contact already exists.","lastModifiedDate":"2024-04-15"},{"lineNumber":439,"author":{"gitId":"E0735389"},"content":"    * 2a1. NUSContacts informs the user of the error.","lastModifiedDate":"2024-04-15"},{"lineNumber":440,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":441,"author":{"gitId":"E0735389"},"content":"      Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":442,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"ChillinRage"},"content":"2.  Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"ChillinRage"},"content":"4.  Error messages displayed to application window should be easily understood by most users.","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"ChillinRage"},"content":"5.  System should respond to user actions within 1 second.","lastModifiedDate":"2024-03-07"},{"lineNumber":451,"author":{"gitId":"ChillinRage"},"content":"6.  For databases with less than 1000 contacts, fetching and saving of contacts to/from it should not exceed 200 milliseconds.","lastModifiedDate":"2024-03-07"},{"lineNumber":452,"author":{"gitId":"ChillinRage"},"content":"7.  System should handle data corruption or loss without crashing the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":453,"author":{"gitId":"ChillinRage"},"content":"8.  System architecture should support future updates and extensions without major restructures.","lastModifiedDate":"2024-03-07"},{"lineNumber":454,"author":{"gitId":"ChillinRage"},"content":"9.  System should support comprehensive testing for all components and features.","lastModifiedDate":"2024-03-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":460,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"E0735389"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2024-04-04"},{"lineNumber":465,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":466,"author":{"gitId":"E0735389"},"content":"Team size: 5","lastModifiedDate":"2024-04-04"},{"lineNumber":467,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":468,"author":{"gitId":"E0735389"},"content":"1. Currently, if any component (name, email, etc.) is too long, it will be hidden on the screen. We plan to implement","lastModifiedDate":"2024-04-04"},{"lineNumber":469,"author":{"gitId":"E0735389"},"content":"   appropriate mechanism to show the full component.","lastModifiedDate":"2024-04-04"},{"lineNumber":470,"author":{"gitId":"Hibeom0929"},"content":"2. Currently, `undo` only supports undoing one command. We plan to support undoing multiple commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"Hibeom0929"},"content":"3. Currently, using the `edit` command to edit the tag list will delete all the existing tags and replace it with the","lastModifiedDate":"2024-04-15"},{"lineNumber":472,"author":{"gitId":"E0735389"},"content":"   new tags. We plan to have ways to edit it incrementally later.","lastModifiedDate":"2024-04-04"},{"lineNumber":473,"author":{"gitId":"Hibeom0929"},"content":"4. Currently, there\u0027s no way to make `search` more targeted; for example, if there are 3 entries in the address book with name `John Doe`, `Jane Doe` and `John Smith`, then there\u0027s no way to search for specifically `John Doe`. In the future, we plan to have a way to specify that multiple words must match exactly, and have a priority system where contacts that matches more keywords are shown earlier.","lastModifiedDate":"2024-04-15"},{"lineNumber":474,"author":{"gitId":"Hibeom0929"},"content":"5. Currently, duplicate phone number and email are not detected. We plan to detect them and warn the user of the","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"E0735389"},"content":"   error.","lastModifiedDate":"2024-04-04"},{"lineNumber":476,"author":{"gitId":"Hibeom0929"},"content":"6. Currently, the result display cannot be resized to view the text in case the text is long. We plan to implement","lastModifiedDate":"2024-04-15"},{"lineNumber":477,"author":{"gitId":"E0735389"},"content":"   it later.","lastModifiedDate":"2024-04-04"},{"lineNumber":478,"author":{"gitId":"Hibeom0929"},"content":"7. Currently, address is mandatory if the role is `Professor`, but some profs/lecture track professors might not have offices.","lastModifiedDate":"2024-04-15"},{"lineNumber":479,"author":{"gitId":"Hibeom0929"},"content":"   We plan to implement a way to allow user have an empty address for `Professor` by using `f/`.","lastModifiedDate":"2024-04-15"},{"lineNumber":480,"author":{"gitId":"Hibeom0929"},"content":"8. Currently, `f/` bypasses all invalid field value errors, not one of the errors. ","lastModifiedDate":"2024-04-15"},{"lineNumber":481,"author":{"gitId":"Hibeom0929"},"content":"   We plan to implement a way to bypass one by one.","lastModifiedDate":"2024-04-15"},{"lineNumber":482,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":483,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"E0735389"},"content":"   1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2024-04-04"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"E0735389"},"content":"   1. Double-click the jar file.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":499,"author":{"gitId":"E0735389"},"content":"      Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-04-04"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"ChillinRage"},"content":"### Adding contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":509,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":510,"author":{"gitId":"ChillinRage"},"content":"1. Adding a contact while all contacts are being shown","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":512,"author":{"gitId":"ChillinRage"},"content":"   Prerequisites: All existing contacts are to be cleared using `clear` command. This is to ensure no clashing of contact names while testing.","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":514,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `add n/Joe Bama e/e0123456@u.nus.edu r/STUDENT c/CS2103T a/In the walls p/91234567`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":515,"author":{"gitId":"ChillinRage"},"content":"      Expected: New contact with the specified descriptions added to the list and shown in the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":516,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `add n/Donald Frump e/spammail@gmail.com r/TA c/CS2101`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"ChillinRage"},"content":"      Expected: Similar to previous, except the \"phone\" and \"address\" fields now show `(no phone number)` and `(no address)` respectively.","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"ChillinRage"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `add n/Hilarious Blipton e/e6969420@u.nus.edu c/DSA1101`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"ChillinRage"},"content":"      Expected: Contact is not added. Error details shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `add n/Hilarious Blipton e/FAKEEMAIL r/STUDENT c/DSA1101`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":524,"author":{"gitId":"ChillinRage"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `add n/Joe Bama e/e0123456@u.nus.edu r/STUDENT c/CS2103T a/In the walls p/91234567`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":527,"author":{"gitId":"ChillinRage"},"content":"      Expected: Similar to previous. (This test must be done after the first test case)","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"ChillinRage"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `add n/Hilarious Blipton n/Not Elden Clinton e/e6969420@u.nus.edu r/STUDENT c/DSA1101`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":530,"author":{"gitId":"ChillinRage"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"ChillinRage"},"content":"   1. Other incorrect add commands to try: `add`, `adding ...`, `...`.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"ChillinRage"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"ChillinRage"},"content":"### Deleting contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"ChillinRage"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2024-04-15"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"ChillinRage"},"content":"   Prerequisites: List all contacts using the `list` command. Multiple contacts already in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2024-04-15"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"ChillinRage"},"content":"      Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-15"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"ChillinRage"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the current list size).\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"ChillinRage"},"content":"1. Deleting multiple contacts while all contacts are being shown","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":552,"author":{"gitId":"ChillinRage"},"content":"   Prerequisites: List all contacts using the `list` command. Multiple contacts already in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `delete 1 2`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"ChillinRage"},"content":"      Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"ChillinRage"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":557,"author":{"gitId":"ChillinRage"},"content":"   1. Test case: `delete 1, 2`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":558,"author":{"gitId":"ChillinRage"},"content":"      Expected: First 2 contacts are deleted from the list. Details of the deleted contacts shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":560,"author":{"gitId":"ChillinRage"},"content":"   1. Other incorrect delete commands to try: `delete 1, 0`, `delete 1, 3, x`, `...` (where x is larger than the current list size)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":561,"author":{"gitId":"ChillinRage"},"content":"      Expected: Similar to the first test case.","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"E0735389"},"content":"   1. Close the application, and delete the data file (if it exists).","lastModifiedDate":"2024-04-04"},{"lineNumber":568,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":569,"author":{"gitId":"E0735389"},"content":"   2. Re-launch the application.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":570,"author":{"gitId":"E0735389"},"content":"      Expected: The data file is re-created and populated with sample data.","lastModifiedDate":"2024-04-04"},{"lineNumber":571,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":572,"author":{"gitId":"E0735389"},"content":"   3. Close the application, and modify the data to be invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":573,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":574,"author":{"gitId":"E0735389"},"content":"   4. Re-launch the application.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":575,"author":{"gitId":"E0735389"},"content":"      Expected: The program reports the data file is corrupted, and start with an empty address list.","lastModifiedDate":"2024-04-04"},{"lineNumber":576,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":577,"author":{"gitId":"E0735389"},"content":"   5. Add some entry into the address book.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":578,"author":{"gitId":"E0735389"},"content":"      Expected: The new data is saved into the save file.","lastModifiedDate":"2024-04-04"},{"lineNumber":579,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":580,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":581,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LargeCrowd":74,"Hibeom0929":13,"E0735389":166,"-":280,"ChillinRage":49}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LargeCrowd"},"content":"NUSContacts is a **desktop app designed for NUS Students, offering a streamlined way to manage their academic contacts with ease.**","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"LargeCrowd"},"content":"Whether you\u0027re organizing peer groups, keeping track of tutors, or connecting with professors, NUSContacts centralizes the organization of contacts.","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"LargeCrowd"},"content":"Our platform combines the simplicity of a Command Line Interface (CLI) with an intuitive Graphical User Interface (GUI), providing users with the best of both worlds.","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"If you can type fast, NUSContacts can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"## Table of Contents","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"1. Ensure you have Java `11` or above installed in your Computer. (Refer to [FAQ](#faq) on how to check your Java version and how to install it)","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"LargeCrowd"},"content":"2. Download the latest `NUSContacts.jar` from [here](https://github.com/AY2324S2-CS2103T-T11-2/tp/releases).","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"LargeCrowd"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your NUSContacts application.","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"LargeCrowd"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar NUSContacts.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"LargeCrowd"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * `list`: Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com r/STUDENT a/PGPR c/CS2103T`: Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `delete 3`: Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `clear`: Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * `exit`: Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"6. Refer to the [list of all commands](#list-of-all-commands) below for details of each command.","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"### General features","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"#### Command history","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"You can navigate between past successful commands and the current command by pressing the `UP` and `DOWN` arrow keys.","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"#### Saving the data","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"NUSContacts data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"#### Editing the data file","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"NUSContacts data are saved automatically as a JSON file `[JAR file location]/data/nuscontacts.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"You should only modify the data file when the program is closed, otherwise there is a risk of data loss as the program may not detect the changes.","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"If your changes to the data file makes its format invalid, NUSContacts will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"Furthermore, certain edits can cause the NUSContacts to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"### Glossary","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"Here are the definition of the terms we use throughout the documentation.","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"| Term               | Definition                                                                                                                                                                                                        |","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"|--------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"| Command | An input from the user that instructs the program to perform an action e.g. ADD a contact. |","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"E0735389"},"content":"| Command parameter | Some information that is provided to a command e.g. the name or phone number of a contact. |","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"| Contact | A person that the user wants to keep track of. |","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"| Optional parameter | A parameter that usually can be omitted from the command with no errors, unless specified otherwise. |","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"| GUI | The visual display of NUSContacts. |","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"| CLI | A text-based user interface to interact with the application. |","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"E0735389"},"content":"### List of all commands","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e **:information_source: Notes about the command format:**","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"LargeCrowd"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"  e.g. `[t/TAG]…` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/owes money` etc.","lastModifiedDate":"2024-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"  A standalone `…` has its usual meaning (\"and so on\"), to be interpreted depending on the surrounding context.","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"E0735389"},"content":"* If the command you have typed is an [unambiguous prefix](#term-unambiguous-prefix) of only one existing command, it will be interpreted as that existing command.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"E0735389"},"content":"  e.g. if the command is `ad …`, then it will be interpreted as an `add …` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"* Parameters can be in any order, except specified otherwise.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"  e.g. if the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"ChillinRage"},"content":"* For commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`), specifying any extraneous parameters for them","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"ChillinRage"},"content":"  will result in an `Invalid command format!` error message. Make sure to just enter these commands as it is. ","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":128,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"E0735389"},"content":"* The command name and tag is case-sensitive, following tradition of `bash` shell commands.","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"E0735389"},"content":"  Nevertheless, all command names are in lowercase, and typing lowercase characters is faster than typing uppercase","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"E0735389"},"content":"  characters.","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"E0735389"},"content":"#### Viewing help: `help`","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"ChillinRage"},"content":"Shows a message listing out all the available commands and their purpose.","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"LargeCrowd"},"content":"For more information regarding the command formats and examples, press `F1` to open up a help window (as shown in the picture below).","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"E0735389"},"content":"Depends on your keyboard model, you might have to press other keyboard combinations, such as `Fn+F1`, to trigger `F1`.","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"LargeCrowd"},"content":"To close the help window, you can simply press `esc` on your keyboard. Windows users may also use ","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"LargeCrowd"},"content":"`alt`+`F4` or click on the `X` in the top right corner of the window.","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"ChillinRage"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"E0735389"},"content":"The [project website](https://ay2324s2-cs2103t-t11-2.github.io/tp/) includes the NUSContacts user guide, which contains a more detailed description of each command.","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"Hibeom0929"},"content":"#### Adding a contact: `add`","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Hibeom0929"},"content":"Adds a contact to the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"E0735389"},"content":"Format: `add n/NAME e/EMAIL r/ROLE c/COURSE [a/ADDRESS] [p/PHONE] [t/TAG]… [f/]`","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Hibeom0929"},"content":"A contact can have any number of tags (including 0).","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"E0735389"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com r/student a/PGPR c/CS2101`","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"Hibeom0929"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com r/TA a/COM2-0102 c/ST2334`","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"E0735389"},"content":"This is mostly sufficient for you to know how to use the command. Here are some more details:","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"LargeCrowd"},"content":"| Field | Description                                                                                                                                                                                                                                                                                                                      | Example                | Optional |","lastModifiedDate":"2024-04-11"},{"lineNumber":175,"author":{"gitId":"LargeCrowd"},"content":"|-------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|----------|","lastModifiedDate":"2024-04-11"},{"lineNumber":176,"author":{"gitId":"LargeCrowd"},"content":"| `n/NAME` | Name of the contact.                                                                                                                                                                                                                                                                                                             | `n/John Doe`           | No |","lastModifiedDate":"2024-04-11"},{"lineNumber":177,"author":{"gitId":"LargeCrowd"},"content":"| `e/EMAIL` | Email of the contact.                                                                                                                                                                                                                                                                                                            | `e/e0123456@u.nus.edu` | No |","lastModifiedDate":"2024-04-11"},{"lineNumber":178,"author":{"gitId":"E0735389"},"content":"| `r/ROLE` | Role of the contact. The allowed roles are `Student`, `TA`, and `Professor`. The input is case-insensitive, and you can type an [unambiguous prefix](#term-unambiguous-prefix) to specify the role.                                                                                                                                                          | `r/Student`, `r/s`      | No |","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"LargeCrowd"},"content":"| `c/COURSE` | Course of the contact.                                                                                                                                                                                                                                                                                                           | `c/CS2103T`            | No |","lastModifiedDate":"2024-04-11"},{"lineNumber":180,"author":{"gitId":"LargeCrowd"},"content":"| `a/ADDRESS` | Address of the contact. You may keep a professor or TA\u0027s office address here. However, TAs and students may not have an office, thus address is optional for these roles.                                                                                                                                                        | `a/PGPR`               | Yes |","lastModifiedDate":"2024-04-11"},{"lineNumber":181,"author":{"gitId":"LargeCrowd"},"content":"| `p/PHONE` | Phone number of the contact. Unlike the `edit` command, `p/` without any phone number is not supported. If you want to not specify the phone number, leave out `p/PHONE` entirely.                                                                                                                                               | `p/98765432`           | Yes |","lastModifiedDate":"2024-04-11"},{"lineNumber":182,"author":{"gitId":"E0735389"},"content":"| `t/TAG` | Tags of the contact. The tag must not be empty. For the `add` command, if you want to not include any tag, leave out `t/TAG` entirely.                                                                                                                                                                                         | `t/friend`             | Yes |","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"E0735389"},"content":"| `f/` | Bypasses validation. The program will inform you if you violate a validation rule, and how to bypass it. More details in [technical details section](#detail-bypassing-validation).  | `f/`                   | Yes |","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"E0735389"},"content":"  One `f/` bypasses all invalid field value errors.","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"E0735389"},"content":"  For example, `add f/ n/Alice e/ c/` bypasses to have empty email and course.","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"Hibeom0929"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"Hibeom0929"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"Hibeom0929"},"content":"If you want to add people with same name, you can add additional characters to add and differentiate them.","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"Hibeom0929"},"content":"For example, you can add two Alice by `n/Alice1` and `n/Alice2`.","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"reetmitra"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"Hibeom0929"},"content":"#### Editing a contact: `edit`","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"Hibeom0929"},"content":"Edits an existing contact in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"E0735389"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [r/ROLE] [a/ADDRESS] [c/COURSE] [t/TAG]… [f/]`","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Hibeom0929"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the displayed address book. The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":210,"author":{"gitId":"Hibeom0929"},"content":"* When editing tags, the existing tags of the contact will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"Hibeom0929"},"content":"* You can remove the information in the optional fields.","lastModifiedDate":"2024-04-11"},{"lineNumber":212,"author":{"gitId":"Hibeom0929"},"content":"  - You can remove a contact\u0027s address by typing `a/` without specifying any address after it.  ","lastModifiedDate":"2024-04-11"},{"lineNumber":213,"author":{"gitId":"Hibeom0929"},"content":"    But if the contact\u0027s role is `Professor` you can\u0027t remove the address.","lastModifiedDate":"2024-04-11"},{"lineNumber":214,"author":{"gitId":"Hibeom0929"},"content":"  - You can remove all the contact’s tags by typing `t/` without","lastModifiedDate":"2024-04-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Hibeom0929"},"content":"  - You can remove a contact\u0027s phone number by typing `p/` without specifying any phone number after it.","lastModifiedDate":"2024-04-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"Hibeom0929"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"Hibeom0929"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"Hibeom0929"},"content":"*  `edit 3 p/ a/` Deletes the phone number and the address of the 3rd contact.","lastModifiedDate":"2024-04-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"E0735389"},"content":"If an invalid field value is specified, the program will inform you of the error.","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"E0735389"},"content":"You can fix the error, or use `f/` to bypass it if you want to.","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"Hibeom0929"},"content":"Refer to [Adding a contact: `add`](#adding-a-contact-add) for more information about `f/`.","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"E0735389"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"E0735389"},"content":"#### Locating contacts: `find`","lastModifiedDate":"2024-04-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"E0735389"},"content":"Finds contacts whose name, course or role contain any of the given keywords.","lastModifiedDate":"2024-04-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"Hibeom0929"},"content":"* The search is case-insensitive.  ","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"Hibeom0929"},"content":"  e.g `hans` will match `Hans`, `cs2103t` will match `CS2103T`, `student` will match `STUDENT`.","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"Hibeom0929"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"Hibeom0929"},"content":"* Only the name, course and role are searched.","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"Hibeom0929"},"content":"* Only full words will be matched.  ","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"Hibeom0929"},"content":"  e.g. `Han` will not match `Hans`.  ","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"Hibeom0929"},"content":"  e.g. `cs2103` will not match `CS2103T`.  ","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"Hibeom0929"},"content":"  e.g. `stu` will not match `STUDENT`.","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"Hibeom0929"},"content":"* Contacts matching at least one keyword will be returned (i.e. `OR` search).  ","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"Hibeom0929"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.  ","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"Hibeom0929"},"content":"  e.g. `Hans CS2103T` will return `Hans Gruber`, `Bo Yang` whose course is CS2103T.  ","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"Hibeom0929"},"content":"  e.g. `Hans TA` will return `Hans Gruber`, `Bo Yang` whose role is TA.","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"Hibeom0929"},"content":"  ","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"Hibeom0929"},"content":"* `find John` returns `john` and `John Doe`.","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"Hibeom0929"},"content":"* `find yang timothy` returns `Yang Heebeom`, `Timothy`.\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"Hibeom0929"},"content":"  ![result for \u0027find alex david\u0027](images/findYangTimothyResult.png)","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"Hibeom0929"},"content":"* `find yang cs2109s` returns `Yang Heebeom`, `Reet`.\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"Hibeom0929"},"content":"  ![result for \u0027find alex david\u0027](images/findYangCS2109SResult.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"Hibeom0929"},"content":"* `find yang professor` returns `Yang Heebeom`, `HongDuc`.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"Hibeom0929"},"content":"    ![result for \u0027find alex david\u0027](images/findYangProfessorResult.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"E0735389"},"content":"##### Note on returning to the original view","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"E0735389"},"content":"{:.no_toc}","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"LargeCrowd"},"content":"* After using `find`, the list may no longer display all saved contacts. Use `list` to revert the list to the full list of contacts in the order they were added.","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"Hibeom0929"},"content":"#### Listing all contacts: `list`","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"Hibeom0929"},"content":"Shows a list of all contacts in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"E0735389"},"content":"Format: `list`","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e :information_source: **Note:**","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"E0735389"},"content":"See [note](#note-on-returning-to-the-original-view) under [Locating Contacts](#locating-contacts-find) to understand how the `list` command can be useful.","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"E0735389"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"Hibeom0929"},"content":"#### Deleting a contact: `delete`","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"Hibeom0929"},"content":"Deletes the specified contact(s) from the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"Hibeom0929"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"Hibeom0929"},"content":"* The index refers to the index number shown in the displayed address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"E0735389"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"Hibeom0929"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"Hibeom0929"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":303,"author":{"gitId":"Hibeom0929"},"content":"You can also delete multiple contacts by chaining the indices using a comma.","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":305,"author":{"gitId":"E0735389"},"content":"Format: `delete INDEX1, INDEX2, INDEX3, …`","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":307,"author":{"gitId":"E0735389"},"content":"* A comma (`,`) must be used to separate each pair of indices.","lastModifiedDate":"2024-04-15"},{"lineNumber":308,"author":{"gitId":"ChillinRage"},"content":"* The indices do not need to be listed in order. (i.e. `2, 4, 6` is the same as `6, 2, 4`)","lastModifiedDate":"2024-03-27"},{"lineNumber":309,"author":{"gitId":"ChillinRage"},"content":"* Listing the same index more than once will result in an error message being displayed.","lastModifiedDate":"2024-03-27"},{"lineNumber":310,"author":{"gitId":"ChillinRage"},"content":"* Each `INDEX` must still adhere to the points listed above.","lastModifiedDate":"2024-03-27"},{"lineNumber":311,"author":{"gitId":"reetmitra"},"content":"* Whitespace between indices is not important. i.e. `delete 1,2,3` is the same as `delete 1, 2, 3`.","lastModifiedDate":"2024-04-11"},{"lineNumber":312,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":313,"author":{"gitId":"ChillinRage"},"content":"Example:","lastModifiedDate":"2024-03-27"},{"lineNumber":314,"author":{"gitId":"Hibeom0929"},"content":"* `delete 3, 1, 7, 8` deletes the first, third, seventh, and eighth contact in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":316,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"Hibeom0929"},"content":"#### Copying a contact\u0027s email to clipboard: `copy`","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"Hibeom0929"},"content":"Copies the email of the specified contact from the address book to the system clipboard.","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"reetmitra"},"content":"Format: `copy INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":326,"author":{"gitId":"Hibeom0929"},"content":"* Copies the email of the contact at the specified `INDEX`.","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"Hibeom0929"},"content":"* The index refers to the index number shown in the displayed address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"E0735389"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"Hibeom0929"},"content":"* `list` followed by `copy 2` copies the email of the 2nd contact in the address book to the clipboard.","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"Hibeom0929"},"content":"* `find Betsy` followed by `copy 1` copies the email of the 1st contact in the results of the `find` command to the clipboard.","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":334,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":335,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":338,"author":{"gitId":"E0735389"},"content":"#### Clearing all entries: `clear`","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":345,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":346,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":348,"author":{"gitId":"E0735389"},"content":"#### Undoing the last command: `undo`","lastModifiedDate":"2024-04-05"},{"lineNumber":349,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":350,"author":{"gitId":"Hibeom0929"},"content":"Revert the last change to the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"ChillinRage"},"content":"Since you can only undo the most recent change, entering `undo` consecutively","lastModifiedDate":"2024-04-04"},{"lineNumber":353,"author":{"gitId":"ChillinRage"},"content":"will only show an error message (`No new changes has been made to the data`).","lastModifiedDate":"2024-04-04"},{"lineNumber":354,"author":{"gitId":"ChillinRage"},"content":"Likewise, entering `undo` with no prior changes will also display the same error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":355,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":356,"author":{"gitId":"Hibeom0929"},"content":"**Note:** `undo` does not affect commands that do not modify the address book","lastModifiedDate":"2024-04-04"},{"lineNumber":357,"author":{"gitId":"ChillinRage"},"content":"(`help`, `list`, `find` etc.). ","lastModifiedDate":"2024-04-04"},{"lineNumber":358,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":359,"author":{"gitId":"E0735389"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-04"},{"lineNumber":360,"author":{"gitId":"E0735389"},"content":"While it\u0027s not possible to redo (undo an undo), you can use the [command history](#command-history) feature,","lastModifiedDate":"2024-04-04"},{"lineNumber":361,"author":{"gitId":"E0735389"},"content":"press `UP` a few times to go to the command that executes the edit,","lastModifiedDate":"2024-04-04"},{"lineNumber":362,"author":{"gitId":"E0735389"},"content":"then press `ENTER` to execute it.","lastModifiedDate":"2024-04-04"},{"lineNumber":363,"author":{"gitId":"E0735389"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":364,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":365,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":368,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"E0735389"},"content":"#### Exiting the program: `exit`","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"E0735389"},"content":"### Miscellaneous features","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"E0735389"},"content":"You don\u0027t need to know about these features on the first read.","lastModifiedDate":"2024-04-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":379,"author":{"gitId":"E0735389"},"content":"#### Highlight erroneous part of the command","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":381,"author":{"gitId":"E0735389"},"content":"When a command contains an error, the program will try to detect the part of the command that causes the error, and","lastModifiedDate":"2024-04-04"},{"lineNumber":382,"author":{"gitId":"E0735389"},"content":"selects it in the command box.","lastModifiedDate":"2024-04-04"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":384,"author":{"gitId":"Hibeom0929"},"content":"For example:","lastModifiedDate":"2024-04-11"},{"lineNumber":385,"author":{"gitId":"Hibeom0929"},"content":"* If you type `peer` for the role field, the error message is shown and ","lastModifiedDate":"2024-04-11"},{"lineNumber":386,"author":{"gitId":"Hibeom0929"},"content":"  the text cursor is positioned at `peer` where the error occurs as the image below.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":387,"author":{"gitId":"Hibeom0929"},"content":"  ![result for wrong role \u0027peer\u0027](images/Highlighting_erroneous_part_of_the_command.png)","lastModifiedDate":"2024-04-11"},{"lineNumber":388,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":389,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"E0735389"},"content":"#### Escape special characters","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"E0735389"},"content":"Naturally, because `n/` denotes the name, it is not possible to include it into part of many commands.","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"E0735389"},"content":"If you want to, you need to escape the slash `/`.","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":398,"author":{"gitId":"E0735389"},"content":"For example:","lastModifiedDate":"2024-04-04"},{"lineNumber":399,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":400,"author":{"gitId":"E0735389"},"content":"* If you want to edit the first contact to have a tag with content `info \u003d n/a`, the following is incorrect:","lastModifiedDate":"2024-04-04"},{"lineNumber":401,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":402,"author":{"gitId":"E0735389"},"content":"    ```","lastModifiedDate":"2024-04-04"},{"lineNumber":403,"author":{"gitId":"E0735389"},"content":"    edit 1 t/info \u003d n/a","lastModifiedDate":"2024-04-04"},{"lineNumber":404,"author":{"gitId":"E0735389"},"content":"    ```","lastModifiedDate":"2024-04-04"},{"lineNumber":405,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":406,"author":{"gitId":"E0735389"},"content":"    since `n/a` will be interpreted as editing the name of the first contact to `a`.","lastModifiedDate":"2024-04-04"},{"lineNumber":407,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":408,"author":{"gitId":"E0735389"},"content":"    Instead, you use a backslash to escape the slash as follows:","lastModifiedDate":"2024-04-04"},{"lineNumber":409,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":410,"author":{"gitId":"E0735389"},"content":"    ```","lastModifiedDate":"2024-04-04"},{"lineNumber":411,"author":{"gitId":"E0735389"},"content":"    edit 1 t/info \u003d n\\/a","lastModifiedDate":"2024-04-04"},{"lineNumber":412,"author":{"gitId":"E0735389"},"content":"    ```","lastModifiedDate":"2024-04-04"},{"lineNumber":413,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":414,"author":{"gitId":"E0735389"},"content":"* How can you escape a backslash? By using another backslash (the following will add a tag with content","lastModifiedDate":"2024-04-04"},{"lineNumber":415,"author":{"gitId":"E0735389"},"content":"    `included in people \\ students`):","lastModifiedDate":"2024-04-04"},{"lineNumber":416,"author":{"gitId":"E0735389"},"content":"    ```","lastModifiedDate":"2024-04-04"},{"lineNumber":417,"author":{"gitId":"E0735389"},"content":"    edit 1 t/included in people \\\\ students","lastModifiedDate":"2024-04-04"},{"lineNumber":418,"author":{"gitId":"E0735389"},"content":"    ```","lastModifiedDate":"2024-04-04"},{"lineNumber":419,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":420,"author":{"gitId":"E0735389"},"content":"    Other characters should not be escaped.","lastModifiedDate":"2024-04-04"},{"lineNumber":421,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":422,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":423,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"E0735389"},"content":"* Here are more examples.","lastModifiedDate":"2024-04-04"},{"lineNumber":425,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":426,"author":{"gitId":"E0735389"},"content":"    | If you want to enter | You should type |","lastModifiedDate":"2024-04-04"},{"lineNumber":427,"author":{"gitId":"E0735389"},"content":"    |--|--|","lastModifiedDate":"2024-04-04"},{"lineNumber":428,"author":{"gitId":"E0735389"},"content":"    | `a/b` | `a\\/b` |","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"E0735389"},"content":"    | `a\\/b` | `a\\\\\\/b` |","lastModifiedDate":"2024-04-04"},{"lineNumber":430,"author":{"gitId":"E0735389"},"content":"    | `a\\\\b` | `a\\\\\\\\b` |","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":432,"author":{"gitId":"E0735389"},"content":"* You should not enter [invalid escape sequences](#term-escaped-string), but if you do, the program will make a guess on what you mean.","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":434,"author":{"gitId":"E0735389"},"content":"    | If you type | The program will guess you wanted to type |","lastModifiedDate":"2024-04-04"},{"lineNumber":435,"author":{"gitId":"E0735389"},"content":"    |--|--|","lastModifiedDate":"2024-04-04"},{"lineNumber":436,"author":{"gitId":"E0735389"},"content":"    | `a\\\\\\b` | `a\\\\\\\\b` |","lastModifiedDate":"2024-04-04"},{"lineNumber":437,"author":{"gitId":"E0735389"},"content":"    | `x/y` | `x\\/y` |","lastModifiedDate":"2024-04-04"},{"lineNumber":438,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"E0735389"},"content":"* Here are some example commands.","lastModifiedDate":"2024-04-04"},{"lineNumber":440,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":441,"author":{"gitId":"E0735389"},"content":"  * `add n/John s\\/o Doe p/98765432 e/johnd@example.com r/student a/PGPR c/CS2103T` will add a contact with name","lastModifiedDate":"2024-04-04"},{"lineNumber":442,"author":{"gitId":"E0735389"},"content":"    `John s/o Doe`.","lastModifiedDate":"2024-04-04"},{"lineNumber":443,"author":{"gitId":"E0735389"},"content":"  * `find John s\\/o Doe` will be able to find that person.","lastModifiedDate":"2024-04-04"},{"lineNumber":444,"author":{"gitId":"E0735389"},"content":"  * `edit 2 t/birthday: 3\\/2` will edit the tag list of the 2nd person to have a single tag `birthday: 3/2`.","lastModifiedDate":"2024-04-04"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":448,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":451,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":452,"author":{"gitId":"E0735389"},"content":"## Appendix: Technical details","lastModifiedDate":"2024-04-15"},{"lineNumber":453,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":454,"author":{"gitId":"E0735389"},"content":"You should not need to read this, unless you run into some trouble.","lastModifiedDate":"2024-04-15"},{"lineNumber":455,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":456,"author":{"gitId":"E0735389"},"content":"### Detail: Bypassing validation","lastModifiedDate":"2024-04-15"},{"lineNumber":457,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":458,"author":{"gitId":"Hibeom0929"},"content":"Several fields have some validation rules (for example, you cannot have email address with parentheses as there are no emails with parentheses).","lastModifiedDate":"2024-04-15"},{"lineNumber":459,"author":{"gitId":"Hibeom0929"},"content":"However, sometimes you might want to have the input that doesn\u0027t strictly adhere to these rules. For example, you may want to input both official and personal email addresses for a single person in an email field, like `E11111111@u.nus.com(school), helloworld@gmail.com(personal)`.","lastModifiedDate":"2024-04-15"},{"lineNumber":460,"author":{"gitId":"Hibeom0929"},"content":"To accommodate such cases, the program allows users to bypass the validation rules by appending `f/` to the end of their input. So, if you wanted to change 7th person\u0027s email address to the above email addresses despite the parentheses, you could do so by `edit 7 e/E11111111@u.nus.com(school), helloworld@gmail.com(personal) f/`.","lastModifiedDate":"2024-04-15"},{"lineNumber":461,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":462,"author":{"gitId":"E0735389"},"content":"Some validation rules cannot be bypassed, however. If an error can be bypassed, the program will instruct you how to","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"E0735389"},"content":"bypass it (by appending `f/` at the end of the command).","lastModifiedDate":"2024-04-15"},{"lineNumber":464,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":465,"author":{"gitId":"E0735389"},"content":"Note that `f/` must come at the end, or immediately before a tag.","lastModifiedDate":"2024-04-15"},{"lineNumber":466,"author":{"gitId":"E0735389"},"content":"For example, `add f/ n/Alice e/alice@gmail.com r/STUDENT c/CS2103T` is allowed, but `add n/ f/ Alice …` or `add n/Alice e/ f/alice@gmail.com` is not allowed.","lastModifiedDate":"2024-04-15"},{"lineNumber":467,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":468,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":469,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":470,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":472,"author":{"gitId":"E0735389"},"content":"### Term: Escaped string","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":474,"author":{"gitId":"E0735389"},"content":"In the \"[Escape special characters](#escape-special-characters)\" feature, sometimes it\u0027s needed to *escape* a string in","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"E0735389"},"content":"order to enter it into the program.","lastModifiedDate":"2024-04-15"},{"lineNumber":476,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":477,"author":{"gitId":"E0735389"},"content":"Given a string `s`, **in order to escape it, the following procedure should be followed**:","lastModifiedDate":"2024-04-15"},{"lineNumber":478,"author":{"gitId":"E0735389"},"content":"For each character of `s`, if it is `/` or `\\`, prepend a backslash `\\` before it.","lastModifiedDate":"2024-04-15"},{"lineNumber":479,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":480,"author":{"gitId":"E0735389"},"content":"A valid **escaped string** is a string that is a possible result from applying the procedure above.","lastModifiedDate":"2024-04-15"},{"lineNumber":481,"author":{"gitId":"E0735389"},"content":"Equivalently, a valid escaped string is a sequence of zero or more of the following:","lastModifiedDate":"2024-04-15"},{"lineNumber":482,"author":{"gitId":"E0735389"},"content":"* Any character that is neither `/` nor `\\`,","lastModifiedDate":"2024-04-15"},{"lineNumber":483,"author":{"gitId":"E0735389"},"content":"* The string `\\/` or `\\\\`.","lastModifiedDate":"2024-04-15"},{"lineNumber":484,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":485,"author":{"gitId":"E0735389"},"content":"For example, `a\\\\b` is a valid escaped string that would result from escaping the string `a\\b`. However, `a\\x41b` would","lastModifiedDate":"2024-04-15"},{"lineNumber":486,"author":{"gitId":"E0735389"},"content":"be an invalid escaped string.","lastModifiedDate":"2024-04-15"},{"lineNumber":487,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":488,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":489,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":490,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":491,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":492,"author":{"gitId":"E0735389"},"content":"### Term: Unambiguous prefix","lastModifiedDate":"2024-04-15"},{"lineNumber":493,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":494,"author":{"gitId":"E0735389"},"content":"In several places in the program, you can type a prefix of the string to abbreviate the string.","lastModifiedDate":"2024-04-15"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":496,"author":{"gitId":"E0735389"},"content":"For example, you can type `a` to abbreviate [the `add` command](#adding-a-contact-add).","lastModifiedDate":"2024-04-15"},{"lineNumber":497,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":498,"author":{"gitId":"E0735389"},"content":"A string `s` is a **prefix** of another string `t` if `s` can be obtained by removing zero or more characters at the end","lastModifiedDate":"2024-04-15"},{"lineNumber":499,"author":{"gitId":"E0735389"},"content":"of `t`. For example, \"ab\" is a prefix of \"abcd\", but it\u0027s not a prefix of \"acbd\".","lastModifiedDate":"2024-04-15"},{"lineNumber":500,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":501,"author":{"gitId":"E0735389"},"content":"A prefix for a command is **unambiguous** if there is exactly one command that it is a prefix of,","lastModifiedDate":"2024-04-15"},{"lineNumber":502,"author":{"gitId":"E0735389"},"content":"and a prefix is **ambiguous** if there are at least two commands it is a prefix of.","lastModifiedDate":"2024-04-15"},{"lineNumber":503,"author":{"gitId":"E0735389"},"content":"For example, since there are two commands `edit` and `exit`, the string \"e\" would be an **ambiguous** prefix, since it","lastModifiedDate":"2024-04-15"},{"lineNumber":504,"author":{"gitId":"E0735389"},"content":"is a prefix of two distinct commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":505,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":506,"author":{"gitId":"E0735389"},"content":"Similarly, a prefix for a role is unambiguous if there is exactly one role that it is a prefix of.","lastModifiedDate":"2024-04-15"},{"lineNumber":507,"author":{"gitId":"E0735389"},"content":"Because currently there are only 3 roles (Student, Professor, TA), there is no ambiguous prefix for roles.","lastModifiedDate":"2024-04-15"},{"lineNumber":508,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":509,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"ChillinRage"},"content":"**Q**: How do I know if I have Java 11?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":516,"author":{"gitId":"ChillinRage"},"content":"**A**: Open your command terminal and enter `java --version`. The first line displayed should show `java` immediately followed by the version number.","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"ChillinRage"},"content":"**Q**: How do I install Java 11?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"ChillinRage"},"content":"**A**: Download Java 11 JRE [here](https://adoptium.net/temurin/releases/?package\u003djre\u0026version\u003d11). Then follow their [installation guide](https://adoptium.net/installation/).","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"E0735389"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous NUSContacts home folder.","lastModifiedDate":"2024-03-07"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"E0735389"},"content":"**Q**: How do I include special characters such as `/` into the name, address or tag?\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":525,"author":{"gitId":"E0735389"},"content":"**A**: Refer to [\"Escape special characters\" section](#escape-special-characters).","lastModifiedDate":"2024-04-04"},{"lineNumber":526,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":527,"author":{"gitId":"E0735389"},"content":"**Q**: I\u0027ve found a bug in the application. How can I report it?\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":528,"author":{"gitId":"E0735389"},"content":"**A**: Please check the [list of known issues/limitations](#known-issueslimitations) first. If it is not covered, you can report the bug at the [project\u0027s issue tracker on GitHub](https://github.com/AY2324S2-CS2103T-T11-2/tp/issues).","lastModifiedDate":"2024-04-05"},{"lineNumber":529,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":530,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"E0735389"},"content":"## Known issues/limitations","lastModifiedDate":"2024-04-05"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":538,"author":{"gitId":"E0735389"},"content":"2. **A professor must have an address attached**. This is reasonable in most cases; however, some visiting","lastModifiedDate":"2024-04-05"},{"lineNumber":539,"author":{"gitId":"E0735389"},"content":"   instructor may not have a specific office address in NUS.","lastModifiedDate":"2024-04-04"},{"lineNumber":540,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":541,"author":{"gitId":"E0735389"},"content":"   Because address can be any nonempty string, you can work around this issue by typing \"`none`\" or similar into the address field.","lastModifiedDate":"2024-04-04"},{"lineNumber":542,"author":{"gitId":"E0735389"},"content":"   The program will not handle this input specially, however.","lastModifiedDate":"2024-04-04"},{"lineNumber":543,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":544,"author":{"gitId":"E0735389"},"content":"1. If any component (name, email, etc.) is too long, **it will be hidden on the screen**.","lastModifiedDate":"2024-04-05"},{"lineNumber":545,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":546,"author":{"gitId":"E0735389"},"content":"8. The result display cannot be resized to view the text in case the text is long.","lastModifiedDate":"2024-04-05"},{"lineNumber":547,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":548,"author":{"gitId":"E0735389"},"content":"3. The `undo` only supports undoing one command, as mentioned in [the command\u0027s","lastModifiedDate":"2024-04-05"},{"lineNumber":549,"author":{"gitId":"E0735389"},"content":"   documentation](#undoing-the-last-command-undo).","lastModifiedDate":"2024-04-05"},{"lineNumber":550,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":551,"author":{"gitId":"E0735389"},"content":"4. Using the `edit` command to edit the tag list will delete all the existing tags and replace it with the","lastModifiedDate":"2024-04-05"},{"lineNumber":552,"author":{"gitId":"E0735389"},"content":"   new tags, as mentioned in [the command\u0027s documentation](#editing-a-contact-edit).","lastModifiedDate":"2024-04-05"},{"lineNumber":553,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":554,"author":{"gitId":"E0735389"},"content":"5. There\u0027s no way to make [the `find` command](#locating-contacts-find) more targeted; for example, if there are 3 entries in the address book with name `John Doe`, `Jane Doe` and `John Smith`, then there\u0027s no way to search for specifically `John Doe`.  \u003c!-- ] --\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":555,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":556,"author":{"gitId":"E0735389"},"content":"7. Duplicate phone number and email are not detected.","lastModifiedDate":"2024-04-05"},{"lineNumber":557,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":558,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":560,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":562,"author":{"gitId":"E0735389"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":563,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":564,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"Hibeom0929"},"content":"| Action     | Format, Examples                                                                                                                                                         |","lastModifiedDate":"2024-03-21"},{"lineNumber":567,"author":{"gitId":"reetmitra"},"content":"|------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"reetmitra"},"content":"| [**Add**](#adding-a-contact-add)    | `add n/NAME e/EMAIL r/ROLE c/COURSE [a/ADDRESS] [p/PHONE] [t/TAG]… [f/]` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com r/STUDENT a/PGPR c/CS2103T t/friend` |","lastModifiedDate":"2024-04-10"},{"lineNumber":569,"author":{"gitId":"E0735389"},"content":"| [**Clear**](#clearing-all-entries-clear)  | `clear`                                                                                                                                                                  |","lastModifiedDate":"2024-04-05"},{"lineNumber":570,"author":{"gitId":"E0735389"},"content":"| [**Delete**](#deleting-a-contact-delete) | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                      |","lastModifiedDate":"2024-04-05"},{"lineNumber":571,"author":{"gitId":"E0735389"},"content":"| [**Edit**](#editing-a-contact-edit)   | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [r/ROLE] [a/ADDRESS] [c/COURSE] [t/TAG]…`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                  |","lastModifiedDate":"2024-04-05"},{"lineNumber":572,"author":{"gitId":"E0735389"},"content":"| [**Find**](#locating-contacts-find)   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake CS2103T STUDENT`                                                                                               |","lastModifiedDate":"2024-04-05"},{"lineNumber":573,"author":{"gitId":"E0735389"},"content":"| [**List**](#listing-all-contacts-list)   | `list`                                                                                                                                                                   |","lastModifiedDate":"2024-04-05"},{"lineNumber":574,"author":{"gitId":"E0735389"},"content":"| [**Help**](#viewing-help-help)   | `help`                                                                                                                                                                   |","lastModifiedDate":"2024-04-05"},{"lineNumber":575,"author":{"gitId":"E0735389"},"content":"| [**Exit**](#exiting-the-program-exit)   | `exit`                                                                                                                                                                   |","lastModifiedDate":"2024-04-05"},{"lineNumber":576,"author":{"gitId":"E0735389"},"content":"| [**Copy Email**](#copying-a-contacts-email-to-clipboard-copy)   | `copy INDEX`                                                                                                                                                             |","lastModifiedDate":"2024-04-05"},{"lineNumber":577,"author":{"gitId":"E0735389"},"content":"| [**Undo**](#undoing-the-last-command-undo)   | `undo`                                                                                                                                                                   |","lastModifiedDate":"2024-04-05"},{"lineNumber":578,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"Hibeom0929"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"Hibeom0929"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"LargeCrowd":24,"Hibeom0929":130,"E0735389":252,"reetmitra":9,"-":137,"ChillinRage":29}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"title: \"NUSContacts\"","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"repository: \"AY2324S2-CS2103T-T11-2/tp\"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"E0735389":2,"-":13}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"E0735389"},"content":"    content: \"NUSContacts\";","lastModifiedDate":"2024-03-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"E0735389":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"Participant \"s:CommandString\" as commandstring LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"create commandstring","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"ui -[UI_COLOR]\u003e commandstring : \"delete 1\"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"activate commandstring","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"commandstring -[LOGIC_COLOR]-\u003e ui","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"deactivate commandstring","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"ui -[UI_COLOR]\u003e logic : execute(s)","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"E0735389":9,"-":38}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"reetmitra"},"content":"Person *--\u003e Name","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"Person *--\u003e Course","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"Enum \"\u003c\u003cenumeration\u003e\u003e\\nRole\" as Role","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"reetmitra"},"content":"Person *--\u003e Role","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"Person *--\u003e \"*\" Phone","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hibeom0929":1,"reetmitra":2,"-":19,"ChillinRage":3}},{"path":"docs/diagrams/CommandExceptionClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"hide circle","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"class CommandExecutionException","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nCommandException\" as CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    +getErroneousPart(): Optional\u003cCommandPart\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"class ParseException","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"Command .right.\u003e CommandExecutionException : throws \u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"Parser .right.\u003e ParseException : throws \u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"ParseException .down[hidden].|\u003e Command","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"ParseException -right|\u003e IllegalValueException","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"IllegalValueException -right|\u003e Exception","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"CommandExecutionException .right.|\u003e CommandException","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"ParseException ..|\u003e CommandException","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"E0735389":23}},{"path":"docs/diagrams/CommandPartClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"hide circle","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"class CommandPart {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    +getStartIndex(): int","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    +getEndIndex(): int","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"class CommandString {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    -commandText: String","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    +toString(): String","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"CommandPart -right-\u003e CommandString: refers to \u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"E0735389":18}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"package \"Parser Classes\" as ParserClasses {","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" ParserClasses","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"LargeCrowd"},"content":"ParserClasses ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"LargeCrowd"},"content":"LogicManager .down.\u003e Command : calls \u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"LargeCrowd"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LargeCrowd":5,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"Class Course","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"LargeCrowd"},"content":"Enum \"\u003c\u003cenumeration\u003e\u003e\\nRole\" as Role","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"LargeCrowd"},"content":"Person *--\u003e Course","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"Person *--\u003e \"*\" Phone","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"LargeCrowd"},"content":"Person *--\u003e Role","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"reetmitra"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"Email -[hidden]right-\u003e Role","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"Role -[hidden]right-\u003e Course","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"Course -[hidden]right-\u003e Tag","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LargeCrowd":3,"reetmitra":1,"-":53,"ChillinRage":5}},{"path":"docs/diagrams/OldArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"!include style.puml","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"activate ui UI_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"deactivate model","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"deactivate storage","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"deactivate storage","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"deactivate logic","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"deactivate ui","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"E0735389":39}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"Class CommandString","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"Class CommandPart","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"LargeCrowd"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"LargeCrowd"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"LargeCrowd"},"content":"AddressBookParser ..\u003e Command : uses \u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"ArgumentTokenizer ..\u003e CommandString","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"ArgumentTokenizer .down.\u003e CommandPart","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"ParserUtil ..\u003e CommandPart","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"CommandPart .left.\u003e CommandString","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"LargeCrowd":3,"E0735389":6,"-":35}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"title: NUSContacts","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T11-2/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"[![CodeCov Status](https://codecov.io/gh/AY2324S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2324S2-CS2103T-T11-2/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"**NUSContacts is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"* If you are interested in using NUSContacts, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"* If you are interested about developing NUSContacts, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"E0735389":6,"-":13}},{"path":"docs/team/Hibeom0929.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hibeom0929"},"content":"---","lastModifiedDate":"2024-04-16"},{"lineNumber":2,"author":{"gitId":"Hibeom0929"},"content":"layout: page","lastModifiedDate":"2024-04-16"},{"lineNumber":3,"author":{"gitId":"Hibeom0929"},"content":"title: Yang Heebeom\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-16"},{"lineNumber":4,"author":{"gitId":"Hibeom0929"},"content":"---","lastModifiedDate":"2024-04-16"},{"lineNumber":5,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":6,"author":{"gitId":"Hibeom0929"},"content":"### Project: NUSContacts","lastModifiedDate":"2024-04-16"},{"lineNumber":7,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":"NUSContacts is a desktop app designed for NUS Students, offering a streamlined way to manage their academic contacts with ease.","lastModifiedDate":"2024-04-16"},{"lineNumber":9,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-16"},{"lineNumber":11,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"### Code contributed","lastModifiedDate":"2024-04-16"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":"You can find the overall code using this [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003dHibeom0929\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dHibeom0929\u0026tabRepo\u003dAY2324S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse).","lastModifiedDate":"2024-04-16"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"### New features","lastModifiedDate":"2024-04-16"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"* Added new **role** field to contacts.   ","lastModifiedDate":"2024-04-16"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"  (Pull request[#30](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/30))","lastModifiedDate":"2024-04-16"},{"lineNumber":18,"author":{"gitId":"Hibeom0929"},"content":"    * What it does: allows the user to save the role of the contacts.","lastModifiedDate":"2024-04-16"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"    * Justification: This feature is necessary as our product is for NUS students and showing relationship is one of the important purpose of our product.","lastModifiedDate":"2024-04-16"},{"lineNumber":20,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"### Enhancements to existing features","lastModifiedDate":"2024-04-16"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"* `help` command now not only opens the help window box but also listed all existing commands.  ","lastModifiedDate":"2024-04-16"},{"lineNumber":23,"author":{"gitId":"Hibeom0929"},"content":"  (Pull request[#84](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/84))","lastModifiedDate":"2024-04-16"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"  * **What it does**: Users can find all commands without accessing User Guide by `help` command.","lastModifiedDate":"2024-04-16"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"  * **Impact**: Users now find it convenient to access all commands without having to open an external webpage.","lastModifiedDate":"2024-04-16"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"  ","lastModifiedDate":"2024-04-16"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"* User can `find` contacts by `Course`.  ","lastModifiedDate":"2024-04-16"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"  (Pull request[#95](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/95))","lastModifiedDate":"2024-04-16"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"  * **What it does**: Users can use the `find` command with `Course`.","lastModifiedDate":"2024-04-16"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"  * **Impact**: Users now can simply find all contacts of a certain `Course`. ","lastModifiedDate":"2024-04-16"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"* `Name` field can detect case-insensitive name duplication.  ","lastModifiedDate":"2024-04-16"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"  (Pull request[#118](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/118))","lastModifiedDate":"2024-04-16"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"  * **What it does**: Names with same letter and different cases are also considered as same name. For example, `Heebeom` and `heeBeom` are same names.","lastModifiedDate":"2024-04-16"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"  * **Impact**: Users can\u0027t add the contacts with same name even their name\u0027s case is different.","lastModifiedDate":"2024-04-16"},{"lineNumber":36,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":37,"author":{"gitId":"Hibeom0929"},"content":"* User can `find` contacts by `Role`.  ","lastModifiedDate":"2024-04-16"},{"lineNumber":38,"author":{"gitId":"Hibeom0929"},"content":"  (Pull request[#132](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/132))","lastModifiedDate":"2024-04-16"},{"lineNumber":39,"author":{"gitId":"Hibeom0929"},"content":"  * **What it does**: Users can use the `find` command with `Role`.","lastModifiedDate":"2024-04-16"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"  * **Impact**: Users now can simply find all contacts of a certain `Role`.","lastModifiedDate":"2024-04-16"},{"lineNumber":41,"author":{"gitId":"Hibeom0929"},"content":"  ","lastModifiedDate":"2024-04-16"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"* Wrote and updated tests for the new features and enhanced features that I made. Also, added more tests and enabled previously disabled tests.","lastModifiedDate":"2024-04-16"},{"lineNumber":43,"author":{"gitId":"Hibeom0929"},"content":" (e.g.Pull request[#204](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/204))","lastModifiedDate":"2024-04-16"},{"lineNumber":44,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":45,"author":{"gitId":"Hibeom0929"},"content":"### Documentation","lastModifiedDate":"2024-04-16"},{"lineNumber":46,"author":{"gitId":"Hibeom0929"},"content":"* User Guide:","lastModifiedDate":"2024-04-16"},{"lineNumber":47,"author":{"gitId":"Hibeom0929"},"content":"  * Added examples of features like bypassing and find with images.","lastModifiedDate":"2024-04-16"},{"lineNumber":48,"author":{"gitId":"Hibeom0929"},"content":"  * Edited all nouns to have consistency.","lastModifiedDate":"2024-04-16"},{"lineNumber":49,"author":{"gitId":"Hibeom0929"},"content":"  * Divided each sections with the line with a link \u0027Back to the Table of Contents\u0027 at the end.","lastModifiedDate":"2024-04-16"},{"lineNumber":50,"author":{"gitId":"Hibeom0929"},"content":"* Developer Guide:","lastModifiedDate":"2024-04-16"},{"lineNumber":51,"author":{"gitId":"Hibeom0929"},"content":"  * Added planned enhancements.","lastModifiedDate":"2024-04-16"},{"lineNumber":52,"author":{"gitId":"Hibeom0929"},"content":"    (Pull request[#201](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/201))","lastModifiedDate":"2024-04-16"},{"lineNumber":53,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":54,"author":{"gitId":"Hibeom0929"},"content":"### Community","lastModifiedDate":"2024-04-16"},{"lineNumber":55,"author":{"gitId":"Hibeom0929"},"content":"* PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2024-04-16"},{"lineNumber":56,"author":{"gitId":"Hibeom0929"},"content":"  e.g.[#146](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/146),","lastModifiedDate":"2024-04-16"},{"lineNumber":57,"author":{"gitId":"Hibeom0929"},"content":"  [#197](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/197)","lastModifiedDate":"2024-04-16"},{"lineNumber":58,"author":{"gitId":"Hibeom0929"},"content":"* Locally tested and approved PRs","lastModifiedDate":"2024-04-16"},{"lineNumber":59,"author":{"gitId":"Hibeom0929"},"content":"* Contributed to almost all the discussions in issues. ","lastModifiedDate":"2024-04-16"},{"lineNumber":60,"author":{"gitId":"Hibeom0929"},"content":"  (examples: issues [64](https://github.com/AY2324S2-CS2103T-T11-2/tp/issues/64),","lastModifiedDate":"2024-04-16"},{"lineNumber":61,"author":{"gitId":"Hibeom0929"},"content":"             issues [129](https://github.com/AY2324S2-CS2103T-T11-2/tp/issues/129))","lastModifiedDate":"2024-04-16"},{"lineNumber":62,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-16"}],"authorContributionMap":{"Hibeom0929":62}},{"path":"docs/team/chillinrage.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"---","lastModifiedDate":"2024-04-16"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"layout: page","lastModifiedDate":"2024-04-16"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"title: Chong Chan How\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-16"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"---","lastModifiedDate":"2024-04-16"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"## Project: NUSContacts","lastModifiedDate":"2024-04-16"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"NUSContacts is a desktop app designed for NUS Students, offering a streamlined way to manage their academic contacts with ease.","lastModifiedDate":"2024-04-16"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-16"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"### Code contributed","lastModifiedDate":"2024-04-16"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"You can find the overall code using this [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003dchillinrage\u0026breakdown\u003dtrue).","lastModifiedDate":"2024-04-16"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"### New features","lastModifiedDate":"2024-04-16"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"* Added new **course** field to contacts. ","lastModifiedDate":"2024-04-16"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"([#55](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/55){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"  * **What it does**: A new field for users to store the course code of a contact.","lastModifiedDate":"2024-04-16"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"  * **Highlights**: This feature affects existing commands (`add`, `edit` etc.) and allows for another enhancement (\"Find contacts by course code\" implemented by **Hibeom0929** [#95](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/95){:target\u003d\"_blank\"}).","lastModifiedDate":"2024-04-16"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"  * **Challenge**: As this was my first contribution to the project, this required me to conduct an in-depth analysis of the existing code, from the parsing and checking of prefixes to setting up of unit tests.","lastModifiedDate":"2024-04-16"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"* Added a history command that allows the user to navigate to previous successful commands using up/down keys. ([#102](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/102){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"  * **Impact**: Allows ease of toggling between past commands, which also allows users to keep track of the commands they have executed.","lastModifiedDate":"2024-04-16"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"* Added new `undo` command.","lastModifiedDate":"2024-04-16"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"([#131](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/131){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"  * **What it does**: A new command for users to undo the last change made to the contact list. This only undo commands such as `add`, `delete`, `edit`, etc. but cannot undo commands such as `list`, `help`, etc. since they do not modify the contact list.","lastModifiedDate":"2024-04-16"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"  * **Impact**: Allows users to recover from errors if they had entered the wrong command. ","lastModifiedDate":"2024-04-16"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"  * **Possible improvements**: Complementary `redo` feature in case the user wants to revert the changes back, as well as improving `undo` to also work when used consecutively (to undo last few changes).","lastModifiedDate":"2024-04-16"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"### Enhancements to existing features","lastModifiedDate":"2024-04-16"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"* `delete` command now supports multiple indices as parameter.","lastModifiedDate":"2024-04-16"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"([#74](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/74){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"  * **What it does**: Allows users to delete multiple contacts with just one command.","lastModifiedDate":"2024-04-16"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"  * **Impact**: Streamline multiple deletions, which is applicable in the context of NUS students being the main users. Reason is that students will change courses every semester, which means that users might want to remove most of the existing contacts (except for a few such as close peers). Trying to delete them 1 by 1 would be slow and frustrating to users. This enhancement would mitigate that frustration by compressing all those lines into just one command.","lastModifiedDate":"2024-04-16"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"  * **Possible improvements**: Improve parsing to allow range deletions (i.e. `1 - 10`) rather than individual indices.","lastModifiedDate":"2024-04-16"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"* `esc` key now closes help window.","lastModifiedDate":"2024-04-16"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"([#90](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/90){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"  * **What it does**: Users can press `F1` to open up a small help window. Then pressing `esc` key allows users to close that window and return to the main application.","lastModifiedDate":"2024-04-16"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"  * **Impact**: Quality of life improvement as it allows users to quickly close the window without having to press `alt` + `f4` or navigating the cursor to the `x` button.","lastModifiedDate":"2024-04-16"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"* Improve parser to understand and execute unambiguous command prefix","lastModifiedDate":"2024-04-16"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"([#70](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/70){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"  * **What it does**: Users can type the prefix of a command and the application will still execute the intended full command if the entered prefix clearly matches the full command. (i.e. `a` will be interpeted as `add` and `del` will be interpreted as `delete`). However, prefixes that are ambiguous will still result in an error (i.e. `c` can mean `copy` or `clear`).","lastModifiedDate":"2024-04-16"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"  * **Impact**: Quality of life improvement as it allows users to type the shortened form of the command instead of the full word.","lastModifiedDate":"2024-04-16"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"* Wrote additional tests for the new features as well as update existing tests to accommodate new features. These tests are updated concurrently with the new feature implementations so the changes are reflected in the same pull requests. (","lastModifiedDate":"2024-04-16"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"    [#55](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/55){:target\u003d\"_blank\"},","lastModifiedDate":"2024-04-16"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"    [#70](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/70){:target\u003d\"_blank\"},","lastModifiedDate":"2024-04-16"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"    [#74](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/74){:target\u003d\"_blank\"},","lastModifiedDate":"2024-04-16"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"    [#90](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/90){:target\u003d\"_blank\"},","lastModifiedDate":"2024-04-16"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"    [#102](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/102){:target\u003d\"_blank\"},","lastModifiedDate":"2024-04-16"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"    [#131](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/131){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"### Team-based tasks","lastModifiedDate":"2024-04-16"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"* Update application title to \"NUSContacts\". ","lastModifiedDate":"2024-04-16"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"[#27](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/27){:target\u003d\"_blank\"}","lastModifiedDate":"2024-04-16"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"* Update jar and log file names to \"NUSContacts\".","lastModifiedDate":"2024-04-16"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"[#29](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/29){:target\u003d\"_blank\"}","lastModifiedDate":"2024-04-16"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"### Documentation","lastModifiedDate":"2024-04-16"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"* User Guide","lastModifiedDate":"2024-04-16"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"  * Added documentation for multiple indices deletion and undo command.","lastModifiedDate":"2024-04-16"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"  * Added new FAQ for checking and installation of Java 11.","lastModifiedDate":"2024-04-16"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"  ([#211](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/211){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"  * Update existing description about extraneous parameters.","lastModifiedDate":"2024-04-16"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"* Developer Guide","lastModifiedDate":"2024-04-16"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"  * Added Non-functional Requirements (NFR).","lastModifiedDate":"2024-04-16"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"  ([#14](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/14){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"  * Added manual testing instructions for multiple indices deletions.","lastModifiedDate":"2024-04-16"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"  ([#213](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/213){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"  * Added manual testing instructions for adding contacts.","lastModifiedDate":"2024-04-16"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"  ([#216](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/216){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"### Community","lastModifiedDate":"2024-04-16"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"* PRs reviewed (with non-trivial comments): (","lastModifiedDate":"2024-04-16"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"    [#119](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/119){:target\u003d\"_blank\"},","lastModifiedDate":"2024-04-16"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"    [#136](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/136){:target\u003d\"_blank\"},","lastModifiedDate":"2024-04-16"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"    [#138](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/138){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"* Reported bugs and suggestions to other team in PE dry run. (full list ","lastModifiedDate":"2024-04-16"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"[here](https://github.com/ChillinRage/ped/issues){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"### Tools","lastModifiedDate":"2024-04-16"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"* Integrate TestFX to the project for JavaFX testing.","lastModifiedDate":"2024-04-16"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"([#90](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/90){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"}],"authorContributionMap":{"ChillinRage":92}},{"path":"docs/team/e0735389.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"---","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"layout: page","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"title: Bui Hong Duc\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"---","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"### Project: NUSContacts","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"NUSContacts is a desktop app designed for NUS Students, offering a streamlined way to manage their academic contacts with ease.","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"* **New Feature**: Added the ability to escape `/` characters. (Pull request","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"  [#152](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/152))","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"  * What it does: Previously, strings like `` n/`` or `` a/`` are not allowed to be part of a name. After this feature is","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    implemented, these can be included by escaping the `/` with a ``\\ ``, the user should type `` n\\/`` now.","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"  * Justification: This feature allows including `/` in names, because it may appear in unconventional names and it","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    would inconvenience the user if the program does not allow it.","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"* **New Feature**: Highlight erroneous part of a command that causes an error.","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"  * What it does: When the user types a command that causes an error, the program will try to detect which part causes","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"  the error and highlight it in the command box to inform the user. (Pull request","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"  [#91](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/91))","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"  * Justification: This feature allows the user to navigate to the erroneous part quickly to fix it, which saves time.","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003de0735389\u0026breakdown\u003dtrue)","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"* **Project management**:","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"  * Managed releases `v1.2` and `v1.3`","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"  * Correct the display of `Tags: [tag1]` in success messages, now if there\u0027s only one tag it will show singular `Tag: [tag1]`, if there\u0027s no tag that part will be omitted entirely (Pull request [#111](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/111))","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"  * Update the log messages printed on the console at program start/end to reflect the correct product name NUSContacts","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"    instead of AddressBook (Pull request [#98](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/98))","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"  * Warn the user when commands taking no argument like `list` get unexpected arguments (Pull request","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    [#82](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/82))","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"  * Enable text wrapping in the result display text area (Pull request","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    [#75](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/75))","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"  * Allow arbitrary characters to be entered in name (Pull request [#112](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/112))","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"* **Documentation**:","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"  * User Guide:","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"    * Added documentation for the escape character feature.","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"    * Fixed several incorrect links.","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    * Edited section headers to be consistent.","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"  * Developer Guide:","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    * Added implementation details of the highlight erroneous part feature:","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"      [#106](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/106)","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"* **Community**:","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"  * PRs reviewed (with non-trivial review comments): I basically review almost every PRs. e.g.","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"    [#74](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/74),","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"    [#115](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/115),","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"    [#70](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/70), etc.","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"  * Contributed to forum discussions e.g.","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    [#649](https://github.com/nus-cs2103-AY2324S2/forum/issues/649),","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"    [#702](https://github.com/nus-cs2103-AY2324S2/forum/issues/702),","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"    [#650](https://github.com/nus-cs2103-AY2324S2/forum/issues/650),","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"    [#89](https://github.com/nus-cs2103-AY2324S2/forum/issues/89).","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"* **Tools**:","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"  * Integrate JavaDoc error check into `./gradlew check`","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"E0735389":63}},{"path":"docs/team/reetmitra.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"reetmitra"},"content":"---","lastModifiedDate":"2024-04-16"},{"lineNumber":2,"author":{"gitId":"reetmitra"},"content":"layout: page","lastModifiedDate":"2024-04-16"},{"lineNumber":3,"author":{"gitId":"reetmitra"},"content":"title: Mitra Reet\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-16"},{"lineNumber":4,"author":{"gitId":"reetmitra"},"content":"---","lastModifiedDate":"2024-04-16"},{"lineNumber":5,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":6,"author":{"gitId":"reetmitra"},"content":"## Project: NUSContacts","lastModifiedDate":"2024-04-16"},{"lineNumber":7,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":8,"author":{"gitId":"reetmitra"},"content":"NUSContacts is a desktop app designed for NUS Students, offering a streamlined way to manage their academic contacts with ease.","lastModifiedDate":"2024-04-16"},{"lineNumber":9,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":10,"author":{"gitId":"reetmitra"},"content":"Given below are my contributions to the project: ","lastModifiedDate":"2024-04-16"},{"lineNumber":11,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":12,"author":{"gitId":"reetmitra"},"content":"### Code contributed","lastModifiedDate":"2024-04-16"},{"lineNumber":13,"author":{"gitId":"reetmitra"},"content":"You can find the overall code using this [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003dreetmitra\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2024-04-16"},{"lineNumber":14,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":15,"author":{"gitId":"reetmitra"},"content":"### New features","lastModifiedDate":"2024-04-16"},{"lineNumber":16,"author":{"gitId":"reetmitra"},"content":"* Added new `copy` command.","lastModifiedDate":"2024-04-16"},{"lineNumber":17,"author":{"gitId":"reetmitra"},"content":"  ([#136](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/136){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":18,"author":{"gitId":"reetmitra"},"content":"    * **What it does**: The `copy` command allows users to copy the email ID of a contact at a certain index to their clipboard. The command format is `copy INDEX`, where `INDEX` is the position of the contact in the list.","lastModifiedDate":"2024-04-16"},{"lineNumber":19,"author":{"gitId":"reetmitra"},"content":"    * **Impact**: This feature enhances the user experience by providing a quick and easy way to copy a contact\u0027s email ID, which can be particularly useful when the user needs to send an email to a contact.","lastModifiedDate":"2024-04-16"},{"lineNumber":20,"author":{"gitId":"reetmitra"},"content":"    * **Possible improvements**: In the future, this feature could be extended to allow copying other contact details such as phone numbers or addresses.","lastModifiedDate":"2024-04-16"},{"lineNumber":21,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":22,"author":{"gitId":"reetmitra"},"content":"### Team-based tasks","lastModifiedDate":"2024-04-16"},{"lineNumber":23,"author":{"gitId":"reetmitra"},"content":"* Helped update the AboutUs.md file.","lastModifiedDate":"2024-04-16"},{"lineNumber":24,"author":{"gitId":"reetmitra"},"content":"  ([#26](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/26){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":25,"author":{"gitId":"reetmitra"},"content":"* Helped update the `.puml` file.","lastModifiedDate":"2024-04-16"},{"lineNumber":26,"author":{"gitId":"reetmitra"},"content":"  ([#72](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/72){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":27,"author":{"gitId":"reetmitra"},"content":"* Helped fix skipped tests to ensure they are passing.","lastModifiedDate":"2024-04-16"},{"lineNumber":28,"author":{"gitId":"reetmitra"},"content":"  ([#120](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/120){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":29,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-16"},{"lineNumber":30,"author":{"gitId":"reetmitra"},"content":"### Documentation","lastModifiedDate":"2024-04-16"},{"lineNumber":31,"author":{"gitId":"reetmitra"},"content":"* User Guide:","lastModifiedDate":"2024-04-16"},{"lineNumber":32,"author":{"gitId":"reetmitra"},"content":"  * Updated the `copy` command documentation.","lastModifiedDate":"2024-04-16"},{"lineNumber":33,"author":{"gitId":"reetmitra"},"content":"    ([#136](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/136){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"},{"lineNumber":34,"author":{"gitId":"reetmitra"},"content":"  * Updated the UG after PE-D issues were assigned to me.","lastModifiedDate":"2024-04-16"},{"lineNumber":35,"author":{"gitId":"reetmitra"},"content":"    ([#198](https://github.com/AY2324S2-CS2103T-T11-2/tp/pull/198){:target\u003d\"_blank\"})","lastModifiedDate":"2024-04-16"}],"authorContributionMap":{"reetmitra":35}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"    public static final String APP_NAME \u003d \"NUSContacts\";","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing \" + APP_NAME + \" ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"        ReadOnlyAddressBook initialData \u003d new AddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"            if (addressBookOptional.isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"                initialData \u003d addressBookOptional.get();","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"            } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"                initialData \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"                storage.saveAddressBook(initialData);","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"ChillinRage"},"content":"            logger.warning(\"Failed to save sample data file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"E0735389"},"content":"        logger.info(\"Starting \" + APP_NAME + \" \" + VERSION);","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"E0735389"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping \" + APP_NAME + \" ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"E0735389":6,"-":178,"ChillinRage":10}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"    private static final String LOG_FILE \u003d \"NUSContacts.log\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":105,"ChillinRage":1}},{"path":"src/main/java/seedu/address/commons/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":" * Represents an error during command parse or execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":" * @see seedu.address.logic.parser.exceptions.ParseException","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":" * @see seedu.address.logic.commands.exceptions.CommandExecutionException","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"public interface CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"     * Gets the part of the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"     * @return The part of the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    public Optional\u003cCommandPart\u003e getErroneousPart();","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"E0735389":18}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"E0735389":1,"-":82}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"     * Unescapes the given {@code String} by replacing all occurrences of {@code \\\\} by {@code \\},","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"     * and all occurrences of {@code \\/} by {@code /}.","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"    public static String unescapeString(String str) {","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"        return str.replaceAll(\"\\\\\\\\([\\\\\\\\/])\", \"$1\");","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"E0735389":8,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"     * @throws CommandExecutionException If an error occurs during command execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    CommandResult execute(CommandString commandText) throws CommandExecutionException, ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"E0735389":4,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    public CommandResult execute(CommandString commandText) throws CommandExecutionException, ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"            throw new CommandExecutionException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"            throw new CommandExecutionException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"E0735389":5,"-":84}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_UNCLEAR_COMMAND \u003d \"Unclear command.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_FORCE_TAG_MUST_BE_EMPTY \u003d \"There must be no value following \" + PREFIX_FORCE;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_UNEXPECTED_ARGUMENT \u003d \"Invalid command format!\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        + \"Command \u0027%1$s\u0027 should not take any arguments.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX_WITH_USAGE \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        \"The contact index provided is invalid.\\n%1$s\";","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"        String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX_WITH_USAGE, \"\").trim();","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d contact(s) listed!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_FIX_OR_ADD_FORCE_FLAG \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        \"The following is one of the invalid fields(s). \"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        + \"Fix the issue, or append \" + PREFIX_FORCE + \" to ignore the warning.\\n%1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"        builder.append(person.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"        person.getPhone().ifPresent(phone -\u003e builder.append(\"; Phone: \").append(phone));","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"        builder.append(\"; Email: \").append(person.getEmail());","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        builder.append(\"; Role: \").append(person.getRole());","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"        person.getAddress().ifPresent(address -\u003e builder.append(\"; Address: \").append(address));","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        builder.append(\"; Course: \").append(person.getCourse());","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"            if (tags.size() \u003d\u003d 1) {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"                builder.append(\"; Tag: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"                builder.append(\"; Tags: \");","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hibeom0929":1,"E0735389":30,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \": Adds a contact to the address book.\\n\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"            + PREFIX_COURSE + \"COURSE \"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"LargeCrowd"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"            + \"[\" + PREFIX_FORCE + \"]\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"            + PREFIX_ROLE + \"STUDENT \"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"            + PREFIX_COURSE + \"CS2103T \"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the address book\";","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"    public CommandResult execute(Model model) throws CommandExecutionException {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"            throw new CommandExecutionException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"        model.saveAddressBook(); // Save previous copy of address book if command execution successful.","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LargeCrowd":1,"Hibeom0929":8,"E0735389":7,"-":75,"ChillinRage":4}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \": Clears all entries from the address book.\\n\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"        model.saveAddressBook(); // Save previous copy of address book if command execution successful.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hibeom0929":1,"-":23,"ChillinRage":1}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"     * @throws CommandExecutionException If an error occurs during command execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    public abstract CommandResult execute(Model model) throws CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"E0735389":3,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/CopyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"reetmitra"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"reetmitra"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"reetmitra"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"reetmitra"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"reetmitra"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"reetmitra"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"reetmitra"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"reetmitra"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"reetmitra"},"content":" * Copies the email of the person identified by the index number used in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"reetmitra"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"reetmitra"},"content":"public class CopyCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"reetmitra"},"content":"    public static final String COMMAND_WORD \u003d \"copy\";","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"reetmitra"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"        + \": Copies the email of the contact identified by the index number used in the displayed address book.\\n\";","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"reetmitra"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_DESCRIPTION","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"reetmitra"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"reetmitra"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"reetmitra"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"reetmitra"},"content":"    public CopyCommand(Index targetIndex) {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"reetmitra"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"reetmitra"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"reetmitra"},"content":"    public CommandResult execute(Model model) throws CommandExecutionException {","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"reetmitra"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"reetmitra"},"content":"            // Get the person from the model","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"reetmitra"},"content":"            Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"reetmitra"},"content":"            // Get the email of the person","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"reetmitra"},"content":"            String email \u003d person.getEmail().value;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"reetmitra"},"content":"            // Copy to clipboard","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"reetmitra"},"content":"            copyEmail(email);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"reetmitra"},"content":"            return new CommandResult(\"Email copied to clipboard.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"reetmitra"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"            throw new CommandExecutionException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"reetmitra"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"reetmitra"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"reetmitra"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"reetmitra"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"reetmitra"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"reetmitra"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"reetmitra"},"content":"        if (!(other instanceof CopyCommand)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"reetmitra"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"reetmitra"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"reetmitra"},"content":"        CopyCommand otherCopyCommand \u003d (CopyCommand) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"reetmitra"},"content":"        return targetIndex.equals(otherCopyCommand.targetIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"reetmitra"},"content":"    private void copyEmail(String email) {","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"reetmitra"},"content":"        StringSelection stringSelection \u003d new StringSelection(email);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"reetmitra"},"content":"        Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"reetmitra"},"content":"        clipboard.setContents(stringSelection, null);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"reetmitra"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"reetmitra"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"reetmitra"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"reetmitra"},"content":"            .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"reetmitra"},"content":"            .toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"reetmitra"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Hibeom0929":1,"E0735389":2,"reetmitra":72}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":" * Deletes 1 or more people identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":" * If more than 1 person are to be deleted, the index of each person should be separated by a comma.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Hibeom0929"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"            + \": Deletes the contact(s) identified by the index number(s) used in the displayed address book.\\n\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"            + \"Parameters (for one contact): INDEX\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"            + \"Parameters (for multiple contacts): INDEX1, INDEX2, ...\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1, 2, 3\";","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted contact(s): \\n%1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"    private final List\u003cIndex\u003e targetIndexList;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"     * Creates a DeleteCommand to delete a person at the specified {@code Index}.","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"        this.targetIndexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        this.targetIndexList.add(targetIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"     * Creates a DeleteCommand to delete people from multiple specified {@code IndexList}.","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexList) {","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    public CommandResult execute(Model model) throws CommandExecutionException {","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"        Person[] peopleToDelete \u003d new Person[targetIndexList.size()];","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"        // Get a list of people to be deleted.","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        for (int i \u003d 0; i \u003c targetIndexList.size(); i++) {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"            Index index \u003d targetIndexList.get(i);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"                throw new CommandExecutionException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"            Person personToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"            peopleToDelete[i] \u003d personToDelete;","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"        model.saveAddressBook(); // Save previous copy of address book if command execution successful.","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"        String resultMessage \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        // Delete the people from model.","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"        for (Person personToDelete: peopleToDelete) {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"            resultMessage +\u003d Messages.format(personToDelete) + \"\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, resultMessage.trim()));","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"        return targetIndexList.equals(otherDeleteCommand.targetIndexList);","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"                .add(\"targetIndex\", targetIndexList)","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hibeom0929":6,"E0735389":3,"-":57,"ChillinRage":34}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"LargeCrowd"},"content":"import seedu.address.model.person.exceptions.InvalidAddressException;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"Hibeom0929"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \": Edits the details of the contact identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Hibeom0929"},"content":"            + \"by the index number used in the displayed address book. \"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Hibeom0929"},"content":"            + \"Existing values will be overwritten by the input values.\\n\";","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"Hibeom0929"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"            + \"[\" + PREFIX_COURSE + \"COURSE] \"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"            + \"[\" + PREFIX_FORCE + \"]\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Contact: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the address book.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"    public CommandResult execute(Model model) throws CommandExecutionException {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"            throw new CommandExecutionException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"            throw new CommandExecutionException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"        model.saveAddressBook(); // Save previous copy of address book if command execution successful.","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"LargeCrowd"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"LargeCrowd"},"content":"            throws CommandExecutionException {","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"        Optional\u003cPhone\u003e updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"Hibeom0929"},"content":"        Role updatedRole \u003d editPersonDescriptor.getRole().orElse(personToEdit.getRole());","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"LargeCrowd"},"content":"        Optional\u003cAddress\u003e updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"ChillinRage"},"content":"        Course updatedCourse \u003d editPersonDescriptor.getCourse().orElse(personToEdit.getCourse());","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"LargeCrowd"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"LargeCrowd"},"content":"            return Person.createPerson(","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"ChillinRage"},"content":"                    updatedName, updatedPhone, updatedEmail, updatedRole,","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"ChillinRage"},"content":"                    updatedAddress, updatedCourse, updatedTags);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"LargeCrowd"},"content":"        } catch (InvalidAddressException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"LargeCrowd"},"content":"            throw new CommandExecutionException(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"LargeCrowd"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"E0735389"},"content":"        private Optional\u003cPhone\u003e phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"Hibeom0929"},"content":"        private Role role;","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"LargeCrowd"},"content":"        private Optional\u003cAddress\u003e address;","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"ChillinRage"},"content":"        private Course course;","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"Hibeom0929"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"ChillinRage"},"content":"            setCourse(toCopy.course);","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"ChillinRage"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, role, address, course, tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"E0735389"},"content":"        public void setPhone(Optional\u003cPhone\u003e phone) {","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"E0735389"},"content":"        /**","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"E0735389"},"content":"         * Gets the phone number information of this optional.","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"E0735389"},"content":"         * \u003cp\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"E0735389"},"content":"         * The result is {@code Optional.empty()} if {@code p/} field is not specified,","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"E0735389"},"content":"         * {@code Optional.of(Optional.empty())} if {@code p/} field is specified but left empty","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"E0735389"},"content":"         * (which means the user wants to delete the phone number),","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"E0735389"},"content":"         * and an actual value if the user wants to update the phone number.","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"E0735389"},"content":"         */","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"E0735389"},"content":"        public Optional\u003cOptional\u003cPhone\u003e\u003e getPhone() {","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"Hibeom0929"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"Hibeom0929"},"content":"            this.role \u003d role;","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"Hibeom0929"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"Hibeom0929"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"LargeCrowd"},"content":"        public void setAddress(Optional\u003cAddress\u003e address) {","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"LargeCrowd"},"content":"        /**","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"LargeCrowd"},"content":"         * Gets the address information of this optional.","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"LargeCrowd"},"content":"         * \u003cp\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"LargeCrowd"},"content":"         * The result is {@code Optional.empty()} if {@code a/} field is not specified,","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"LargeCrowd"},"content":"         * {@code Optional.of(Optional.empty())} if {@code a/} field is specified but left empty","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"LargeCrowd"},"content":"         * (which means the user wants to delete the address),","lastModifiedDate":"2024-03-19"},{"lineNumber":237,"author":{"gitId":"LargeCrowd"},"content":"         * and an actual value if the user wants to update the address.","lastModifiedDate":"2024-03-19"},{"lineNumber":238,"author":{"gitId":"LargeCrowd"},"content":"         */","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"LargeCrowd"},"content":"        public Optional\u003cOptional\u003cAddress\u003e\u003e getAddress() {","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"ChillinRage"},"content":"        public void setCourse(Course course) {","lastModifiedDate":"2024-03-16"},{"lineNumber":244,"author":{"gitId":"ChillinRage"},"content":"            this.course \u003d course;","lastModifiedDate":"2024-03-16"},{"lineNumber":245,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":246,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"ChillinRage"},"content":"        public Optional\u003cCourse\u003e getCourse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"ChillinRage"},"content":"            return Optional.ofNullable(course);","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":283,"author":{"gitId":"Hibeom0929"},"content":"                    \u0026\u0026 Objects.equals(role, otherEditPersonDescriptor.role)","lastModifiedDate":"2024-03-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":285,"author":{"gitId":"ChillinRage"},"content":"                    \u0026\u0026 Objects.equals(course, otherEditPersonDescriptor.course)","lastModifiedDate":"2024-03-16"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"Hibeom0929"},"content":"                    .add(\"role\", role)","lastModifiedDate":"2024-03-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"ChillinRage"},"content":"                    .add(\"course\", course)","lastModifiedDate":"2024-03-16"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"LargeCrowd":20,"Hibeom0929":23,"E0735389":19,"-":220,"ChillinRage":20}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \": Exits the program.\\n\";","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Hibeom0929":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.CourseContainsKeywordsPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":" * Finds and lists all people in address book whose name, course, or role contains any of the argument keywords.","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Hibeom0929"},"content":"            + \": Finds all contacts whose name, course, or role contains any of \"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\";","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob cs2103t STUDENT\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"    private final CourseContainsKeywordsPredicate coursePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"    private final RoleContainsKeywordsPredicate rolePredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"     * Constructs a FindCommand with the specified predicates.","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"     * @param namePredicate Predicate for filtering people based on keywords contained in their name.","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"     * @param coursePredicate Predicate for filtering people based on keywords contained in their course.","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Hibeom0929"},"content":"     * @param rolePredicate Predicate for filtering people based on keywords contained in their role.","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Hibeom0929"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate, CourseContainsKeywordsPredicate coursePredicate,","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Hibeom0929"},"content":"                       RoleContainsKeywordsPredicate rolePredicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Hibeom0929"},"content":"        this.coursePredicate \u003d coursePredicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"        this.rolePredicate \u003d rolePredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"Hibeom0929"},"content":"        model.updateFilteredPersonList(namePredicate.or(coursePredicate).or(rolePredicate));","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"Hibeom0929"},"content":"        return namePredicate.equals(otherFindCommand.namePredicate)","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Hibeom0929"},"content":"                \u0026\u0026 coursePredicate.equals(otherFindCommand.coursePredicate)","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"Hibeom0929"},"content":"                \u0026\u0026 rolePredicate.equals(otherFindCommand.rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"Hibeom0929"},"content":"                .add(\"namePredicate\", namePredicate)","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Hibeom0929"},"content":"                .add(\"coursePredicate\", coursePredicate)","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Hibeom0929"},"content":"                .add(\"rolePredicate\", rolePredicate)","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Hibeom0929":30,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Here are the available commands and their usage:\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"            + \"1. \" + AddCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"            + \"2. \" + EditCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Hibeom0929"},"content":"            + \"3. \" + FindCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"            + \"4. \" + ListCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Hibeom0929"},"content":"            + \"5. \" + DeleteCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"            + \"6. \" + ClearCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"            + \"7. \" + ExitCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"            + \"8. \" + UndoCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"reetmitra"},"content":"            + \"9. \" + CopyCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"            + \"For more detailed information on each command, please press F1 to refer to the project website.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, false, false);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hibeom0929":12,"reetmitra":1,"-":19,"ChillinRage":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Hibeom0929"},"content":"            + \": Shows a list of all contacts in the address book.\\n\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hibeom0929":3,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":" * Undo the state of the address book if there was any new changes to it.","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"            + \": Undoes the changes (if any) made by the previous command execution.\\n\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully revert the changes.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"    public static final String MESSAGE_NO_PREVIOUS_STATE \u003d \"No new changes have been made to the data.\";","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"    public CommandResult execute(Model model) throws CommandExecutionException {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"            model.undoAddressBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"            throw new CommandExecutionException(MESSAGE_NO_PREVIOUS_STATE);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"Hibeom0929":1,"ChillinRage":32}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandExecutionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import seedu.address.commons.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":" * Represents an error which occurs during execution of a {@link seedu.address.logic.commands.Command}.","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"public class CommandExecutionException extends Exception implements CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"     * The part of the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    private final Optional\u003cCommandPart\u003e erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code CommandExecutionException} with the specified detail message and command part.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error, if any.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message, Optional\u003cCommandPart\u003e erroneousPart) {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        super(message);","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"        assert erroneousPart !\u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        this.erroneousPart \u003d erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code CommandExecutionException} with the specified detail message, command part, and cause.","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"     * @param cause The cause of the error.","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error, if any.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message, Throwable cause, Optional\u003cCommandPart\u003e erroneousPart) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        super(message, cause);","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        assert erroneousPart !\u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        this.erroneousPart \u003d erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code CommandExecutionException} with the specified detail message and command part.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message, CommandPart erroneousPart) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        this(message, Optional.of(erroneousPart));","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code CommandExecutionException} with the specified detail message, command part, and cause.","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"     * @param cause The cause of the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message, Throwable cause, CommandPart erroneousPart) {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"        this(message, cause, Optional.of(erroneousPart));","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@link CommandExecutionException} with the given message, without specifying the part of the command","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"     * that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        this(message, Optional.empty());","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@link CommandExecutionException} with the given message and cause, without specifying the part of","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"     * the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message, Throwable cause) {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"        this(message, cause, Optional.empty());","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"    public Optional\u003cCommandPart\u003e getErroneousPart() {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"        return erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"E0735389":79}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.Messages.MESSAGE_FIX_OR_ADD_FORCE_FLAG;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"    public AddCommand parse(CommandPart args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cCommandPart\u003e argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"                    args,","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"                    PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE,","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"                    PREFIX_ADDRESS, PREFIX_COURSE, PREFIX_TAG, PREFIX_FORCE);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_ROLE, PREFIX_COURSE)","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2024-04-09"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"            PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"            PREFIX_ROLE, PREFIX_ADDRESS, PREFIX_COURSE, PREFIX_FORCE);","lastModifiedDate":"2024-04-09"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        boolean shouldCheck \u003d ParserUtil.parseShouldCheckFlag(argMultimap);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        Optional\u003cCommandPart\u003e phoneString \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        Optional\u003cPhone\u003e phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"        Email email;","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"        Course course;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"            if (phoneString.isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"                phone \u003d Optional.of(ParserUtil.parsePhone(phoneString.get(), shouldCheck));","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"            } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"                phone \u003d Optional.empty();","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get(), shouldCheck);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"            course \u003d ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get(), shouldCheck);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(String.format(MESSAGE_FIX_OR_ADD_FORCE_FLAG, pe.getMessage()),","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"                    pe.getErroneousPart());","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"Hibeom0929"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"        Optional\u003cCommandPart\u003e addressString \u003d argMultimap.getValue(PREFIX_ADDRESS);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"LargeCrowd"},"content":"        Optional\u003cAddress\u003e address;","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"LargeCrowd"},"content":"        if (role.equals(Role.PROFESSOR)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"LargeCrowd"},"content":"            if (addressString.isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"LargeCrowd"},"content":"                address \u003d Optional.of(ParserUtil.parseAddress(addressString.get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"LargeCrowd"},"content":"            } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"LargeCrowd"},"content":"                throw new ParseException(Address.MESSAGE_CONSTRAINTS_PROFESSOR);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"LargeCrowd"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"LargeCrowd"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"LargeCrowd"},"content":"            // address is optional for other RoleTypes","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"LargeCrowd"},"content":"            if (addressString.isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"LargeCrowd"},"content":"                address \u003d Optional.of(ParserUtil.parseAddress(addressString.get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"LargeCrowd"},"content":"            } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"LargeCrowd"},"content":"                address \u003d Optional.empty();","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"LargeCrowd"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"LargeCrowd"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"ChillinRage"},"content":"        Person person \u003d new Person(name, phone, email, role, address, course, tagList);","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LargeCrowd":17,"Hibeom0929":3,"E0735389":28,"-":52,"ChillinRage":9}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNCLEAR_COMMAND;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNEXPECTED_ARGUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"reetmitra"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        Pattern.compile(\"\\\\s*(?\u003ccommandWord\u003e\\\\w+)(?\u003carguments\u003e.*?)\\\\s*\");","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"     * Used to match incomplete commands with full commands.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"    private static final String[] COMMANDS \u003d {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"        AddCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        EditCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        DeleteCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        ClearCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        FindCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        ListCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"        ExitCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        HelpCommand.COMMAND_WORD,","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"reetmitra"},"content":"        CopyCommand.COMMAND_WORD,","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"        UndoCommand.COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"    };","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"     * @param userInput Full user input string.","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"    public Command parseCommand(CommandString userInput) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"        final CommandPart commandWord \u003d new CommandPart(userInput).getSubstring(","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"                matcher.start(\"commandWord\"), matcher.end(\"commandWord\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"        final CommandPart arguments \u003d new CommandPart(userInput).getSubstring(","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"                matcher.start(\"arguments\"), matcher.end(\"arguments\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"        // Get a list of commands that matches the input command.","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"        List\u003cString\u003e matchedCommands \u003d ParserUtil.filterByPrefix(commandWord.toString(), COMMANDS);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"        String command \u003d commandWord.toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"        if (matchedCommands.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"            command \u003d matchedCommands.get(0);","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"        } else if (matchedCommands.size() \u003e 1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"            // Input matches multiple commands.","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"            throw new ParseException(MESSAGE_UNCLEAR_COMMAND);","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"        switch (command) {","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"            ensureNoArgument(command, arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"E0735389"},"content":"            ensureNoArgument(command, arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"            ensureNoArgument(command, arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"            ensureNoArgument(command, arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":119,"author":{"gitId":"reetmitra"},"content":"        case CopyCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"reetmitra"},"content":"            return new CopyCommandParser().parse(arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"ChillinRage"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"ChillinRage"},"content":"            ensureNoArgument(command, arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"ChillinRage"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"E0735389"},"content":"     * Ensures that no arguments are provided for the command.","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"E0735389"},"content":"     * @param command The command word.","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"E0735389"},"content":"     * @param arguments The arguments provided.","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"E0735389"},"content":"     * @throws ParseException If arguments are provided.","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"E0735389"},"content":"    private void ensureNoArgument(String command, CommandPart arguments) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"E0735389"},"content":"        if (!arguments.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(String.format(MESSAGE_UNEXPECTED_ARGUMENT, command));","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"E0735389":29,"reetmitra":5,"-":77,"ChillinRage":32}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"public class ArgumentMultimap\u003cT\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    private final Map\u003cPrefix, List\u003cT\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"    public void put(Prefix prefix, T argValue) {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        List\u003cT\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"    public Optional\u003cT\u003e getValue(Prefix prefix) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        List\u003cT\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"    public List\u003cT\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"    public T getPreamble() {","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        return getValue(new Prefix(\"\")).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"     * Applies the given function to all values.","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"     * @param function The function to apply to all values.","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"     * @return The new resulting {@code ArgumentMultimap} with the function applied to all values.re","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"    public \u003cR\u003e ArgumentMultimap\u003cR\u003e transformValues(Function\u003cT, R\u003e function) {","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cR\u003e newMap \u003d new ArgumentMultimap\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"E0735389"},"content":"        argMultimap.forEach((prefix, values) -\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"            newMap.argMultimap.put(prefix, values.stream().map(function).collect(Collectors.toList()));","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"        });","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"        return newMap;","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"E0735389":24,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"     * Tokenizes a command part and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    public static ArgumentMultimap\u003cCommandPart\u003e tokenize(CommandPart argsString, Prefix... prefixes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"     * respective argument values.","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"     * @see ArgumentTokenizer#tokenize(CommandPart, Prefix...)","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    public static ArgumentMultimap\u003cString\u003e tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cCommandPart\u003e arguments \u003d tokenize(new CommandPart(new CommandString(argsString)), prefixes);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        return arguments.transformValues((commandPart) -\u003e commandPart.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(CommandPart argsString, Prefix... prefixes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(CommandPart argsString, Prefix prefix) {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"    private static int findPrefixPosition(CommandPart argsString, String prefix, int fromIndex) {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"    private static ArgumentMultimap\u003cCommandPart\u003e extractArguments(CommandPart argsString,","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"            List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"E0735389"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.getLength());","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cCommandPart\u003e argMultimap \u003d new ArgumentMultimap\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"            CommandPart argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"E0735389"},"content":"    private static CommandPart extractArgumentValue(CommandPart argsString,","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"E0735389"},"content":"        CommandPart value \u003d argsString.getSubstring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"E0735389":22,"-":137}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    public static final Prefix PREFIX_COURSE \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    public static final Prefix PREFIX_FORCE \u003d new Prefix(\"f/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Hibeom0929":1,"E0735389":1,"-":15,"ChillinRage":1}},{"path":"src/main/java/seedu/address/logic/parser/CommandPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":" * Represents a part of the user\u0027s full input command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":" * This class maintains a reference to the full command string and the start/end position of the part in the full","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":" * command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":" * This is useful for error reporting, so that the caller can know which part of the command string caused the error.","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"public class CommandPart {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    private final CommandString commandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    private final int startIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    private final int endIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code CommandPart} object that contains the whole command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    public CommandPart(CommandString commandString) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"        assert commandString !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"        this.startIndex \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        this.endIndex \u003d commandString.getLength();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    private CommandPart(CommandString commandString, int startIndex, int endIndex) {","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        assert commandString !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        this.startIndex \u003d startIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        this.endIndex \u003d endIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        assert startIndex \u003e\u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"        assert startIndex \u003c\u003d endIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        assert endIndex \u003c\u003d commandString.getLength();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"     * Returns the full command string object.","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"    public CommandString getCommandString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        return commandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"     * Returns the start position of the part in the full command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    public int getStartIndex() {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"        return startIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"     * Returns the end position of the part in the full command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"    public int getEndIndex() {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"        return endIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"     * Returns this part of the command string, as a {@code String}.","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        return commandString.toString().substring(startIndex, endIndex);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"     * Returns the length of this part of the command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"    public int getLength() {","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"        return endIndex - startIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"     * Checks if the part of the command string is empty.","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"        return getLength() \u003d\u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"     * Returns a substring of this {@link CommandPart}.","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"     * @param start The start index of the substring (inclusive).","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"     * @param end The end index of the substring (exclusive).","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"     * @return The substring of this {@link CommandPart}.","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"    public CommandPart getSubstring(int start, int end) {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"E0735389"},"content":"        assert start \u003e\u003d 0 \u0026\u0026 end \u003c\u003d getLength() \u0026\u0026 start \u003c\u003d end;","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"        return new CommandPart(commandString, startIndex + start, startIndex + end);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"E0735389"},"content":"     * Returns a substring of this {@link CommandPart}.","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"     * @param start The start index of the substring (inclusive).","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"     * @return The substring of this {@link CommandPart}, starting at the given index and ending at the end of the part.","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"    public CommandPart getSubstring(int start) {","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"        return getSubstring(start, getLength());","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"E0735389"},"content":"        return toString().hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"E0735389"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"E0735389"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"E0735389"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"        if (!(other instanceof CommandPart)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"        CommandPart otherCommandPart \u003d (CommandPart) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"E0735389"},"content":"        return toString().equals(otherCommandPart.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"     * Finds the index of the first occurrence of the given substring in this {@link CommandPart}.","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"E0735389"},"content":"     * @param substring The substring to search for.","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"E0735389"},"content":"     * @param fromIndex The index to start the search from.","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"E0735389"},"content":"     * @return The index of the first occurrence of the given substring in this {@link CommandPart}, or -1 if not found.","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"E0735389"},"content":"    public int indexOf(String substring, int fromIndex) {","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"E0735389"},"content":"        return toString().indexOf(substring, fromIndex);","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"E0735389"},"content":"     * Trims the whitespace from the start and end of this {@link CommandPart}.","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"E0735389"},"content":"     * If the {@link CommandPart} is empty after trimming, the returned part will be at the start of the original part.","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"E0735389"},"content":"     * @return The trimmed {@link CommandPart}.","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"E0735389"},"content":"    public CommandPart trim() {","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"E0735389"},"content":"        int start \u003d startIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"E0735389"},"content":"        int end \u003d endIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"E0735389"},"content":"        while (end \u003e start \u0026\u0026 Character.isWhitespace(commandString.charAt(end - 1))) {","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"E0735389"},"content":"            end--;","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"E0735389"},"content":"        while (start \u003c end \u0026\u0026 Character.isWhitespace(commandString.charAt(start))) {","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"E0735389"},"content":"            start++;","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"E0735389"},"content":"        return new CommandPart(commandString, start, end);","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"E0735389"},"content":"     * Splits this {@link CommandPart} around matches of the given regular expression.","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"E0735389"},"content":"     * @param regex The regular expression to split around.","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"E0735389"},"content":"     * @return An array of {@link CommandPart}s computed by splitting this {@link CommandPart} around matches of the","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"E0735389"},"content":"     *         given regular expression.","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"E0735389"},"content":"     * @see String#split(String)","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"E0735389"},"content":"    public CommandPart[] split(Pattern regex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"E0735389"},"content":"        Matcher matcher \u003d regex.matcher(toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"E0735389"},"content":"        int lastEnd \u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"E0735389"},"content":"        ArrayList\u003cCommandPart\u003e parts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"E0735389"},"content":"        while (matcher.find()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"E0735389"},"content":"            if (matcher.end() \u003e 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"E0735389"},"content":"                parts.add(getSubstring(lastEnd, matcher.start()));","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"E0735389"},"content":"            lastEnd \u003d matcher.end();","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"E0735389"},"content":"        if (lastEnd \u003c getLength() || lastEnd \u003d\u003d 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"E0735389"},"content":"            parts.add(getSubstring(lastEnd));","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"E0735389"},"content":"        return parts.toArray(new CommandPart[0]);","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"E0735389"},"content":"     * Splits this {@link CommandPart} around matches of the given regular expression.","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"E0735389"},"content":"     * @see #split(Pattern)","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"E0735389"},"content":"    public CommandPart[] split(String regex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"E0735389"},"content":"        return split(Pattern.compile(regex));","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"E0735389":181}},{"path":"src/main/java/seedu/address/logic/parser/CommandString.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents the user\u0027s full input command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" * E.g. \u0027delete 1\u0027.","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"public class CommandString {","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    private final String commandText;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code CommandString}.","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"     * @param commandText A valid command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    public CommandString(String commandText) {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        assert commandText !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"        this.commandText \u003d commandText;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        return commandText;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"     * Returns the length of the command string.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"    public int getLength() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"        return commandText.length();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        return commandText.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        if (!(other instanceof CommandString)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"        CommandString otherCommandString \u003d (CommandString) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"        return commandText.equals(otherCommandString.commandText);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"     * Returns the character at the specified index.","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"     * @param index The index of the character to return.","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     * @return The character at the specified index.","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    public char charAt(int index) {","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        return commandText.charAt(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"E0735389":59}},{"path":"src/main/java/seedu/address/logic/parser/CopyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"reetmitra"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"reetmitra"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"reetmitra"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"reetmitra"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"reetmitra"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"reetmitra"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"reetmitra"},"content":" * Parses input arguments and creates a new CopyCommand object","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"reetmitra"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"reetmitra"},"content":"public class CopyCommandParser implements Parser\u003cCopyCommand\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"reetmitra"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"reetmitra"},"content":"     * Parses the given {@code String} of arguments in the context of the CopyCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"reetmitra"},"content":"     * and returns a CopyCommand object for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"reetmitra"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"reetmitra"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"reetmitra"},"content":"    public CopyCommand parse(CommandPart args) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"reetmitra"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"reetmitra"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"reetmitra"},"content":"            return new CopyCommand(index);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"reetmitra"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"reetmitra"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"reetmitra"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"reetmitra"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"reetmitra"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"reetmitra":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    public DeleteCommand parse(CommandPart args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"            List\u003cIndex\u003e indices \u003d ParserUtil.parseIndices(args, \",\");","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"            return new DeleteCommand(indices);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(pe.getMessage(), pe);","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"E0735389":2,"-":22,"ChillinRage":3}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.Messages.MESSAGE_FIX_OR_ADD_FORCE_FLAG;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX_WITH_USAGE;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    public EditCommand parse(CommandPart args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cCommandPart\u003e argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"                    PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"                    PREFIX_ROLE, PREFIX_ADDRESS, PREFIX_COURSE, PREFIX_TAG, PREFIX_FORCE);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"        CommandPart preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"            index \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX_WITH_USAGE,","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"                        EditCommand.MESSAGE_USAGE), pe, preamble);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"            PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"            PREFIX_ROLE, PREFIX_ADDRESS, PREFIX_COURSE, PREFIX_FORCE);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        boolean shouldCheck \u003d ParserUtil.parseShouldCheckFlag(argMultimap);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"                editPersonDescriptor.setPhone(","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"                        ParserUtil.parseOptionalPhone(argMultimap.getValue(PREFIX_PHONE).get(), shouldCheck));","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get(),","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"                            shouldCheck));","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"            if (argMultimap.getValue(PREFIX_COURSE).isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"                editPersonDescriptor.setCourse(ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get(),","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"                            shouldCheck));","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(String.format(MESSAGE_FIX_OR_ADD_FORCE_FLAG, pe.getMessage()),","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"                    pe.getErroneousPart());","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"            editPersonDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"LargeCrowd"},"content":"            editPersonDescriptor.setAddress(","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"LargeCrowd"},"content":"                    ParserUtil.parseOptionalAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"     * Parses {@code Collection\u003cCommandPart\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cCommandPart\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"E0735389"},"content":"        Collection\u003cCommandPart\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.toArray(new CommandPart[0])[0].isEmpty()","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"E0735389"},"content":"            ? Collections.emptySet() : tags;","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LargeCrowd":2,"E0735389":31,"-":73,"ChillinRage":7}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.CourseContainsKeywordsPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public FindCommand parse(CommandPart args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        String trimmedArgs \u003d args.toString().trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        String[] keywords \u003d StringUtil.unescapeString(trimmedArgs).split(\"\\\\s+\");","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(keywords)),","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"                               new CourseContainsKeywordsPredicate(Arrays.asList(keywords)),","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"                               new RoleContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Hibeom0929":5,"E0735389":4,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    T parse(CommandPart userInput) throws ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"E0735389":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.Messages.MESSAGE_FORCE_TAG_MUST_BE_EMPTY;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_DUPLICATE_INDEX \u003d \"There is a duplicate index listed.\";","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_ROLE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"            \"Roles should be either \u0027STUDENT\u0027, \u0027TA\u0027, or \u0027PROFESSOR\u0027, or an unambiguous prefix of it.\";","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"    public static Index parseIndex(CommandPart oneBasedIndex) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex.toString())) {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX, trimmedIndex);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex.toString()));","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"     * Parses {@code args}, seperated by a common {@code sep}, into a list of","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"     * distinct {@code Index} and returns it.","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"     * @throws ParseException If any of the specified index is invalid, or there are duplicate input indices.","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"    public static List\u003cIndex\u003e parseIndices(CommandPart args, String sep) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        final CommandPart[] splitArgs \u003d args.split(sep);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"        final ArrayList\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"        for (int i \u003d 0; i \u003c splitArgs.length; i++) {","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"            Index index \u003d parseIndex(splitArgs[i]);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"            if (indices.contains(index)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"                // Duplicated Index.","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"                throw new ParseException(MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"            indices.add(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"        return indices;","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart name} into a {@code Name}.","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"    public static Name parseName(CommandPart name) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedName \u003d name.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"        String unescapedName \u003d StringUtil.unescapeString(trimmedName.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"            return new Name(unescapedName);","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(e.getMessage(), trimmedName);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart phone} into a {@code Phone}.","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"     * @param shouldCheck If true, check if the phone number is valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"    public static Phone parsePhone(CommandPart phone, boolean shouldCheck) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedPhone \u003d phone.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"        String unescapedPhone \u003d StringUtil.unescapeString(trimmedPhone.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"E0735389"},"content":"            return new Phone(unescapedPhone, shouldCheck);","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(e.getMessage(), trimmedPhone);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"E0735389"},"content":"    public static Phone parsePhone(CommandPart phone) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"E0735389"},"content":"        return parsePhone(phone, true);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart phone} into a {@code Optional\u003cPhone\u003e}, allowing empty input.","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"     * @param shouldCheck If true, check if the phone number is valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"E0735389"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"    public static Optional\u003cPhone\u003e parseOptionalPhone(CommandPart phone, boolean shouldCheck) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"E0735389"},"content":"        requireNonNull(phone);","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedPhone \u003d phone.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"E0735389"},"content":"        if (trimmedPhone.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"E0735389"},"content":"        return Optional.of(parsePhone(trimmedPhone, shouldCheck));","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"E0735389"},"content":"    public static Optional\u003cPhone\u003e parseOptionalPhone(CommandPart phone) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"E0735389"},"content":"        return parseOptionalPhone(phone, true);","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart address} into an {@code Address}.","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"E0735389"},"content":"    public static Address parseAddress(CommandPart address) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedAddress \u003d address.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"E0735389"},"content":"        String unescapedAddress \u003d StringUtil.unescapeString(trimmedAddress.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"E0735389"},"content":"            return new Address(unescapedAddress);","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"E0735389"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(e.getMessage(), trimmedAddress);","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart address} into a {@code Optional\u003cAddress\u003e}, allowing empty input.","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"E0735389"},"content":"    public static Optional\u003cAddress\u003e parseOptionalAddress(CommandPart address) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedAddress \u003d address.trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"LargeCrowd"},"content":"        if (trimmedAddress.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"LargeCrowd"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"LargeCrowd"},"content":"        return Optional.of(parseAddress(address));","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart email} into an {@code Email}.","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"E0735389"},"content":"     * @param shouldCheck If true, check if the phone number is valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"E0735389"},"content":"    public static Email parseEmail(CommandPart email, boolean shouldCheck) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedEmail \u003d email.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"E0735389"},"content":"        String unescapedEmail \u003d StringUtil.unescapeString(trimmedEmail.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"E0735389"},"content":"            return new Email(unescapedEmail, shouldCheck);","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"E0735389"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(e.getMessage(), trimmedEmail);","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"E0735389"},"content":"    public static Email parseEmail(CommandPart email) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"E0735389"},"content":"        return parseEmail(email, true);","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart course} into an {@code Course}.","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"ChillinRage"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"ChillinRage"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"E0735389"},"content":"     * @param shouldCheck If true, check if the course is valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"ChillinRage"},"content":"     * @throws ParseException if the given {@code course} is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"E0735389"},"content":"    public static Course parseCourse(CommandPart course, boolean shouldCheck) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"ChillinRage"},"content":"        requireNonNull(course);","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedCourse \u003d course.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"E0735389"},"content":"        String unescapedCourse \u003d StringUtil.unescapeString(trimmedCourse.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"E0735389"},"content":"            return new Course(unescapedCourse, shouldCheck);","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"E0735389"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(e.getMessage(), trimmedCourse);","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart role} from user input into a {@code Role}.","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"Hibeom0929"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"E0735389"},"content":"     * Allows specifying a role case-insensitively, and matching by an unambiguous prefix.","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"Hibeom0929"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"Hibeom0929"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"E0735389"},"content":"    public static Role parseRole(CommandPart role) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"Hibeom0929"},"content":"        requireNonNull(role);","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedRole \u003d role.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"E0735389"},"content":"        String unescapedRole \u003d StringUtil.unescapeString(trimmedRole.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"E0735389"},"content":"        // at the moment none of the roles can have any / or \\ in it regardless, this is just in case","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"E0735389"},"content":"        List\u003cString\u003e matchedRoles \u003d ParserUtil.filterByPrefix(unescapedRole.toUpperCase(), Role.getAllRoles());","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"E0735389"},"content":"        if (matchedRoles.size() \u003d\u003d 1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":216,"author":{"gitId":"E0735389"},"content":"            return Role.valueOf(matchedRoles.get(0));","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"E0735389"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":218,"author":{"gitId":"Hibeom0929"},"content":"            throw new ParseException(MESSAGE_ROLE_CONSTRAINTS, trimmedRole);","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"E0735389"},"content":"     * Parses a {@code CommandPart tag} into a {@code Tag}.","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"E0735389"},"content":"    public static Tag parseTag(CommandPart tag) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"E0735389"},"content":"        CommandPart trimmedTag \u003d tag.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"E0735389"},"content":"        String unescapedTag \u003d StringUtil.unescapeString(trimmedTag.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"E0735389"},"content":"            return new Tag(unescapedTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"E0735389"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(e.getMessage(), trimmedTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":240,"author":{"gitId":"E0735389"},"content":"     * Parses {@code Collection\u003cCommandPart\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":242,"author":{"gitId":"E0735389"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cCommandPart\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":245,"author":{"gitId":"E0735389"},"content":"        for (CommandPart tagName : tags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":250,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":251,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"ChillinRage"},"content":"     * Returns a new list containing strings from an input array that start with the given prefix.","lastModifiedDate":"2024-03-25"},{"lineNumber":253,"author":{"gitId":"ChillinRage"},"content":"     * The strings are case and space sensitive (i.e. \"hello\" will not match \" hello\" or \"HELLO\").","lastModifiedDate":"2024-03-25"},{"lineNumber":254,"author":{"gitId":"ChillinRage"},"content":"     * Note that if the given prefix is an empty string, the returned list will contain all the strings","lastModifiedDate":"2024-03-25"},{"lineNumber":255,"author":{"gitId":"ChillinRage"},"content":"     * in the input array.","lastModifiedDate":"2024-03-25"},{"lineNumber":256,"author":{"gitId":"ChillinRage"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":257,"author":{"gitId":"ChillinRage"},"content":"     * @param prefix Input prefix string.","lastModifiedDate":"2024-03-25"},{"lineNumber":258,"author":{"gitId":"ChillinRage"},"content":"     * @param strings An array of strings to match with the given prefix.","lastModifiedDate":"2024-03-25"},{"lineNumber":259,"author":{"gitId":"ChillinRage"},"content":"     * @return List of strings that start with the given prefix.","lastModifiedDate":"2024-03-25"},{"lineNumber":260,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":261,"author":{"gitId":"ChillinRage"},"content":"    public static List\u003cString\u003e filterByPrefix(String prefix, String[] strings) {","lastModifiedDate":"2024-03-25"},{"lineNumber":262,"author":{"gitId":"ChillinRage"},"content":"        final List\u003cString\u003e matchedStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":263,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":264,"author":{"gitId":"ChillinRage"},"content":"        for (String string : strings) {","lastModifiedDate":"2024-03-25"},{"lineNumber":265,"author":{"gitId":"ChillinRage"},"content":"            if (string.startsWith(prefix)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"ChillinRage"},"content":"                matchedStrings.add(string);","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":270,"author":{"gitId":"ChillinRage"},"content":"        return matchedStrings;","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":273,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":274,"author":{"gitId":"E0735389"},"content":"     * Parses the {@code shouldCheck} flag from the argument multimap.","lastModifiedDate":"2024-04-03"},{"lineNumber":275,"author":{"gitId":"E0735389"},"content":"     * @return true if the {@code PREFIX_FORCE} flag is absent, false otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":276,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":277,"author":{"gitId":"E0735389"},"content":"    public static boolean parseShouldCheckFlag(ArgumentMultimap\u003cCommandPart\u003e argMultimap) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":278,"author":{"gitId":"E0735389"},"content":"        boolean isForced \u003d argMultimap.getValue(PREFIX_FORCE).isPresent();","lastModifiedDate":"2024-04-03"},{"lineNumber":279,"author":{"gitId":"E0735389"},"content":"        if (isForced \u0026\u0026 !argMultimap.getValue(PREFIX_FORCE).get().isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":280,"author":{"gitId":"E0735389"},"content":"            throw new ParseException(MESSAGE_FORCE_TAG_MUST_BE_EMPTY, argMultimap.getValue(PREFIX_FORCE).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":281,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":282,"author":{"gitId":"E0735389"},"content":"        boolean shouldCheck \u003d !isForced;","lastModifiedDate":"2024-04-03"},{"lineNumber":283,"author":{"gitId":"E0735389"},"content":"        return shouldCheck;","lastModifiedDate":"2024-04-03"},{"lineNumber":284,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LargeCrowd":3,"Hibeom0929":12,"E0735389":119,"-":101,"ChillinRage":50}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import seedu.address.commons.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandPart;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"public class ParseException extends IllegalValueException implements CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"     * The part of the command that causes the error.","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    private final Optional\u003cCommandPart\u003e erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code ParseException} with the specified detail message and command part.","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error, if any.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    public ParseException(String message, Optional\u003cCommandPart\u003e erroneousPart) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        assert erroneousPart !\u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"        this.erroneousPart \u003d erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code ParseException} with the specified detail message, command part, and cause.","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"     * @param cause The cause of the error.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error, if any.","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"    public ParseException(String message, Throwable cause, Optional\u003cCommandPart\u003e erroneousPart) {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        assert erroneousPart !\u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        this.erroneousPart \u003d erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code ParseException} with the specified detail message and command part.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"    public ParseException(String message, CommandPart erroneousPart) {","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"        this(message, Optional.of(erroneousPart));","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@code ParseException} with the specified detail message, command part, and cause.","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"     * @param cause The cause of the error.","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     * @param erroneousPart The part of the command that causes the error.","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    public ParseException(String message, Throwable cause, CommandPart erroneousPart) {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        this(message, cause, Optional.of(erroneousPart));","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@link ParseException} with the given message, without specifying the part of the command that","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"     * causes the error.","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"    public ParseException(String message) {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"        this(message, Optional.empty());","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"     * Constructs a {@link ParseException} with the given message and cause, without specifying the part of the command","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"     * that causes the error.","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"        this(message, cause, Optional.empty());","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"    public Optional\u003cCommandPart\u003e getErroneousPart() {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"        return erroneousPart;","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"E0735389":65,"-":15}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"ChillinRage"},"content":"     * Creates a new copy of the current {@code AddressBook}.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"ChillinRage"},"content":"     * @return The new copy of the AddressBook.","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"ChillinRage"},"content":"    public AddressBook copy() {","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"ChillinRage"},"content":"        return new AddressBook(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":130,"ChillinRage":8}},{"path":"src/main/java/seedu/address/model/CommandHistoryModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.logic.parser.CommandString;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":" * A model to store the past valid CommandStrings entered by the user. Allows for users to revisit past commands.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":" * Note that this model saves the commands edited in the command box while the user is scrolling through them.","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"public class CommandHistoryModel {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    private final List\u003cCommandString\u003e commandHistoryList;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"    private List\u003cCommandString\u003e tempHistoryList;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"    private int commandHistoryIndex;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"     * Constructs a {@code CommandHistoryModel} object with an optional input string of {@code commands}.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"    public CommandHistoryModel(CommandString... commands) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryList \u003d new ArrayList\u003c\u003e(Arrays.asList(commands));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"        resetTempList();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"     * Add a new command string to the command history.","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"     * @param command A string representing the new command to be added.","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"    public void addCommand(CommandString command) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"        requireNonNull(command);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryList.add(command);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"        resetTempList();","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"     * Reset the state of {@code tempHistoryList} to be equal to {@code commandHistoryList}.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"    private void resetTempList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        tempHistoryList \u003d new ArrayList\u003c\u003e(commandHistoryList);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        tempHistoryList.add(new CommandString(\"\")); // Extra index to store current command.","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryIndex \u003d commandHistoryList.size(); // Reset index to point at current command.","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"     * Replaces the current command with {@code currrentCommand} and returns the next newest command in","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"     * the command history. If the model is already at the newest command, then that command will be returned instead.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"    public CommandString getNextCommandHistory(CommandString currrentCommand) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"        // Updates command at current index with currentText.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"        tempHistoryList.set(commandHistoryIndex, currrentCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryIndex \u003d Math.min(commandHistoryIndex + 1, commandHistoryList.size());","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"        return tempHistoryList.get(commandHistoryIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"     * Replaces the current command with {@code currrentCommand} and returns the next oldest command in","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"     * the command history. If the model is already at the oldest command, then that command will be returned instead.","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"    public CommandString getPreviousCommandHistory(CommandString currrentCommand) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"        // Updates command at current index with currrentCommandText.","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"        tempHistoryList.set(commandHistoryIndex, currrentCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryIndex \u003d Math.max(commandHistoryIndex - 1, 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        return tempHistoryList.get(commandHistoryIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ChillinRage":72}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"    /** Save a copy of address book. */","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"    void saveAddressBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"    /** Replaces the current addressbook with the previous one. */","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"    void undoAddressBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"ChillinRage":6}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"    private AddressBook previousAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"        this.previousAddressBook \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"ChillinRage"},"content":"    public void saveAddressBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"ChillinRage"},"content":"        previousAddressBook \u003d addressBook.copy();","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"ChillinRage"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"ChillinRage"},"content":"        addressBook.resetData(previousAddressBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"ChillinRage"},"content":"        previousAddressBook \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":148,"ChillinRage":14}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"nuscontacts.json\");","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"E0735389":1,"-":87}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"    public static final String MESSAGE_CONSTRAINTS_PROFESSOR \u003d String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"        \"Please input the professor\u0027s office address. Use: %sADDRESS\", PREFIX_ADDRESS);","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"LargeCrowd"},"content":"    public static final String MESSAGE_CONSTRAINTS_INVALID_PROFESSOR \u003d \"Professors cannot have empty addresses!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LargeCrowd":3,"Hibeom0929":1,"-":63,"ChillinRage":2}},{"path":"src/main/java/seedu/address/model/person/Course.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":" * Represents a Person\u0027s course code in the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCourse(String)}","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"public class Course {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"            \"Course code should adhere to the following constraints:\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"            + \"1. It should start with 2 or 3 letters, followed by exactly 4 digits.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"            + \"2. (Optional) You can also add a letter as a postfix.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"            + \"Examples of accepted code: CS2103, CS2103T, DSA1101.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"    /*","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"     * A course code should start with 2-3 alphabets, followed by exactly 4 digits.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"     * Some course codes may also have an alphabet as its last character. (i.e. CS2103T)","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"     * (Course code format is quoted from official NUS website)","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"    private static final String PREFIX_CODE \u003d \"[A-Z]{2,3}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"    private static final String DIGIT_CODE \u003d \"[0-9]{4}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"    private static final String POSTFIX_CODE \u003d \"[A-Z]{0,1}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"    public static final String VALIDATION_REGEX \u003d PREFIX_CODE + DIGIT_CODE + POSTFIX_CODE;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"    public final String value;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"     * Constructs a {@code Course}.","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"     * @param course A valid course code.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"     * @param shouldCheck If true, check if the course code is valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    public Course(String course, boolean shouldCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"        requireNonNull(course);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        if (shouldCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"            checkArgument(isValidCourse(course), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"        this.value \u003d course.toUpperCase().trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"     * Constructs a valid {@code Course}.","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"     * @param course A valid course code.","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"    public Course(String course) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"        this(course, true);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"     * Returns true if a given string is a valid course code.","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"    public static boolean isValidCourse(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        return test.toUpperCase().trim().matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"        return this.value;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"        if (!(other instanceof Course)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"        Course otherName \u003d (Course) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"        return this.value.equals(otherName.value);","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"E0735389":13,"ChillinRage":71}},{"path":"src/main/java/seedu/address/model/person/CourseContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hibeom0929"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Hibeom0929"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Hibeom0929"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Hibeom0929"},"content":" * Tests that a {@code Person}\u0027s {@code Course} matches any of the keywords given.","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Hibeom0929"},"content":"public class CourseContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"    public CourseContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Hibeom0929"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Hibeom0929"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"                .anyMatch(keyword -\u003e keyword.equalsIgnoreCase(person.getCourse().value));","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"        if (!(other instanceof CourseContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate otherCourseContainsKeywordsPredicate \u003d (CourseContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Hibeom0929"},"content":"        return keywords.equals(otherCourseContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Hibeom0929"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Hibeom0929"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Hibeom0929"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Hibeom0929":43}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"     * @param email An email address.","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"     * @param shouldCheck If true, check if the phone number is valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"    public Email(String email, boolean shouldCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        if (shouldCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"     * Constructs a valid {@code Email}.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"     * @param email An email address.","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"    public Email(String email) {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"        this(email, true);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"E0735389":14,"-":77}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"            \"Names should not be blank.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        fullName \u003d name.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        return !test.trim().isEmpty();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"Hibeom0929"},"content":"        return fullName.equalsIgnoreCase(otherName.fullName);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hibeom0929":1,"E0735389":3,"-":63}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"LargeCrowd"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"LargeCrowd"},"content":"import seedu.address.model.person.exceptions.InvalidAddressException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"    private final Course course;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"    private final Role role;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"LargeCrowd"},"content":"    private final Optional\u003cAddress\u003e address;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"LargeCrowd"},"content":"    public Person(Name name, Optional\u003cPhone\u003e phone, Email email, Role role,","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"            Optional\u003cAddress\u003e address, Course course, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"        requireAllNonNull(name, phone, email, role, address, course, tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"LargeCrowd"},"content":"        // Check for valid address based on the person\u0027s role","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"LargeCrowd"},"content":"        validateAddress(role, address);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"Hibeom0929"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        this.course \u003d course;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"Hibeom0929"},"content":"    public Role getRole() {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Hibeom0929"},"content":"        return role;","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"LargeCrowd"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"    public Course getCourse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"        return course;","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"LargeCrowd"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"LargeCrowd"},"content":"     * Creates a new Person object with the given parameters.","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"LargeCrowd"},"content":"     * @param name The name of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"LargeCrowd"},"content":"     * @param phone The phone number of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"LargeCrowd"},"content":"     * @param email The email of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"LargeCrowd"},"content":"     * @param role The role of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"LargeCrowd"},"content":"     * @param address The address of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"LargeCrowd"},"content":"     * @param course The course of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"LargeCrowd"},"content":"     * @param tags The tags of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"LargeCrowd"},"content":"     * @return A new Person object.","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"     * @throws InvalidAddressException If the address is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"LargeCrowd"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"LargeCrowd"},"content":"    public static Person createPerson(Name name, Optional\u003cPhone\u003e phone, Email email, Role role,","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"LargeCrowd"},"content":"                                      Optional\u003cAddress\u003e address, Course course, Set\u003cTag\u003e tags)","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"LargeCrowd"},"content":"            throws InvalidAddressException {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"LargeCrowd"},"content":"        return new Person(name, phone, email, role, address, course, tags);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"LargeCrowd"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"LargeCrowd"},"content":"     * Validates the address based on the person\u0027s role.","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"LargeCrowd"},"content":"     * @param role","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"LargeCrowd"},"content":"     * @param address","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"LargeCrowd"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"LargeCrowd"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"LargeCrowd"},"content":"    public static void validateAddress(Role role, Optional\u003cAddress\u003e address) {","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"LargeCrowd"},"content":"        assert role !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"LargeCrowd"},"content":"        if (role \u003d\u003d Role.PROFESSOR \u0026\u0026 address.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"LargeCrowd"},"content":"            throw new InvalidAddressException(Address.MESSAGE_CONSTRAINTS_INVALID_PROFESSOR);","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"LargeCrowd"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"Hibeom0929"},"content":"                \u0026\u0026 role.equals(otherPerson.role)","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"ChillinRage"},"content":"                \u0026\u0026 course.equals(otherPerson.course)","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"ChillinRage"},"content":"        return Objects.hash(name, phone, email, role, address, course, tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"Hibeom0929"},"content":"                .add(\"role\", role)","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"ChillinRage"},"content":"                .add(\"course\", course)","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LargeCrowd":39,"Hibeom0929":8,"E0735389":4,"-":110,"ChillinRage":11}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"     * @param phone A phone number.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"     * @param shouldCheck If true, check if the phone number is valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public Phone(String phone, boolean shouldCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"        if (shouldCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"     * Constructs a valid {@code Phone}.","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"     * @param phone A phone number.","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"    public Phone(String phone) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        this(phone, true);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hibeom0929":1,"E0735389":14,"-":58}},{"path":"src/main/java/seedu/address/model/person/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hibeom0929"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Hibeom0929"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Hibeom0929"},"content":" * Represents a Person\u0027s role in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Hibeom0929"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"LargeCrowd"},"content":"public enum Role {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"    STUDENT,","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"LargeCrowd"},"content":"    TA,","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"LargeCrowd"},"content":"    PROFESSOR;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"LargeCrowd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"LargeCrowd"},"content":"            \"Roles should be either \u0027STUDENT\u0027, \u0027TA\u0027, or \u0027PROFESSOR\u0027.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"     * Returns an array of strings containing all roles.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public static String[] getAllRoles() {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        return Arrays.stream(Role.values()).map(Role::name).toArray(size -\u003e new String[size]);","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"     * Returns true if a given string is a valid role.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"LargeCrowd"},"content":"            valueOf(test); // This will throw an IllegalArgumentException if the value is not a valid role","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"LargeCrowd":7,"Hibeom0929":19,"E0735389":9}},{"path":"src/main/java/seedu/address/model/person/RoleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hibeom0929"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"Hibeom0929"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"Hibeom0929"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Hibeom0929"},"content":" * Tests that a {@code Person}\u0027s {@code Role} matches any of the keywords given.","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Hibeom0929"},"content":"public class RoleContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"    public RoleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Hibeom0929"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Hibeom0929"},"content":"        return keywords.stream()","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"                .anyMatch(keyword -\u003e keyword.equalsIgnoreCase(person.getRole().name()));","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"        if (!(other instanceof RoleContainsKeywordsPredicate)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate otherRoleContainsKeywordsPredicate \u003d (RoleContainsKeywordsPredicate) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Hibeom0929"},"content":"        return keywords.equals(otherRoleContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Hibeom0929"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Hibeom0929"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Hibeom0929"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Hibeom0929":43}},{"path":"src/main/java/seedu/address/model/person/exceptions/InvalidAddressException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LargeCrowd"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"LargeCrowd"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"LargeCrowd"},"content":" * Signals that the operation is creating a person with an invalid address.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"LargeCrowd"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"LargeCrowd"},"content":"public class InvalidAddressException extends RuntimeException {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"LargeCrowd"},"content":"    public InvalidAddressException(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"LargeCrowd"},"content":"        super(message);","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LargeCrowd":10}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names cannot be empty.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        return !test.isEmpty();","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"E0735389":2,"-":59}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"LargeCrowd"},"content":"            new Person(new Name(\"Alex Yeoh\"), Optional.of(new Phone(\"87438807\")), new Email(\"alexyeoh@u.nus.edu\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"                Role.valueOf(\"STUDENT\"), Optional.empty(),","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"                new Course(\"CS2103T\"), getTagSet(\"friends\")),","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"LargeCrowd"},"content":"            new Person(new Name(\"Bernice Yu\"), Optional.of(new Phone(\"99272758\")), new Email(\"berniceyu@u.nus.edu\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"                    Role.valueOf(\"STUDENT\"), Optional.empty(),","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"LargeCrowd"},"content":"                new Course(\"CS2103\"), getTagSet(\"classmates\", \"friends\")),","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), Optional.of(new Phone(\"93210283\")),","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"                    Role.valueOf(\"TA\"), Optional.empty(),","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"LargeCrowd"},"content":"                new Course(\"DSA1101\"), getTagSet(\"tutor\")),","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"LargeCrowd"},"content":"            new Person(new Name(\"David Li\"), Optional.of(new Phone(\"91031282\")), new Email(\"lidavid@u.nus.edu\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"LargeCrowd"},"content":"                    Role.valueOf(\"TA\"), Optional.of(new Address(\"S17-0301\")),","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"LargeCrowd"},"content":"                new Course(\"MA2001\"), getTagSet(\"friends\")),","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"LargeCrowd"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), Optional.of(new Phone(\"92492021\")), new Email(\"irfan@nus.edu.sg\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Hibeom0929"},"content":"                    Role.valueOf(\"PROFESSOR\"), Optional.of(new Address(\"COM2-02-47\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"LargeCrowd"},"content":"                new Course(\"EL1101E\"), getTagSet(\"lecturer\")),","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"LargeCrowd"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), Optional.of(new Phone(\"92624417\")), new Email(\"royb@nus.edu.sg\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"                    Role.valueOf(\"PROFESSOR\"), Optional.of(new Address(\"COM2-02-48\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"LargeCrowd"},"content":"                new Course(\"ACC1701X\"), getTagSet(\"DepartmentHead\"))","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"LargeCrowd":11,"Hibeom0929":6,"E0735389":3,"-":42,"ChillinRage":2}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"    private final String role;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"    private final String course;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"            @JsonInclude(JsonInclude.Include.NON_NULL) @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"            @JsonProperty(\"role\") String role,","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"            @JsonInclude(JsonInclude.Include.NON_NULL)","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"            @JsonProperty(\"course\") String course,","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Hibeom0929"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"        this.course \u003d course;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"        phone \u003d source.getPhone().map(x -\u003e x.value).orElse(null);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"        role \u003d source.getRole().name();","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"LargeCrowd"},"content":"        address \u003d source.getAddress().map(x -\u003e x.value).orElse(null);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"        course \u003d source.getCourse().value;","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"        final boolean shouldCheck \u003d false; // we allow invalid phone number formats etc.","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"        final Optional\u003cPhone\u003e modelPhone \u003d Optional.ofNullable(phone).map(x -\u003e new Phone(x, shouldCheck));","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"        final Email modelEmail \u003d new Email(email, shouldCheck);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"Hibeom0929"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"Hibeom0929"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"Hibeom0929"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"Hibeom0929"},"content":"        if (!Role.isValidRole(role)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"Hibeom0929"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"LargeCrowd"},"content":"        final Role modelRole \u003d Role.valueOf(role);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"        if (address !\u003d null \u0026\u0026 !Address.isValidAddress(address)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"        final Optional\u003cAddress\u003e modelAddress \u003d Optional.ofNullable(address).map(Address::new);","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"ChillinRage"},"content":"        if (course \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"ChillinRage"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Course.class.getSimpleName()));","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"        final Course modelCourse \u003d new Course(course, shouldCheck);","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"ChillinRage"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelRole, modelAddress, modelCourse, modelTags);","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LargeCrowd":2,"Hibeom0929":9,"E0735389":11,"-":90,"ChillinRage":17}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.CommandHistoryModel;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"    private final CommandHistoryModel commandHistory;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"        this.commandHistory \u003d new CommandHistoryModel();","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        final String commandText \u003d commandTextField.getText();","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"        final CommandString commandString \u003d new CommandString(commandText);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"            commandExecutor.execute(commandString);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"            commandHistory.addCommand(commandString);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"        } catch (CommandExecutionException | ParseException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"            e.getErroneousPart().ifPresent(erroneousPart -\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"                commandTextField.selectRange(erroneousPart.getStartIndex(), erroneousPart.getEndIndex());","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"            });","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"     * Handles any key button pressed event. Currently supports only UP and DOWN keys.","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"     * @param keyEvent The key pressed while command box is in focus.","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"    private void handleKeyPressed(KeyEvent keyEvent) {","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"        final KeyCode keyCode \u003d keyEvent.getCode();","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"        if (keyCode \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"            CommandString currentCommandText \u003d new CommandString(commandTextField.getText());","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"            String text \u003d commandHistory.getPreviousCommandHistory(currentCommandText).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"            commandTextField.setText(text);","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"            commandTextField.positionCaret(text.length()); // Set caret to be at the right-end.","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"        } else if (keyCode \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"            CommandString currentCommandText \u003d new CommandString(commandTextField.getText());","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"            String text \u003d commandHistory.getNextCommandHistory(currentCommandText).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"            commandTextField.setText(text);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"            commandTextField.positionCaret(text.length()); // Set caret to be at the right-end.","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"         * @see seedu.address.logic.Logic#execute(CommandString)","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"E0735389"},"content":"        CommandResult execute(CommandString commandText) throws CommandExecutionException, ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"E0735389":10,"-":82,"ChillinRage":29}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    public static final String WEBSITE_URL \u003d \"https://ay2324s2-cs2103t-t11-2.github.io/tp/\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    public static final String HELP_MESSAGE \u003d MainApp.APP_NAME + \" Application\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        + \"Visit the project website: \" + WEBSITE_URL;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"        // Pressing ESC key while this window is in focus will close it.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        root.addEventHandler(","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"            KeyEvent.KEY_PRESSED,","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"            event -\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"                if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"                    getRoot().close();","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"                }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"            });","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"        getRoot().setIconified(false);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"        url.putString(WEBSITE_URL);","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"E0735389":5,"-":99,"ChillinRage":12}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"E0735389"},"content":"     * @see seedu.address.logic.Logic#execute(CommandString)","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"E0735389"},"content":"    private CommandResult executeCommand(CommandString commandString) throws CommandExecutionException, ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"E0735389"},"content":"            CommandResult commandResult \u003d logic.execute(commandString);","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"E0735389"},"content":"        } catch (CommandExecutionException | ParseException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"E0735389"},"content":"            logger.info(\"An error occurred while executing command: \" + commandString);","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"E0735389":7,"-":190}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"    private Label course;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Hibeom0929"},"content":"    private Label role;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Hibeom0929"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        role.setText(person.getRole().name());","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        address.setText(person.getAddress().map(x -\u003e x.value).orElse(\"(no address)\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        course.setText(person.getCourse().value);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"        phone.setText(person.getPhone().map(x -\u003e x.value).orElse(\"(no phone number)\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Hibeom0929":2,"E0735389":2,"-":57,"ChillinRage":5}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"     * @see #UiPart(URL, Object)","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"E0735389":1,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#handleKeyPressed\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"ChillinRage":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"         title\u003d\"NUSContacts\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"ChillinRage":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"        \u003cHBox spacing\u003d\"0\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"          \u003cLabel styleClass\u003d\"cell_small_label\"\u003e(\u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"          \u003cLabel fx:id\u003d\"course\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$course\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"          \u003cLabel styleClass\u003d\"cell_small_label\"\u003e,\u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"        \u003cHBox spacing\u003d\"0\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"          \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Hibeom0929"},"content":"          \u003cLabel styleClass\u003d\"cell_small_label\"\u003e)\u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"Hibeom0929"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hibeom0929":9,"-":36}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" wrapText\u003d\"true\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"E0735389":1,"-":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"reetmitra"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.parser.CommandString;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"    public void execute_commandExecutionError_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"        assertCommandExecutionException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"reetmitra"},"content":"    @Disabled","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"    public void execute_storageThrowsIoException_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"reetmitra"},"content":"    @Disabled","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"    public void execute_storageThrowsAdException_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"            Model expectedModel) throws CommandExecutionException, ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"E0735389"},"content":"        CommandResult result \u003d logic.execute(new CommandString(inputCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"     * Executes the command, confirms that a CommandExecutionException is thrown and that the result message is correct.","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"E0735389"},"content":"    private void assertCommandExecutionException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"        assertCommandFailure(inputCommand, CommandExecutionException.class, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"E0735389"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(new CommandString(inputCommand)));","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"E0735389"},"content":"        assertCommandFailure(addCommand, CommandExecutionException.class, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"E0735389":13,"reetmitra":3,"-":163}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"    public void execute_duplicatePerson_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"E0735389":1,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    public void execute_duplicatePerson_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"        assertThrows(CommandExecutionException.class,","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"ChillinRage"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"ChillinRage"},"content":"        public void saveAddressBook() {}","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"ChillinRage"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"ChillinRage"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"ChillinRage"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"E0735389":4,"-":201,"ChillinRage":8}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"LargeCrowd"},"content":"    public static final String VALID_NAME_CHARLIE \u003d \"Charlie Dong\";","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"LargeCrowd"},"content":"    public static final String VALID_PHONE_CHARLIE \u003d \"33333333\";","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"LargeCrowd"},"content":"    public static final String VALID_EMAIL_CHARLIE \u003d \"charlie@example.com\";","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"    public static final String VALID_ROLE_AMY \u003d \"PROFESSOR\";","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"    public static final String VALID_ROLE_BOB \u003d \"STUDENT\";","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"LargeCrowd"},"content":"    public static final String VALID_ROLE_CHARLIE \u003d \"TA\";","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"LargeCrowd"},"content":"    public static final String VALID_ADDRESS_CHARLIE \u003d \"\";","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"    public static final String VALID_COURSE_AMY \u003d \"MA1521\";","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"    public static final String VALID_COURSE_BOB \u003d \"MA1522\";","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"LargeCrowd"},"content":"    public static final String VALID_COURSE_CHARLIE \u003d \"MA1523\";","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"LargeCrowd"},"content":"    public static final String VALID_TAG_CLASSMATE \u003d \"classmate\";","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"LargeCrowd"},"content":"    public static final String NAME_DESC_CHARLIE \u003d \" \" + PREFIX_NAME + VALID_NAME_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"LargeCrowd"},"content":"    public static final String PHONE_DESC_CHARLIE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"LargeCrowd"},"content":"    public static final String EMAIL_DESC_CHARLIE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"    public static final String ROLE_DESC_AMY \u003d \" \" + PREFIX_ROLE + VALID_ROLE_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"    public static final String ROLE_DESC_BOB \u003d \" \" + PREFIX_ROLE + VALID_ROLE_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"LargeCrowd"},"content":"    public static final String ROLE_DESC_CHARLIE \u003d \" \" + PREFIX_ROLE + VALID_ROLE_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"LargeCrowd"},"content":"    public static final String ADDRESS_DESC_CHARLIE \u003d \"\";","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"    public static final String ADDRESS_DESC_EMPTY \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"    public static final String COURSE_DESC_AMY \u003d \" \" + PREFIX_COURSE + VALID_COURSE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"    public static final String COURSE_DESC_BOB \u003d \" \" + PREFIX_COURSE + VALID_COURSE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"LargeCrowd"},"content":"    public static final String COURSE_DESC_CHARLIE \u003d \" \" + PREFIX_COURSE + VALID_COURSE_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"LargeCrowd"},"content":"    public static final String TAG_DESC_CLASSMATE \u003d \" \" + PREFIX_TAG + VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE + \"Teacher\"; // only 3 specific roles allowed","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"    public static final String INVALID_COURSE_DESC \u003d \" \" + PREFIX_COURSE + \"2334ST\"; // digit prefix not allowed","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"LargeCrowd"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"                .withRole(VALID_ROLE_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"E0735389"},"content":"                .withAddress(Optional.of(VALID_ADDRESS_AMY))","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"                .withCourse(VALID_COURSE_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"                .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"LargeCrowd"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"LargeCrowd"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"LargeCrowd"},"content":"                .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"LargeCrowd"},"content":"                .withAddress(Optional.of(VALID_ADDRESS_BOB))","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"LargeCrowd"},"content":"                .withCourse(VALID_COURSE_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"LargeCrowd"},"content":"                .withTags(VALID_TAG_CLASSMATE, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"LargeCrowd"},"content":"        DESC_CHARLIE \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"LargeCrowd"},"content":"                .withPhone(VALID_PHONE_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"LargeCrowd"},"content":"                .withEmail(VALID_EMAIL_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"LargeCrowd"},"content":"                .withRole(VALID_ROLE_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"LargeCrowd"},"content":"                .withCourse(VALID_COURSE_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"LargeCrowd"},"content":"                .withTags(VALID_TAG_CLASSMATE).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"E0735389"},"content":"        } catch (CommandExecutionException ce) {","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"E0735389"},"content":"     * - a {@code CommandExecutionException} is thrown \u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"E0735389"},"content":"     * - the CommandExecutionException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"E0735389"},"content":"        assertThrows(CommandExecutionException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LargeCrowd":27,"E0735389":15,"-":115,"ChillinRage":11}},{"path":"src/test/java/seedu/address/logic/commands/CopyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"reetmitra"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"reetmitra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"reetmitra"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"reetmitra"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"reetmitra"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"reetmitra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"reetmitra"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"reetmitra"},"content":"import seedu.address.logic.commands.exceptions.CommandExecutionException;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"reetmitra"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"reetmitra"},"content":"public class CopyCommandTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"reetmitra"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"reetmitra"},"content":"    public void execute_copySuccessful() throws CommandExecutionException {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"reetmitra"},"content":"        // Create a new model manager","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"reetmitra"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"reetmitra"},"content":"        // Add a person with an email to the model","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"reetmitra"},"content":"        Person person \u003d new Person(","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"reetmitra"},"content":"            new Name(\"Alice\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"reetmitra"},"content":"            Optional.of(new Phone(\"12345678\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"reetmitra"},"content":"            new Email(\"alice@example.com\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"reetmitra"},"content":"            Role.STUDENT,","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"reetmitra"},"content":"            Optional.of(new Address(\"123 Street\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"reetmitra"},"content":"            new Course(\"CS2103T\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"reetmitra"},"content":"            new HashSet\u003cTag\u003e()","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"reetmitra"},"content":"        );","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"reetmitra"},"content":"        model.addPerson(person);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"reetmitra"},"content":"        // Create a new CopyCommand and execute it","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"reetmitra"},"content":"        CopyCommand copyCommand \u003d new CopyCommand(Index.fromOneBased(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"reetmitra"},"content":"        CommandResult result \u003d copyCommand.execute(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"reetmitra"},"content":"        // Check if the command was successful","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"reetmitra"},"content":"        assertEquals(\"Email copied to clipboard.\", result.getFeedbackToUser());","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"reetmitra"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"reetmitra"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"reetmitra"},"content":"        CopyCommand copyFirstCommand \u003d new CopyCommand(Index.fromOneBased(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"reetmitra"},"content":"        CopyCommand copySecondCommand \u003d new CopyCommand(Index.fromOneBased(2));","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"reetmitra"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"reetmitra"},"content":"        assertEquals(copyFirstCommand, copyFirstCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"reetmitra"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"reetmitra"},"content":"        CopyCommand copyFirstCommandCopy \u003d new CopyCommand(Index.fromOneBased(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"reetmitra"},"content":"        assertEquals(copyFirstCommand, copyFirstCommandCopy);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"reetmitra"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"reetmitra"},"content":"        assertNotEquals(copyFirstCommand, 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"reetmitra"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"reetmitra"},"content":"        assertNotEquals(copyFirstCommand, null);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"reetmitra"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"reetmitra"},"content":"        assertNotEquals(copyFirstCommand, copySecondCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"reetmitra"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"reetmitra":71}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"    public void execute_validIndicesUnfilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON));","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"                Messages.format(firstPersonToDelete) + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"                + Messages.format(secondPersonToDelete));","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"        expectedModel.deletePerson(secondPersonToDelete);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        expectedModel.deletePerson(firstPersonToDelete);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"    public void execute_invalidIndicesUnfilteredList_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"            Arrays.asList(INDEX_FIRST_PERSON, outOfBoundIndex));","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"    public void execute_invalidIndicesFilteredList_throwsCommandExecutionException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"ChillinRage"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"ChillinRage"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"ChillinRage"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"ChillinRage"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"ChillinRage"},"content":"            Arrays.asList(INDEX_FIRST_PERSON, outOfBoundIndex));","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"ChillinRage"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"ChillinRage"},"content":"        List\u003cIndex\u003e targetIndexList \u003d Arrays.asList(Index.fromOneBased(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"ChillinRage"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndexList);","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"ChillinRage"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndexList + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"ChillinRage"},"content":"        deleteCommand \u003d new DeleteCommand(Index.fromOneBased(1));","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"E0735389":4,"-":115,"ChillinRage":46}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"LargeCrowd"},"content":"                .withTags(VALID_TAG_CLASSMATE).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"LargeCrowd"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_CLASSMATE).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"LargeCrowd":3,"-":181}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRole(VALID_ROLE_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(Optional.of(VALID_ADDRESS_BOB)).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"        // different course -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withCourse(VALID_COURSE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"LargeCrowd"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_CLASSMATE).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName()","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"                + \"{name\u003d\" + editPersonDescriptor.getName().orElse(null)","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"                + \", phone\u003d\" + editPersonDescriptor.getPhone().orElse(null)","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"                + \", email\u003d\" + editPersonDescriptor.getEmail().orElse(null)","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"                + \", role\u003d\" + editPersonDescriptor.getRole().orElse(null)","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"                + \", address\u003d\" + editPersonDescriptor.getAddress().orElse(null)","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"                + \", course\u003d\" + editPersonDescriptor.getCourse().orElse(null)","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"                + \", tags\u003d\" + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LargeCrowd":2,"E0735389":2,"-":65,"ChillinRage":16}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.CourseContainsKeywordsPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate firstCoursePredicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Hibeom0929"},"content":"                new CourseContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate secondCoursePredicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Hibeom0929"},"content":"                new CourseContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate firstRolePredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"Hibeom0929"},"content":"                new RoleContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate secondRolePredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Hibeom0929"},"content":"                new RoleContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstNamePredicate, firstCoursePredicate, firstRolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondNamePredicate, secondCoursePredicate, firstRolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand findFirstSecondFirstCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"Hibeom0929"},"content":"                new FindCommand(firstNamePredicate, secondCoursePredicate, firstRolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand findSecondFirstFirstCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Hibeom0929"},"content":"                new FindCommand(secondNamePredicate, firstCoursePredicate, firstRolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand findFirstFirstSecondCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Hibeom0929"},"content":"                new FindCommand(firstNamePredicate, firstCoursePredicate, secondRolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand findFirstCommandCopy \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"Hibeom0929"},"content":"                new FindCommand(firstNamePredicate, firstCoursePredicate, firstRolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Hibeom0929"},"content":"        // same name and course but different role -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(findFirstCommand.equals(findFirstFirstSecondCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"Hibeom0929"},"content":"        // same course and role but different name -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(findFirstCommand.equals(findSecondFirstFirstCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"Hibeom0929"},"content":"        // same name and role but different course -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(findFirstCommand.equals(findFirstSecondFirstCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate coursePredicate \u003d prepareCoursePredicate(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate rolePredicate \u003d prepareRolePredicate(\" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, coursePredicate, rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"Hibeom0929"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.or(coursePredicate).or(rolePredicate));","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"Hibeom0929"},"content":"    public void execute_multipleNameKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate coursePredicate \u003d prepareCoursePredicate(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate rolePredicate \u003d prepareRolePredicate(\" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, coursePredicate, rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"Hibeom0929"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"Hibeom0929"},"content":"    public void execute_multipleCourseKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"Hibeom0929"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate coursePredicate \u003d prepareCoursePredicate(\"IS2218 CS2030S\");","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate rolePredicate \u003d prepareRolePredicate(\" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, coursePredicate, rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"Hibeom0929"},"content":"        expectedModel.updateFilteredPersonList(coursePredicate);","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"Hibeom0929"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"Hibeom0929"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"Hibeom0929"},"content":"    public void execute_multipleRoleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"Hibeom0929"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate coursePredicate \u003d prepareCoursePredicate(\" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate rolePredicate \u003d prepareRolePredicate(\"STUDENT PROFESSOR\");","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, coursePredicate, rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"Hibeom0929"},"content":"        expectedModel.updateFilteredPersonList(rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"Hibeom0929"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"Hibeom0929"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"Hibeom0929"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"Hibeom0929"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Elle\");","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate coursePredicate \u003d prepareCoursePredicate(\"IS2218\");","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate rolePredicate \u003d prepareRolePredicate(\"STUDENT\");","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, coursePredicate, rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"Hibeom0929"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.or(coursePredicate).or(rolePredicate));","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"Hibeom0929"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"Hibeom0929"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, ELLE, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"Hibeom0929"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate coursePredicate \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"Hibeom0929"},"content":"                new CourseContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate rolePredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"Hibeom0929"},"content":"                new RoleContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"Hibeom0929"},"content":"        FindCommand findCommand \u003d new FindCommand(namePredicate, coursePredicate, rolePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"Hibeom0929"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{namePredicate\u003d\" + namePredicate","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"Hibeom0929"},"content":"                                                               + \", coursePredicate\u003d\" + coursePredicate","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"Hibeom0929"},"content":"                                                               + \", rolePredicate\u003d\" + rolePredicate + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"Hibeom0929"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":167,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"Hibeom0929"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"Hibeom0929"},"content":"     * Parses {@code userInput} into a {@code CourseContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"Hibeom0929"},"content":"    private CourseContainsKeywordsPredicate prepareCoursePredicate(String userInput) {","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"Hibeom0929"},"content":"        return new CourseContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"Hibeom0929"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"Hibeom0929"},"content":"     * Parses {@code userInput} into a {@code RoleContainsKeywordsPredicate}.","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"Hibeom0929"},"content":"    private RoleContainsKeywordsPredicate prepareRolePredicate(String userInput) {","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"Hibeom0929"},"content":"        return new RoleContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Hibeom0929":107,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, false, false);","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Hibeom0929":1,"-":19}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Hibeom0929"},"content":"import static seedu.address.logic.Messages.MESSAGE_FIX_OR_ADD_FORCE_FLAG;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_EMPTY;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COURSE_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.testutil.TypicalPersons.CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"reetmitra"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"        assertParseSuccess(","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"                PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"                + ROLE_DESC_BOB + ADDRESS_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"LargeCrowd"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_CLASSMATE)","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"        assertParseSuccess(","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_CLASSMATE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"reetmitra"},"content":"    @Disabled","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"ChillinRage"},"content":"        // multiple roles","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(parser, ROLE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"ChillinRage"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"ChillinRage"},"content":"        // multiple courses","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(parser, COURSE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"ChillinRage"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COURSE));","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"ChillinRage"},"content":"        // invalid role","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(parser, INVALID_ROLE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"ChillinRage"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, ADDRESS_DESC_EMPTY + validExpectedPersonString,","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"ChillinRage"},"content":"        // invalid course","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(parser, INVALID_COURSE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"ChillinRage"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COURSE));","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"ChillinRage"},"content":"        // invalid role","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ROLE_DESC,","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"ChillinRage"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, validExpectedPersonString + ADDRESS_DESC_EMPTY,","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"ChillinRage"},"content":"        // invalid course","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_COURSE_DESC,","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"ChillinRage"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COURSE));","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"Hibeom0929"},"content":"        Person expectedPersonWithNoTag \u003d new PersonBuilder(BOB).withTags().build();","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"Hibeom0929"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"Hibeom0929"},"content":"                           + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + ROLE_DESC_BOB + COURSE_DESC_BOB,","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"Hibeom0929"},"content":"                new AddCommand(expectedPersonWithNoTag));","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"Hibeom0929"},"content":"        // zero address","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"Hibeom0929"},"content":"        Person expectedPersonWithNoAddress \u003d new PersonBuilder(BOB).setAddressEmpty().build();","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"Hibeom0929"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"Hibeom0929"},"content":"                        + EMAIL_DESC_BOB + ROLE_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_CLASSMATE,","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"Hibeom0929"},"content":"                new AddCommand(expectedPersonWithNoAddress));","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"Hibeom0929"},"content":"        // zero phone","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"Hibeom0929"},"content":"        Person expectedPersonWithNoPhone \u003d new PersonBuilder(BOB).setPhoneEmpty().build();","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"Hibeom0929"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"Hibeom0929"},"content":"                         + ADDRESS_DESC_BOB + ROLE_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_CLASSMATE,","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"Hibeom0929"},"content":"                new AddCommand(expectedPersonWithNoPhone));","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"ChillinRage"},"content":"                VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"ChillinRage"},"content":"                + ROLE_DESC_BOB + ADDRESS_DESC_BOB + COURSE_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"ChillinRage"},"content":"        // missing email prefix","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"ChillinRage"},"content":"                + ROLE_DESC_BOB + ADDRESS_DESC_BOB + COURSE_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"ChillinRage"},"content":"        // missing role prefix","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"ChillinRage"},"content":"                + VALID_ROLE_BOB + ADDRESS_DESC_BOB + COURSE_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"ChillinRage"},"content":"        // missing course prefix","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"ChillinRage"},"content":"                + ROLE_DESC_BOB + ADDRESS_DESC_BOB + VALID_COURSE_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"ChillinRage"},"content":"                VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"ChillinRage"},"content":"                + VALID_ROLE_BOB + VALID_ADDRESS_BOB + VALID_COURSE_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":232,"author":{"gitId":"Hibeom0929"},"content":"        String phoneErrorMessage \u003d String.format(MESSAGE_FIX_OR_ADD_FORCE_FLAG, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_CLASSMATE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-26"},{"lineNumber":237,"author":{"gitId":"Hibeom0929"},"content":"                phoneErrorMessage);","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"Hibeom0929"},"content":"        String emailErrorMessage \u003d String.format(MESSAGE_FIX_OR_ADD_FORCE_FLAG, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ROLE_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_CLASSMATE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"Hibeom0929"},"content":"                emailErrorMessage);","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"ChillinRage"},"content":"        // invalid role","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ROLE_DESC","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_CLASSMATE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-26"},{"lineNumber":252,"author":{"gitId":"Hibeom0929"},"content":"                ParserUtil.MESSAGE_ROLE_CONSTRAINTS);","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_EMPTY + COURSE_DESC_BOB + TAG_DESC_CLASSMATE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-26"},{"lineNumber":259,"author":{"gitId":"ChillinRage"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"ChillinRage"},"content":"        // invalid course","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"Hibeom0929"},"content":"        String courseErrorMessage \u003d String.format(MESSAGE_FIX_OR_ADD_FORCE_FLAG, Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"ChillinRage"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"ChillinRage"},"content":"                parser,","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"ChillinRage"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_BOB + INVALID_COURSE_DESC + TAG_DESC_CLASSMATE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-26"},{"lineNumber":267,"author":{"gitId":"Hibeom0929"},"content":"                courseErrorMessage);","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":271,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_CLASSMATE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":274,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":275,"author":{"gitId":"LargeCrowd"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":276,"author":{"gitId":"LargeCrowd"},"content":"    public void parse_address_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":277,"author":{"gitId":"LargeCrowd"},"content":"        // role is professor, address is not provided","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"LargeCrowd"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ROLE_DESC_AMY","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"LargeCrowd"},"content":"                + COURSE_DESC_AMY, Address.MESSAGE_CONSTRAINTS_PROFESSOR);","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":281,"author":{"gitId":"LargeCrowd"},"content":"        // role is professor, empty address provided","lastModifiedDate":"2024-03-26"},{"lineNumber":282,"author":{"gitId":"LargeCrowd"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ROLE_DESC_AMY","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_EMPTY + COURSE_DESC_AMY, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":284,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":285,"author":{"gitId":"LargeCrowd"},"content":"        // role is not professor, empty address provided","lastModifiedDate":"2024-03-26"},{"lineNumber":286,"author":{"gitId":"LargeCrowd"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2024-03-27"},{"lineNumber":287,"author":{"gitId":"LargeCrowd"},"content":"                + ADDRESS_DESC_EMPTY + COURSE_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":288,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":289,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":290,"author":{"gitId":"LargeCrowd"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":291,"author":{"gitId":"LargeCrowd"},"content":"    public void parse_address_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":292,"author":{"gitId":"LargeCrowd"},"content":"        // role is professor, address is provided","lastModifiedDate":"2024-03-26"},{"lineNumber":293,"author":{"gitId":"LargeCrowd"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ROLE_DESC_AMY","lastModifiedDate":"2024-03-27"},{"lineNumber":294,"author":{"gitId":"LargeCrowd"},"content":"                        + ADDRESS_DESC_AMY + COURSE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-27"},{"lineNumber":295,"author":{"gitId":"LargeCrowd"},"content":"                new AddCommand(new PersonBuilder(AMY).build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":296,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":297,"author":{"gitId":"LargeCrowd"},"content":"        // role is not professor, address is provided","lastModifiedDate":"2024-03-26"},{"lineNumber":298,"author":{"gitId":"LargeCrowd"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2024-03-27"},{"lineNumber":299,"author":{"gitId":"LargeCrowd"},"content":"                        + ADDRESS_DESC_BOB + COURSE_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_CLASSMATE,","lastModifiedDate":"2024-03-27"},{"lineNumber":300,"author":{"gitId":"LargeCrowd"},"content":"                new AddCommand(new PersonBuilder(BOB).build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":301,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":302,"author":{"gitId":"LargeCrowd"},"content":"        // role is not professor, address is not provided","lastModifiedDate":"2024-03-27"},{"lineNumber":303,"author":{"gitId":"LargeCrowd"},"content":"        assertParseSuccess(parser, NAME_DESC_CHARLIE + PHONE_DESC_CHARLIE + EMAIL_DESC_CHARLIE","lastModifiedDate":"2024-03-27"},{"lineNumber":304,"author":{"gitId":"LargeCrowd"},"content":"                        + ROLE_DESC_CHARLIE + COURSE_DESC_CHARLIE + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-27"},{"lineNumber":305,"author":{"gitId":"Hibeom0929"},"content":"                new AddCommand(new PersonBuilder(CHARLIE).setAddressEmpty().build()));","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LargeCrowd":48,"Hibeom0929":25,"E0735389":3,"reetmitra":2,"-":144,"ChillinRage":85}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNCLEAR_COMMAND;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNEXPECTED_ARGUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.CourseContainsKeywordsPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(new CommandString(PersonUtil.getAddCommand(person)));","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"        assertTrue(parser.parseCommand(new CommandString(ClearCommand.COMMAND_WORD)) instanceof ClearCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(new CommandString(","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()));","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(new CommandString(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor)));","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"        assertTrue(parser.parseCommand(new CommandString(ExitCommand.COMMAND_WORD)) instanceof ExitCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(new CommandString(","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \"))));","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Hibeom0929"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords),","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"Hibeom0929"},"content":"                                     new CourseContainsKeywordsPredicate(keywords),","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"Hibeom0929"},"content":"                                     new RoleContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"        assertTrue(parser.parseCommand(new CommandString(HelpCommand.COMMAND_WORD)) instanceof HelpCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"        assertTrue(parser.parseCommand(new CommandString(ListCommand.COMMAND_WORD)) instanceof ListCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"            -\u003e parser.parseCommand(new CommandString(\"\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"                    new CommandString(\"unknownCommand\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"ChillinRage"},"content":"    public void parseCommand_unclearCommand_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, MESSAGE_UNCLEAR_COMMAND, () -\u003e parser.parseCommand(new CommandString(\"e\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"    public void parseCommand_unexpectedArgument_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_UNEXPECTED_ARGUMENT, ListCommand.COMMAND_WORD), ()","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"                -\u003e parser.parseCommand(new CommandString(\"list x\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_UNEXPECTED_ARGUMENT, ExitCommand.COMMAND_WORD), ()","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"E0735389"},"content":"                -\u003e parser.parseCommand(new CommandString(\"exit y\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_UNEXPECTED_ARGUMENT, ClearCommand.COMMAND_WORD), ()","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"                -\u003e parser.parseCommand(new CommandString(\"clear 1\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Hibeom0929":5,"E0735389":25,"-":84,"ChillinRage":5}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cString\u003e argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    private void assertPreamblePresent(ArgumentMultimap\u003cString\u003e argMultimap, String expectedPreamble) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    private void assertPreambleEmpty(ArgumentMultimap\u003cString\u003e argMultimap) {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap\u003cString\u003e#getValue(Prefix)}.","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    private void assertArgumentPresent(ArgumentMultimap\u003cString\u003e argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"    private void assertArgumentAbsent(ArgumentMultimap\u003cString\u003e argMultimap, Prefix prefix) {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cString\u003e argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cString\u003e argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cString\u003e argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap\u003cString\u003e is correctly reset","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cString\u003e argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"E0735389"},"content":"        ArgumentMultimap\u003cString\u003e argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"E0735389":12,"-":138}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"            Command command \u003d parser.parse(new CommandPart(new CommandString(userInput)));","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"            parser.parse(new CommandPart(new CommandString(userInput)));","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"            if (expectedMessage !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful\u0027ll.","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput) {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, userInput, null);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"E0735389":10,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/CommandPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"public class CommandPartTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    public void substring_validInput_returnsSubstring() {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"        CommandString commandString \u003d new CommandString(\"delete 0,1\");","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"        CommandPart wholeCommand \u003d new CommandPart(commandString);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        assertEquals(wholeCommand.toString(), \"delete 0,1\");","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        CommandPart arguments \u003d wholeCommand.getSubstring(7);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"        assertEquals(arguments.toString(), \"0,1\");","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        CommandPart firstArgument \u003d arguments.getSubstring(0, 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"        assertEquals(firstArgument.toString(), \"0\");","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        assertEquals(firstArgument.getStartIndex(), 7);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"    public void equals_sameString_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"        CommandString commandString \u003d new CommandString(\"delete 0,0\");","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        CommandPart wholeCommand \u003d new CommandPart(commandString);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        assertEquals(wholeCommand, wholeCommand);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        assertEquals(wholeCommand.getSubstring(0, 10), wholeCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        CommandPart firstArgument \u003d wholeCommand.getSubstring(7, 8); // the first \"0\"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        assertEquals(firstArgument.getSubstring(0, 1), firstArgument);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        assertEquals(firstArgument.getSubstring(0), firstArgument);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"        CommandPart secondArgument \u003d wholeCommand.getSubstring(9, 10); // the second \"0\"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        assertEquals(firstArgument, secondArgument);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"        assertEquals(firstArgument.getStartIndex(), 7);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        assertEquals(firstArgument.getEndIndex(), 8);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        assertEquals(secondArgument.getStartIndex(), 9);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"        CommandString commandString \u003d new CommandString(\"delete 0,0\");","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"        CommandPart wholeCommand \u003d new CommandPart(commandString);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"        assertNotEquals(wholeCommand, null);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"    public void hashcode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        assertEquals(new CommandPart(new CommandString(\"delete 0,0\")).hashCode(),","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"                new CommandPart(new CommandString(\"delete 0,0\")).hashCode());","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"    public void substring_invalidInput_throwsError() {","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"        CommandString commandString \u003d new CommandString(\"delete 0,1\");","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"        CommandPart wholeCommand \u003d new CommandPart(commandString);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"        assertThrows(Error.class, () -\u003e wholeCommand.getSubstring(11, 20));","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        assertThrows(Error.class, () -\u003e wholeCommand.getSubstring(11));","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"        assertThrows(Error.class, () -\u003e wholeCommand.getSubstring(1, 0));","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"        assertThrows(Error.class, () -\u003e wholeCommand.getSubstring(-1, 0));","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"        assertThrows(Error.class, () -\u003e wholeCommand.getSubstring(-1, -1));","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"    public void split_validInput_returnsResult() {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"        // iterate over test cases [\"a:b:c\", \":\", [\"a\", \"b\", \"c\"]], etc.","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"        // for each test case, create a CommandPart object and call split","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"        // compare the result with String.split result","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"        for (String[] testCase : new String[][] {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"            {\"a:b:c\", \":\"},","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"            {\":a:b:d\", \":\"},","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"            {\":a:b:e:\", \":\"}, // as with String.split, trailing empty parts are not included","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"            {\"a:::b\", \"::\"}, // overlapping match","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"            {\":a:::c\", \":\"},","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"            {\"abf\", \"\"}, // empty regex, split into individual characters","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"            {\"\", \"\"},","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"        }) {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"            CommandString commandString \u003d new CommandString(testCase[0]);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"            CommandPart part \u003d new CommandPart(commandString);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"            CommandPart[] result \u003d part.split(testCase[1]);","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"            String[] expected \u003d testCase[0].split(testCase[1]);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"E0735389"},"content":"            List\u003cString\u003e resultToString \u003d Arrays.stream(result).map(CommandPart::toString).collect(Collectors.toList());","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"            List\u003cString\u003e expectedList \u003d Arrays.asList(expected);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"            assertEquals(expectedList, resultToString,","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"                    \"Splitting \u0027\" + testCase[0] + \"\u0027 by \u0027\" + testCase[1] + \"\u0027 gives \" + resultToString","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"                    + \" (length \" + resultToString.size() + \") instead of \" + expectedList","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"E0735389"},"content":"                    + \" (length \" + expectedList.size() + \")\");","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"            for (CommandPart subpart : result) {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"                assertTrue(subpart.getCommandString() \u003d\u003d commandString); // test identity equality","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"E0735389":99}},{"path":"src/test/java/seedu/address/logic/parser/CommandStringTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"public class CommandStringTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"        CommandString commandString \u003d new CommandString(\"delete 0,0\");","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        assertNotEquals(commandString, null);","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    public void equals_sameCommandString_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"        CommandString commandString \u003d new CommandString(\"delete 0,0\");","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"        assertEquals(commandString, commandString);","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        assertEquals(commandString, new CommandString(\"delete 0,0\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public void hashcode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        CommandString commandString \u003d new CommandString(\"delete 0,0\");","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"        assertEquals(commandString.hashCode(), new CommandString(\"delete 0,0\").hashCode());","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"        assertNotEquals(commandString.hashCode(), new CommandString(\"delete 0,1\").hashCode());","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"E0735389":29}},{"path":"src/test/java/seedu/address/logic/parser/CopyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"reetmitra"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"reetmitra"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"reetmitra"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"reetmitra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"reetmitra"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"reetmitra"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"reetmitra"},"content":"public class CopyCommandParserTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"reetmitra"},"content":"    private CopyCommandParser parser \u003d new CopyCommandParser();","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"reetmitra"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"reetmitra"},"content":"    public void parse_validArgs_returnsCopyCommand() {","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"reetmitra"},"content":"        assertParseSuccess(parser, \"1\", new CopyCommand(Index.fromOneBased(1)));","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"reetmitra"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"reetmitra"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"reetmitra"},"content":"        assertParseFailure(parser, \"a\", String.format(\"Invalid command format! \\n%s\", CopyCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"reetmitra"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"reetmitra"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"reetmitra":23}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"a\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"E0735389":1,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_EMPTY;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    private static final String MESSAGE_INVALID_INDEX \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"            String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX_WITH_USAGE, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC); // invalid phone","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC); // invalid email","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"LargeCrowd"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_CLASSMATE + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"LargeCrowd"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_CLASSMATE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"LargeCrowd"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_CLASSMATE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":101,"author":{"gitId":"LargeCrowd"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_CLASSMATE","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"E0735389"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(Optional.of(VALID_ADDRESS_AMY))","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"LargeCrowd"},"content":"                .withTags(VALID_TAG_CLASSMATE, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"E0735389"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(Optional.of(VALID_ADDRESS_AMY)).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"E0735389"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"E0735389"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"E0735389"},"content":"        // empty address","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"E0735389"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_EMPTY;","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"E0735389"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(Optional.empty()).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"LargeCrowd"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"E0735389"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"E0735389"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"E0735389"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"LargeCrowd":8,"E0735389":26,"-":172}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.CourseContainsKeywordsPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\", \"CS2103T\", \"TA\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"                                new CourseContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\", \"CS2103T\", \"TA\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"                                new RoleContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\", \"CS2103T\", \"TA\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"        assertParseSuccess(parser, \"Alice Bob CS2103T TA\", expectedFindCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t  \\n CS2103T \\n TA\", expectedFindCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Hibeom0929":7,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    private static final String INVALID_TAG \u003d \"\";","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(buildCommandPart(\"10 a\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"            -\u003e ParserUtil.parseIndex(buildCommandPart(Long.toString(Integer.MAX_VALUE + 1))));","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(buildCommandPart(\"1\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(buildCommandPart(\"  1  \")));","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"    public void parseIndices_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(buildCommandPart(\"1, 2, c\"), \",\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"    public void parseIndices_duplicateIndex_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"        String args \u003d \"1, 4, 5, 1, 2\";","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(buildCommandPart(args), \",\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"    public void parseIndices_validArgsWhiteSpaceSep_success() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"        List\u003cIndex\u003e actualList \u003d ParserUtil.parseIndices(buildCommandPart(\"1 5 3\"), \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"        List\u003cIndex\u003e expectedList \u003d Arrays.asList(","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"            Index.fromOneBased(1),","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"            Index.fromOneBased(5),","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"            Index.fromOneBased(3)","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"        );","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"    public void parseIndices_validArgsCommaSep_success() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"        List\u003cIndex\u003e actualList \u003d ParserUtil.parseIndices(buildCommandPart(\"10,3 , 2 \"), \",\");","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"        List\u003cIndex\u003e expectedList \u003d Arrays.asList(","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"            Index.fromOneBased(10),","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"            Index.fromOneBased(3),","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"            Index.fromOneBased(2)","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"        );","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((CommandPart) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedName, ParserUtil.parseName(buildCommandPart(VALID_NAME)));","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedName, ParserUtil.parseName(buildCommandPart(nameWithWhitespace)));","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((CommandPart) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(buildCommandPart(INVALID_PHONE)));","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(buildCommandPart(VALID_PHONE)));","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(buildCommandPart(phoneWithWhitespace)));","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((CommandPart) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(buildCommandPart(INVALID_ADDRESS)));","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(buildCommandPart(VALID_ADDRESS)));","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(buildCommandPart(addressWithWhitespace)));","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((CommandPart) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":167,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(buildCommandPart(INVALID_EMAIL)));","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(buildCommandPart(VALID_EMAIL)));","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(buildCommandPart(emailWithWhitespace)));","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag((CommandPart) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(buildCommandPart(INVALID_TAG)));","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(buildCommandPart(VALID_TAG_1)));","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"E0735389"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(buildCommandPart(tagWithWhitespace)));","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":213,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"E0735389"},"content":"                        buildCommandPart(VALID_TAG_1), buildCommandPart(INVALID_TAG))));","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"E0735389"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"E0735389"},"content":"                    buildCommandPart(VALID_TAG_1), buildCommandPart(VALID_TAG_2)));","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"E0735389"},"content":"    public void parseRole_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRole(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"E0735389"},"content":"    public void parseRole_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(buildCommandPart(\"\"))); // empty string","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(buildCommandPart(\" \"))); // spaces only","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(buildCommandPart(\"STUDENT123\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"E0735389"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(buildCommandPart(\"STUDENT-\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":245,"author":{"gitId":"E0735389"},"content":"    public void parseRole_validValue_returnsRole() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":246,"author":{"gitId":"E0735389"},"content":"        assertEquals(ParserUtil.parseRole(buildCommandPart(\"STUDENT \")), Role.STUDENT);","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"E0735389"},"content":"        assertEquals(ParserUtil.parseRole(buildCommandPart(\" STUDENT\")), Role.STUDENT);","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"E0735389"},"content":"        assertEquals(ParserUtil.parseRole(buildCommandPart(\"student\")), Role.STUDENT);","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"E0735389"},"content":"        assertEquals(ParserUtil.parseRole(buildCommandPart(\"student\")), Role.STUDENT);","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"E0735389"},"content":"        assertEquals(ParserUtil.parseRole(buildCommandPart(\" s \")), Role.STUDENT);","lastModifiedDate":"2024-04-01"},{"lineNumber":251,"author":{"gitId":"E0735389"},"content":"        assertEquals(ParserUtil.parseRole(buildCommandPart(\"t\")), Role.TA);","lastModifiedDate":"2024-04-01"},{"lineNumber":252,"author":{"gitId":"E0735389"},"content":"        assertEquals(ParserUtil.parseRole(buildCommandPart(\"pro\")), Role.PROFESSOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":253,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":254,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":255,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":256,"author":{"gitId":"ChillinRage"},"content":"    public void filterByPrefix_emptyPrefix_returnsFullList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":257,"author":{"gitId":"ChillinRage"},"content":"        String[] words \u003d {\"Hello\", \"World\", \"Bye\", \"Life\"};","lastModifiedDate":"2024-03-25"},{"lineNumber":258,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e actualList \u003d ParserUtil.filterByPrefix(\"\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":259,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e expectedList \u003d Arrays.asList(words);","lastModifiedDate":"2024-03-25"},{"lineNumber":260,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":261,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":262,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":263,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":264,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":265,"author":{"gitId":"ChillinRage"},"content":"    public void filterByPrefix_subStringPrefix_returnsOneElement() {","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"ChillinRage"},"content":"        String[] words \u003d {\"Hello\", \"World\", \"Bye\", \"Life\"};","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e actualList \u003d ParserUtil.filterByPrefix(\"W\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e expectedList \u003d Arrays.asList(\"World\");","lastModifiedDate":"2024-03-25"},{"lineNumber":270,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"Hell\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":273,"author":{"gitId":"ChillinRage"},"content":"        expectedList \u003d Arrays.asList(\"Hello\");","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":275,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"Li\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"ChillinRage"},"content":"        expectedList \u003d Arrays.asList(\"Life\");","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":279,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":280,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"ChillinRage"},"content":"    public void filterByPrefix_fullStringPrefix_returnsOneElement() {","lastModifiedDate":"2024-03-25"},{"lineNumber":283,"author":{"gitId":"ChillinRage"},"content":"        String[] words \u003d {\"Hello\", \"World\", \"Bye\", \"Life\"};","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":285,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e actualList \u003d ParserUtil.filterByPrefix(\"World\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":286,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e expectedList \u003d Arrays.asList(\"World\");","lastModifiedDate":"2024-03-25"},{"lineNumber":287,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":288,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":289,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"Hello\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":290,"author":{"gitId":"ChillinRage"},"content":"        expectedList \u003d Arrays.asList(\"Hello\");","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":292,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"Life\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":294,"author":{"gitId":"ChillinRage"},"content":"        expectedList \u003d Arrays.asList(\"Life\");","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":296,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":297,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"ChillinRage"},"content":"    public void filterByPrefix_noMatchPrefix_returnsEmptyList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":300,"author":{"gitId":"ChillinRage"},"content":"        String[] words \u003d {\"Hel lo\", \"World\", \"Bye\", \"Life\"};","lastModifiedDate":"2024-03-25"},{"lineNumber":301,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e expectedList \u003d Arrays.asList(); // Empty list.","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"ChillinRage"},"content":"        // Prefix does not match any words.","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e actualList \u003d ParserUtil.filterByPrefix(\"Bon\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"ChillinRage"},"content":"        // Prefix must be a substring.","lastModifiedDate":"2024-03-25"},{"lineNumber":308,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"Bye Bye\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":309,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":311,"author":{"gitId":"ChillinRage"},"content":"        // Strings are case sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":312,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"LiF\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":313,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":314,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":315,"author":{"gitId":"ChillinRage"},"content":"        // Strings are space sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":316,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\" Wor\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":317,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":318,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":319,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"Hello\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":320,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":321,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":322,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":323,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":324,"author":{"gitId":"ChillinRage"},"content":"    public void filterByPrefix_commonPrefix_returnsMultipleElements() {","lastModifiedDate":"2024-03-25"},{"lineNumber":325,"author":{"gitId":"ChillinRage"},"content":"        String[] words \u003d {\"pointer\", \"Add\", \"Attack\", \"point\", \"Addition\", \"point Forward\"};","lastModifiedDate":"2024-03-25"},{"lineNumber":326,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":327,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e actualList \u003d ParserUtil.filterByPrefix(\"A\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":328,"author":{"gitId":"ChillinRage"},"content":"        List\u003cString\u003e expectedList \u003d Arrays.asList(\"Add\", \"Attack\", \"Addition\");","lastModifiedDate":"2024-03-25"},{"lineNumber":329,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":330,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":331,"author":{"gitId":"ChillinRage"},"content":"        actualList \u003d ParserUtil.filterByPrefix(\"point\", words);","lastModifiedDate":"2024-03-25"},{"lineNumber":332,"author":{"gitId":"ChillinRage"},"content":"        expectedList \u003d Arrays.asList(\"pointer\", \"point\", \"point Forward\");","lastModifiedDate":"2024-03-25"},{"lineNumber":333,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2024-03-25"},{"lineNumber":334,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":335,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":336,"author":{"gitId":"E0735389"},"content":"    private CommandPart buildCommandPart(String s) {","lastModifiedDate":"2024-03-27"},{"lineNumber":337,"author":{"gitId":"E0735389"},"content":"        return new CommandPart(new CommandString(s));","lastModifiedDate":"2024-03-27"},{"lineNumber":338,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"E0735389":61,"-":168,"ChillinRage":110}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"LargeCrowd"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_CLASSMATE)","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"LargeCrowd"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_CLASSMATE)","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"LargeCrowd":3,"-":105}},{"path":"src/test/java/seedu/address/model/CommandHistoryModelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.logic.parser.CommandString;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"public class CommandHistoryModelTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"    private static final CommandString EMPTY_STRING \u003d new CommandString(\"\");","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"    private final CommandHistoryModel commandHistoryModel \u003d new CommandHistoryModel();","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"    public void emptyCommandHistory_returnTestString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"        CommandString testString1 \u003d new CommandString(\"Test1\");","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"        CommandString testString2 \u003d new CommandString(\"Test2\");","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"        CommandString testString3 \u003d new CommandString(\"Test3\");","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(testString1, commandHistoryModel.getNextCommandHistory(testString1));","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(testString2, commandHistoryModel.getNextCommandHistory(testString2));","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(testString3, commandHistoryModel.getPreviousCommandHistory(testString3));","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(testString3, commandHistoryModel.getPreviousCommandHistory(testString3));","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(testString1, commandHistoryModel.getPreviousCommandHistory(testString1));","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"    public void consecutiveGetNext_returnByNewest() {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"        CommandString newestCommand \u003d new CommandString(\"newest\");","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"        CommandString newerCommand \u003d new CommandString(\"newer\");","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"        CommandString newCommand \u003d new CommandString(\"new\");","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(newCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(newerCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(newestCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(newestCommand, commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(newerCommand, commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(newCommand, commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"    public void consecutiveGetPrevious_returnByOldest() {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        CommandString oldestCommand \u003d new CommandString(\"Oldest\");","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        CommandString olderCommand \u003d new CommandString(\"Older\");","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        CommandString oldCommand \u003d new CommandString(\"Old\");","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(EMPTY_STRING); // Start point of the assert below.","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(oldestCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(olderCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(oldCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"        // Go to start point.","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.getPreviousCommandHistory(oldCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.getPreviousCommandHistory(olderCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.getPreviousCommandHistory(oldestCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(oldestCommand, commandHistoryModel.getNextCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(olderCommand, commandHistoryModel.getNextCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(oldCommand, commandHistoryModel.getNextCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"    public void currentCommandSaved() {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"        CommandString currentString \u003d new CommandString(\"current\");","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"        CommandString savedString \u003d new CommandString(\"saved\");","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"        CommandString unsavedString \u003d new CommandString(\"saved\");","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(unsavedString);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.getPreviousCommandHistory(currentString);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(currentString, commandHistoryModel.getNextCommandHistory(savedString));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(savedString, commandHistoryModel.getPreviousCommandHistory(savedString));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"    public void resetTempOnAddCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"        CommandString helloString \u003d new CommandString(\"hello\");","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"        CommandString worldString \u003d new CommandString(\"world\");","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"        CommandString resetString \u003d new CommandString(\"RESET\");","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(helloString);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(worldString);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING); // Change current command to \"bye\".","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING); // Change \"world\" to \"earth\".","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"        commandHistoryModel.addCommand(resetString);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(resetString, commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(worldString, commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(helloString, commandHistoryModel.getPreviousCommandHistory(EMPTY_STRING));","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ChillinRage":93}},{"path":"src/test/java/seedu/address/model/person/CourseContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hibeom0929"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Hibeom0929"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Hibeom0929"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Hibeom0929"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Hibeom0929"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Hibeom0929"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Hibeom0929"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"public class CourseContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Hibeom0929"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Hibeom0929"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate firstPredicate \u003d new CourseContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"                new CourseContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"                new CourseContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Hibeom0929"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Hibeom0929"},"content":"    public void test_courseContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Hibeom0929"},"content":"        // One keyword","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Hibeom0929"},"content":"                new CourseContainsKeywordsPredicate(Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCourse(\"CS2103T\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Hibeom0929"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"CS2109\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCourse(\"CS2103T\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Hibeom0929"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"cS2103t\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCourse(\"CS2103T\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Hibeom0929"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Hibeom0929"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate predicate \u003d new CourseContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCourse(\"CS2103T\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Hibeom0929"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"CS2109\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCourse(\"CS2103T\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"Hibeom0929"},"content":"        // Keywords match phone, email and address, but does not match course","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCourse(\"CS2103T\").withPhone(\"12345\")","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"Hibeom0929"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Hibeom0929"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Hibeom0929"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"Hibeom0929"},"content":"        CourseContainsKeywordsPredicate predicate \u003d new CourseContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Hibeom0929"},"content":"        String expected \u003d CourseContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"Hibeom0929"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Hibeom0929"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Hibeom0929":84}},{"path":"src/test/java/seedu/address/model/person/CourseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"public class CourseTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Course(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    public void constructor_invalidCourse_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"        String invalidCourse \u003d \"12CS20S\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(invalidCourse));","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"    public void isValidCourse() {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        // null course","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"        assertThrows(NullPointerException.class, () -\u003e Course.isValidCourse(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"        // blank course","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"\")); // empty string","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\" \")); // spaces only","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"        // missing parts","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"1234\")); // missing alphabet prefix","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"CS\")); // missing digits","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"        // invalid courses","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"C1234\")); // at least 2 alphabet prefix","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"CS123\")); // cannot have less than 4 digits","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"CS12345\")); // cannot have more than 4 digits","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"CS1231SS\")); // at most 1 alphabet postfix","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"CS123S1\")); // no mixing of digits and alphabets","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"CS-1234\")); // no invalid characters \"-\"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(Course.isValidCourse(\"CS12 34\")); // no whitespaces in-between characters","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        // valid courses","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"CS1234\")); // no alphabet postfix","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"CS1234S\")); // 1 alphabet postfix","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"CS1111\")); // digits all equal","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"CSA1234\")); // more than 2 prefix alphabets","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"  CS1234  \")); // leading and trailing whitespaces","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"cS1234s\")); // small letters","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"CS9180\")); // Boundary digits","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(Course.isValidCourse(\"  CsA8970s    \")); // mixed of above properties","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"    public void equal() {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        Course course \u003d new Course(\"CS2103T\");","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(course.equals(new Course(\"CS2103T\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(course.equals(course));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(course.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(course.equals(\"CS2103T\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(course.equals(new Course(\"CS2103\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChillinRage":74}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"Hibeom0929"},"content":"        // same name different in case -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(name.equals(new Name(\"vaLId nAme\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Hibeom0929":5,"-":58}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"LargeCrowd"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_CLASSMATE).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"Hibeom0929"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"LargeCrowd"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_CLASSMATE).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"reetmitra"},"content":"        String expected \u003d Person.class.getCanonicalName()","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"reetmitra"},"content":"            + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"reetmitra"},"content":"            + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"reetmitra"},"content":"            + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"reetmitra"},"content":"            + \", role\u003d\" + ALICE.getRole()","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"reetmitra"},"content":"            + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"reetmitra"},"content":"            + \", course\u003d\" + ALICE.getCourse()","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"reetmitra"},"content":"            + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"LargeCrowd":3,"Hibeom0929":2,"reetmitra":8,"-":87}},{"path":"src/test/java/seedu/address/model/person/RoleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hibeom0929"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"Hibeom0929"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"Hibeom0929"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"Hibeom0929"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Hibeom0929"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Hibeom0929"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Hibeom0929"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Hibeom0929"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Hibeom0929"},"content":"public class RoleContainsKeywordsPredicateTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Hibeom0929"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Hibeom0929"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate firstPredicate \u003d new RoleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"                new RoleContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"Hibeom0929"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Hibeom0929"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Hibeom0929"},"content":"                new RoleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Hibeom0929"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Hibeom0929"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Hibeom0929"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Hibeom0929"},"content":"    public void test_roleContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Hibeom0929"},"content":"        // One keyword","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Hibeom0929"},"content":"                new RoleContainsKeywordsPredicate(Collections.singletonList(\"TA\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"TA\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"Hibeom0929"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"PROFESSOR\", \"TA\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"TA\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"Hibeom0929"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"student\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"Hibeom0929"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"STUDENT\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"Hibeom0929"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"Hibeom0929"},"content":"        // Zero keywords","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate predicate \u003d new RoleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"STUDENT\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"Hibeom0929"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"student\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"TA\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"Hibeom0929"},"content":"        // Keywords match phone, email and address, but does not match role","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"Hibeom0929"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"Hibeom0929"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"TA\").withPhone(\"12345\")","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"Hibeom0929"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"Hibeom0929"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"Hibeom0929"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"Hibeom0929"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"Hibeom0929"},"content":"        RoleContainsKeywordsPredicate predicate \u003d new RoleContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"Hibeom0929"},"content":"        String expected \u003d RoleContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"Hibeom0929"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"Hibeom0929"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Hibeom0929":84}},{"path":"src/test/java/seedu/address/model/person/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"public class RoleTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    public void valueOf_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.valueOf(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    public void valueOf_invalidRole_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        String invalidRole \u003d \"\";","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Role.valueOf(invalidRole));","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    public void valueOf_validRole_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"        String validRole \u003d \"STUDENT\";","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"        assertEquals(Role.valueOf(validRole), Role.STUDENT);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    public void isValidRole() {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        // null role","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRole(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        // invalid roles","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        assertFalse(Role.isValidRole(\"\")); // empty string","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        assertFalse(Role.isValidRole(\" \")); // spaces only","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        assertFalse(Role.isValidRole(\"professor\")); // non-uppercase","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"        assertFalse(Role.isValidRole(\"STUDENT \")); // spaces at the end","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        assertFalse(Role.isValidRole(\" STUDENT\")); // spaces at the front","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"        assertFalse(Role.isValidRole(\"STUDENT123\")); // numbers within characters","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        assertFalse(Role.isValidRole(\"STUDENT-\")); // special characters","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        // valid roles","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"        assertTrue(Role.isValidRole(\"STUDENT\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        assertTrue(Role.isValidRole(\"PROFESSOR\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"        assertTrue(Role.isValidRole(\"TA\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    public void equals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"        Role role \u003d Role.STUDENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        assertTrue(role.equals(Role.STUDENT));","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        assertTrue(role.equals(role));","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"        assertFalse(role.equals(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        assertFalse(role.equals(5.0f));","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"        assertFalse(role.equals(Role.PROFESSOR));","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"    public void hashcode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"        Role role \u003d Role.STUDENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"        // same values -\u003e returns same hash code","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"        assertEquals(role.hashCode(), Role.STUDENT.hashCode());","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"        // different values -\u003e returns different hash code","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"        assertNotEquals(role.hashCode(), Role.PROFESSOR.hashCode());","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"E0735389":80}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"LargeCrowd"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_CLASSMATE)","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"LargeCrowd"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_CLASSMATE)","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"LargeCrowd":3,"-":172}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LargeCrowd"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"LargeCrowd"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"LargeCrowd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"LargeCrowd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"LargeCrowd"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"LargeCrowd"},"content":"    private SampleDataUtil sample \u003d new SampleDataUtil();","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"LargeCrowd"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"LargeCrowd"},"content":"    public void testGetSamplePersonsNotEmpty() {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"LargeCrowd"},"content":"        Person[] samplePersons \u003d sample.getSamplePersons();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"LargeCrowd"},"content":"        assertNotNull(samplePersons);","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"LargeCrowd"},"content":"        assertTrue(samplePersons.length \u003e 0);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"LargeCrowd"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"LargeCrowd"},"content":"    public void testGetSamplePersonsProperties() {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"LargeCrowd"},"content":"        Person[] samplePersons \u003d sample.getSamplePersons();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"LargeCrowd"},"content":"        for (Person samplePerson : samplePersons) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"LargeCrowd"},"content":"            assertNotNull(samplePerson.getName());","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"LargeCrowd"},"content":"            assertNotNull(samplePerson.getPhone());","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"LargeCrowd"},"content":"            assertNotNull(samplePerson.getEmail());","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"LargeCrowd"},"content":"            assertNotNull(samplePerson.getRole());","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"LargeCrowd"},"content":"            assertNotNull(samplePerson.getAddress());","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"LargeCrowd"},"content":"            assertNotNull(samplePerson.getCourse());","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"LargeCrowd"},"content":"            assertNotNull(samplePerson.getTags());","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"LargeCrowd"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"LargeCrowd"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"LargeCrowd"},"content":"    public void testGetSampleAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"LargeCrowd"},"content":"        assertNotNull(sample.getSampleAddressBook());","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"LargeCrowd"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"LargeCrowd"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"LargeCrowd":40}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Hibeom0929"},"content":"    private static final String INVALID_ROLE \u003d \"sTuDennt\";","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    private static final String INVALID_TAG \u003d \"\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().get().toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Hibeom0929"},"content":"    private static final String VALID_ROLE \u003d BENSON.getRole().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"    private static final String VALID_COURSE \u003d BENSON.getCourse().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"            null, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"            VALID_ADDRESS, VALID_COURSE, VALID_TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"            VALID_NAME, VALID_PHONE, null, VALID_ROLE,","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"            VALID_ADDRESS, VALID_COURSE, VALID_TAGS);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Hibeom0929"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"            VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ROLE,","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"            VALID_ADDRESS, VALID_COURSE, VALID_TAGS);","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Hibeom0929"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Hibeom0929"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"            VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"            VALID_ADDRESS, VALID_COURSE, VALID_TAGS);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Hibeom0929"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"    public void toModelType_nullCourse_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"            VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"            VALID_ADDRESS, null, VALID_TAGS);","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Course.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"            VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"            INVALID_ADDRESS, VALID_COURSE, VALID_TAGS);","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"ChillinRage"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"            VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ChillinRage"},"content":"            VALID_ADDRESS, VALID_COURSE, invalidTags);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Hibeom0929":7,"E0735389":2,"-":73,"ChillinRage":25}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"reetmitra"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"reetmitra"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"reetmitra"},"content":"    @Disabled","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"reetmitra"},"content":"    @Disabled","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"reetmitra":4,"-":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"nuscontacts.json\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"E0735389":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"        descriptor.setRole(person.getRole());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"        descriptor.setCourse(person.getCourse());","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        descriptor.setPhone(Optional.of(new Phone(phone)));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"     * Sets the {@code Course} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"    public EditPersonDescriptorBuilder withRole(String role) {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"        descriptor.setRole(Role.valueOf(role));","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"    public EditPersonDescriptorBuilder withAddress(Optional\u003cString\u003e address) {","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"        descriptor.setAddress(address.map(Address::new));","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"     * Sets the {@code Course} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"    public EditPersonDescriptorBuilder withCourse(String course) {","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"        descriptor.setCourse(new Course(course));","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"E0735389":5,"-":87,"ChillinRage":16}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"import seedu.address.model.person.Course;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Hibeom0929"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"Hibeom0929"},"content":"    public static final String DEFAULT_ROLE \u003d \"STUDENT\";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"    public static final String DEFAULT_COURSE \u003d \"CS2103T\";","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    private Optional\u003cPhone\u003e phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"Hibeom0929"},"content":"    private Role role;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"LargeCrowd"},"content":"    private Optional\u003cAddress\u003e address;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"    private Course course;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        phone \u003d Optional.of(new Phone(DEFAULT_PHONE));","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"LargeCrowd"},"content":"        role \u003d Role.valueOf(DEFAULT_ROLE);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"LargeCrowd"},"content":"        address \u003d Optional.of(new Address(DEFAULT_ADDRESS));","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        course \u003d new Course(DEFAULT_COURSE);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"Hibeom0929"},"content":"        role \u003d personToCopy.getRole();","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        course \u003d personToCopy.getCourse();","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"LargeCrowd"},"content":"        this.address \u003d Optional.of(new Address(address));","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"Hibeom0929"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"Hibeom0929"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building empty.","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"Hibeom0929"},"content":"    public PersonBuilder setAddressEmpty() {","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"Hibeom0929"},"content":"        this.address \u003d Optional.empty();","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"        this.phone \u003d Optional.of(new Phone(phone));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"Hibeom0929"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"Hibeom0929"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building empty.","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"Hibeom0929"},"content":"    public PersonBuilder setPhoneEmpty() {","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"Hibeom0929"},"content":"        this.phone \u003d Optional.empty();","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"Hibeom0929"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"Hibeom0929"},"content":"     * Sets the {@code Role} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"Hibeom0929"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"Hibeom0929"},"content":"    public PersonBuilder withRole(String role) {","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"LargeCrowd"},"content":"        this.role \u003d Role.valueOf(role);","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"Hibeom0929"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"Hibeom0929"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"Hibeom0929"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"ChillinRage"},"content":"     * Sets the {@code Course} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"ChillinRage"},"content":"    public PersonBuilder withCourse(String course) {","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"ChillinRage"},"content":"        this.course \u003d new Course(course);","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"ChillinRage"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":136,"author":{"gitId":"ChillinRage"},"content":"        return new Person(name, phone, email, role, address, course, tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"LargeCrowd":5,"Hibeom0929":21,"E0735389":4,"-":95,"ChillinRage":14}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        sb.append(person.getPhone().map(x -\u003e PREFIX_PHONE + x.value + \" \").orElse(\"\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        sb.append(PREFIX_ROLE + person.getRole().name() + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"        sb.append(person.getAddress().map(x -\u003e PREFIX_ADDRESS + x.value + \" \").orElse(\"\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        sb.append(PREFIX_COURSE + person.getCourse().value + \" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE)","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"                .append(phone.map(x -\u003e x.value).orElse(\"\")).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"        descriptor.getRole().ifPresent(role -\u003e sb.append(PREFIX_ROLE).append(role.name()).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS)","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"                .append(address.map(x -\u003e x.value).orElse(\"\")).append(\" \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        descriptor.getCourse().ifPresent(course -\u003e sb.append(PREFIX_COURSE).append(course.value).append(\" \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(sb.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"E0735389":8,"-":58,"ChillinRage":7}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_CHARLIE;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"LargeCrowd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CLASSMATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"            .withPhone(\"94351253\").withCourse(\"IS2218\").withRole(\"TA\")","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"IS2218\").withRole(\"STUDENT\")","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"HSI1000\").withRole(\"PROFESSOR\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"CS2030S\").withRole(\"TA\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"CS2040S\").withRole(\"TA\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"MDG5102\").withRole(\"PROFESSOR\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"ME2115\").withRole(\"STUDENT\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"CS2103T\").withRole(\"STUDENT\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"            .withCourse(\"CS2103T\").withRole(\"TA\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"LargeCrowd"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"LargeCrowd"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"LargeCrowd"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"LargeCrowd"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"LargeCrowd"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"LargeCrowd"},"content":"            .withCourse(VALID_COURSE_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"LargeCrowd"},"content":"            .withRole(VALID_ROLE_AMY)","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"LargeCrowd"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"LargeCrowd"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"LargeCrowd"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"LargeCrowd"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"LargeCrowd"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"LargeCrowd"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"LargeCrowd"},"content":"            .withCourse(VALID_COURSE_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"LargeCrowd"},"content":"            .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"LargeCrowd"},"content":"            .withTags(VALID_TAG_CLASSMATE, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"LargeCrowd"},"content":"            .build();","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"LargeCrowd"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"LargeCrowd"},"content":"    public static final Person CHARLIE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"LargeCrowd"},"content":"            .withName(VALID_NAME_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"LargeCrowd"},"content":"            .withPhone(VALID_PHONE_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"LargeCrowd"},"content":"            .withEmail(VALID_EMAIL_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"LargeCrowd"},"content":"            .withCourse(VALID_COURSE_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"LargeCrowd"},"content":"            .withRole(VALID_ROLE_CHARLIE)","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"LargeCrowd"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"LargeCrowd":31,"-":63,"ChillinRage":20}},{"path":"src/test/java/seedu/address/ui/HelpWindowTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"import org.testfx.api.FxRobot;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"import org.testfx.framework.junit5.ApplicationExtension;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"import org.testfx.framework.junit5.Start;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"import org.testfx.util.WaitForAsyncUtils;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"@ExtendWith(ApplicationExtension.class)","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"public class HelpWindowTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"    @Start","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        helpWindow \u003d new HelpWindow(stage);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"        helpWindow.show();","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    public void closeOnEscapeKeyPress(FxRobot robot) throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"        Platform.runLater(() -\u003e helpWindow.focus());","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"        WaitForAsyncUtils.waitForFxEvents(); // Wait for help window to be focused.","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"        robot.press(KeyCode.ESCAPE);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"        WaitForAsyncUtils.waitForFxEvents(); // Wait for any new events in javaFx to be completed.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"        assertFalse(helpWindow.isShowing());","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"    public void remainOpenOnNonEscapeKeyPress(FxRobot robot) throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        robot.press(KeyCode.A);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"        robot.press(KeyCode.SOFTKEY_0);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"        robot.press(KeyCode.L);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"        robot.press(KeyCode.BACK_SPACE);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        robot.press(KeyCode.DELETE);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        WaitForAsyncUtils.waitForFxEvents(); // Wait for any new events in javaFx to be completed.","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(helpWindow.isShowing());","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"    public void focusCall() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"        Platform.runLater(() -\u003e helpWindow.focus());","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"        WaitForAsyncUtils.waitForFxEvents(); // Wait for any new events in javaFx to be completed.","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"        assertTrue(helpWindow.isShowing());","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ChillinRage":56}}]
