[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T08-2/tp/actions)","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"## Strack.io","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"* `Strack.io` is a desktop application for **managing customer information and orders**.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"  * For homemade food sellers to keep track of customer orders.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"  * Keep records of customer information for easy reference.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"* `Strack.io` can help homemade food sellers **organize customer information and orders** so that they know **what** to bake, **how much** to bake and **where to deliver** the order to. This information management tool aims to be **more efficient to use than paper-work or general-purpose excel sheets**. We also aim to **reduce chances of mistakes** such as wrong delivery address, forgetting an order or sending repeated orders.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"* Feature list:","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"  * Add new customer contact information","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"  * Edit contact information","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"  * Search contact based on keywords","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"  * Create orders, which will be tagged to the respective customer","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"  * Edit order information","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"  * List out all active orders","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"  * Delete order when delivery is done","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"* It is named `Strack.io` because it was created to help keep track of snack orders.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"* For the detailed documentation of this project, see the **[Strack.io Product Website](https://ay2324s2-cs2103t-t08-2.github.io/tp/)**.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"**Acknowledgements**","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"-":4,"bertrandong":21}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"[[Project Website](https://ay2324s2-cs2103t-t08-2.github.io/tp/)]","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"## Strack.io","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"### Nigel Lim","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"\u003cimg src\u003d\"images/nigel27022001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"[[github](https://github.com/nigel27022001)]","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"[[portfolio](team/nigel.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"chonghaoen"},"content":"* Role: Team Lead","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"* Responsibilities: Scheduling and tracking, Deliverables and deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"### Joel Wang","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Joelwang22"},"content":"\u003cimg src\u003d\"images/joelwang22.png.jpg\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"chonghaoen"},"content":"[[github](http://github.com/joelwang22)]","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"chonghaoen"},"content":"[[portfolio](team/joel.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"chonghaoen"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"chonghaoen"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"chonghaoen"},"content":"### Isaac Chong","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"chonghaoen"},"content":"\u003cimg src\u003d\"images/chonghaoen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chonghaoen"},"content":"[[github](http://github.com/chonghaoen)] [[portfolio](team/isaac.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"chonghaoen"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"chonghaoen"},"content":"### Yang Yibai","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"0-yibai"},"content":"\u003cimg src\u003d\"images/0-yibai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"chonghaoen"},"content":"[[github](http://github.com/0-yibai)]","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"chonghaoen"},"content":"[[portfolio](team/yibai.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"chonghaoen"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"chonghaoen"},"content":"### Bertrand Ong","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"\u003cimg src\u003d\"images/bertrandong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"chonghaoen"},"content":"[[github](http://github.com/bertrandong)]","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"chonghaoen"},"content":"[[portfolio](team/bertrand.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"chonghaoen"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nigel27022001":1,"chonghaoen":24,"0-yibai":1,"Joelwang22":1,"-":29,"bertrandong":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"nigel27022001"},"content":"* Home-Based Food Business Owners who sell their products online","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"nigel27022001"},"content":"* has a need to manage a significant number of customer contacts","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"nigel27022001"},"content":"* has a need to track the food order to the contact","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"nigel27022001"},"content":"**Value proposition**: The address book can help homemade food sellers organize customer information and orders","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"nigel27022001"},"content":"so that they know what to bake, how much to bake and where to deliver the order to. This information management","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"nigel27022001"},"content":"tool aims to be more efficient to use than paper-work or general-purpose excel sheets. We also aim to reduce","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"nigel27022001"},"content":"chances of mistakes such as wrong delivery address, forgetting an order or sending repeated orders.","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"| Priority | As a …​                    | I want to …​                                                                | So that I can…​                                                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"0-yibai"},"content":"|----------|----------------------------|-----------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":286,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | new user                   | see a list of all main functionalities                                      | know what I can do with the app                                                                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":287,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | new user                   | check the explanation of all functions                                      | know what the commands mean                                                                                |","lastModifiedDate":"2024-03-06"},{"lineNumber":288,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | second time user           | retrieve data I entered last time                                           |                                                                                                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":289,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | forgetful user             | see usage instructions                                                      | refer to instructions when I forget how to use the App                                                     |","lastModifiedDate":"2024-03-06"},{"lineNumber":290,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | seller                     | add new contacts into the program                                           | keep information of customers                                                                              |","lastModifiedDate":"2024-03-06"},{"lineNumber":291,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | seller                     | remove contacts from the program                                            | remove information of customers that I no longer do business with                                          |","lastModifiedDate":"2024-03-06"},{"lineNumber":292,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | seller                     | find a customer by name                                                     | locate details of persons without having to go through the entire list                                     |","lastModifiedDate":"2024-03-06"},{"lineNumber":293,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | seller                     | create orders for contacts                                                  | know what customers have purchased                                                                         |","lastModifiedDate":"2024-03-06"},{"lineNumber":294,"author":{"gitId":"0-yibai"},"content":"| `* * *`  | seller                     | mark an order as done                                                       | distinguish between orders done and not done yet                                                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":295,"author":{"gitId":"0-yibai"},"content":"| `* *`    | new user                   | see sample data                                                             | see what the app looks like when it is in use and try out the functions hands-on                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":296,"author":{"gitId":"0-yibai"},"content":"| `* *`    | seller                     | edit orders                                                                 | update orders when customers change them                                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":297,"author":{"gitId":"0-yibai"},"content":"| `* *`    | seller                     | update the contact information                                              | correct mistakes made by me and users when keying in information, and update when users change information |","lastModifiedDate":"2024-03-06"},{"lineNumber":298,"author":{"gitId":"0-yibai"},"content":"| `* *`    | seller                     | archive completed orders                                                    | track past orders for accounting purposes                                                                  |","lastModifiedDate":"2024-03-06"},{"lineNumber":299,"author":{"gitId":"0-yibai"},"content":"| `* *`    | seller                     | mark the stage of an order                                                  | track the status of each order precisely                                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":300,"author":{"gitId":"0-yibai"},"content":"| `* *`    | busy seller                | type the commands fast using shortcuts                                      | save time and improve work efficiency                                                                      |","lastModifiedDate":"2024-03-06"},{"lineNumber":301,"author":{"gitId":"0-yibai"},"content":"| `* *`    | seller with many customers | search for users who have existing orders                                   | better fulfill the orders                                                                                  |","lastModifiedDate":"2024-03-06"},{"lineNumber":302,"author":{"gitId":"0-yibai"},"content":"| `*`      | seller                     | track the number of orders each address has                                 | double check for any discrepancies                                                                         |","lastModifiedDate":"2024-03-06"},{"lineNumber":303,"author":{"gitId":"0-yibai"},"content":"| `*`      | seller                     | track which deliveries are handed by which postman                          | know who to approach if there is any issue                                                                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":304,"author":{"gitId":"0-yibai"},"content":"| `*`      | seller                     | mark select a bunch of orders as to be delivered together in the next round |                                                                                                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":305,"author":{"gitId":"0-yibai"},"content":"| `*`      | seller                     | hide private contact details                                                | minimize chance of leakage of customer information by accident                                             |","lastModifiedDate":"2024-03-06"},{"lineNumber":306,"author":{"gitId":"0-yibai"},"content":"| `*`      | busy seller                | get auto-suggestions as I type                                              | type fast and work efficiently                                                                             |","lastModifiedDate":"2024-03-06"},{"lineNumber":307,"author":{"gitId":"0-yibai"},"content":"| `*`      | seller with many customers | sort customer by name                                                       | locate a person easily                                                                                     |","lastModifiedDate":"2024-03-06"},{"lineNumber":308,"author":{"gitId":"0-yibai"},"content":"| `*`      | careless user              | undo delete commands                                                        | recover information I accidentally deleted by mistake                                                      |","lastModifiedDate":"2024-03-06"},{"lineNumber":309,"author":{"gitId":"0-yibai"},"content":"| `*`      | careless user              | get a double confirmation warning before I delete anything                  | reduce chance of deleting information by mistake                                                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"nigel27022001"},"content":"(For all use cases below, the **System** is the `Strack.io` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-06"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"nigel27022001"},"content":"**Use case: UC1 - Adding a contact**","lastModifiedDate":"2024-03-06"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"nigel27022001"},"content":"1.  User chooses to add a new customer and specifies the required details.","lastModifiedDate":"2024-03-06"},{"lineNumber":321,"author":{"gitId":"nigel27022001"},"content":"2.  Strack.io displays the added customer contact.","lastModifiedDate":"2024-03-06"},{"lineNumber":322,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":323,"author":{"gitId":"nigel27022001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":324,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":325,"author":{"gitId":"nigel27022001"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":326,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":327,"author":{"gitId":"nigel27022001"},"content":"* 1a. Strack.io detects an error in the entered data.","lastModifiedDate":"2024-03-06"},{"lineNumber":328,"author":{"gitId":"nigel27022001"},"content":"    * 1a1. Strack.io shows the missing/incorrect field.","lastModifiedDate":"2024-03-06"},{"lineNumber":329,"author":{"gitId":"nigel27022001"},"content":"    * 1a2. User enters new data.","lastModifiedDate":"2024-03-06"},{"lineNumber":330,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":331,"author":{"gitId":"nigel27022001"},"content":"        Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-06"},{"lineNumber":332,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":333,"author":{"gitId":"nigel27022001"},"content":"        Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":334,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":335,"author":{"gitId":"nigel27022001"},"content":"**Use case: UC2 - Delete a contact**","lastModifiedDate":"2024-03-06"},{"lineNumber":336,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":337,"author":{"gitId":"nigel27022001"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":338,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":339,"author":{"gitId":"nigel27022001"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-03-06"},{"lineNumber":340,"author":{"gitId":"nigel27022001"},"content":"2.  Strack.io shows a list of persons.","lastModifiedDate":"2024-03-06"},{"lineNumber":341,"author":{"gitId":"nigel27022001"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":342,"author":{"gitId":"nigel27022001"},"content":"4.  Strack.io requests for confirmation.","lastModifiedDate":"2024-03-06"},{"lineNumber":343,"author":{"gitId":"nigel27022001"},"content":"5.  User confirms.","lastModifiedDate":"2024-03-06"},{"lineNumber":344,"author":{"gitId":"nigel27022001"},"content":"6.  Strack.io deletes the contact, displaying the deleted contact.","lastModifiedDate":"2024-03-06"},{"lineNumber":345,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":346,"author":{"gitId":"nigel27022001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":347,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":348,"author":{"gitId":"nigel27022001"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":349,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":350,"author":{"gitId":"nigel27022001"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":351,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":352,"author":{"gitId":"nigel27022001"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":353,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":354,"author":{"gitId":"nigel27022001"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":355,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":356,"author":{"gitId":"nigel27022001"},"content":"    * 3a1. Strack.io shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":357,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":358,"author":{"gitId":"nigel27022001"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":359,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":360,"author":{"gitId":"nigel27022001"},"content":"**Use case: UC3 - Edit a contact**","lastModifiedDate":"2024-03-06"},{"lineNumber":361,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":362,"author":{"gitId":"nigel27022001"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":363,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":364,"author":{"gitId":"nigel27022001"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-03-06"},{"lineNumber":365,"author":{"gitId":"nigel27022001"},"content":"2.  Strack.io shows a list of persons.","lastModifiedDate":"2024-03-06"},{"lineNumber":366,"author":{"gitId":"nigel27022001"},"content":"3.  User requests to edit the details of a specific person in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":367,"author":{"gitId":"nigel27022001"},"content":"4.  Strack.io edits the details of the person and displays the new contact.","lastModifiedDate":"2024-03-06"},{"lineNumber":368,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":369,"author":{"gitId":"nigel27022001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":370,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":371,"author":{"gitId":"nigel27022001"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":372,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":373,"author":{"gitId":"nigel27022001"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":374,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":375,"author":{"gitId":"nigel27022001"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":376,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":377,"author":{"gitId":"nigel27022001"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":378,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":379,"author":{"gitId":"nigel27022001"},"content":"    * 3a1. Strack.io shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":380,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":381,"author":{"gitId":"nigel27022001"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":383,"author":{"gitId":"nigel27022001"},"content":"* 3b. Strack.io detects an error in the entered data.","lastModifiedDate":"2024-03-06"},{"lineNumber":384,"author":{"gitId":"nigel27022001"},"content":"    * 3b1. Strack.io shows the missing/incorrect field.","lastModifiedDate":"2024-03-06"},{"lineNumber":385,"author":{"gitId":"nigel27022001"},"content":"    * 3b2. User enters new data.","lastModifiedDate":"2024-03-06"},{"lineNumber":386,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":387,"author":{"gitId":"nigel27022001"},"content":"        Steps 3b1-3b2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-06"},{"lineNumber":388,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":389,"author":{"gitId":"nigel27022001"},"content":"        Use case resumes from step 4.","lastModifiedDate":"2024-03-06"},{"lineNumber":390,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":391,"author":{"gitId":"nigel27022001"},"content":"**Use case: UC4 - Searching for a contact**","lastModifiedDate":"2024-03-06"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":393,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":395,"author":{"gitId":"nigel27022001"},"content":"1.  User requests to search for contact based on keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":396,"author":{"gitId":"nigel27022001"},"content":"2.  Strack.io shows a list of matching persons.","lastModifiedDate":"2024-03-06"},{"lineNumber":397,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":398,"author":{"gitId":"nigel27022001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":399,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":400,"author":{"gitId":"nigel27022001"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":401,"author":{"gitId":"nigel27022001"},"content":"* 2a. The list of matching persons is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":402,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":403,"author":{"gitId":"nigel27022001"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":404,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":405,"author":{"gitId":"nigel27022001"},"content":"**Use case: UC5 - Creating an order**","lastModifiedDate":"2024-03-06"},{"lineNumber":406,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":407,"author":{"gitId":"nigel27022001"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":408,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":409,"author":{"gitId":"nigel27022001"},"content":"1.  User chooses to create an order for an existing person and specifies the required details.","lastModifiedDate":"2024-03-06"},{"lineNumber":410,"author":{"gitId":"nigel27022001"},"content":"2.  Strack.io displays the added order.","lastModifiedDate":"2024-03-06"},{"lineNumber":411,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":412,"author":{"gitId":"nigel27022001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":413,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":414,"author":{"gitId":"nigel27022001"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":415,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":416,"author":{"gitId":"nigel27022001"},"content":"* 1a. Strack.io detects an error in the entered data.","lastModifiedDate":"2024-03-06"},{"lineNumber":417,"author":{"gitId":"nigel27022001"},"content":"    * 1a1. Strack.io shows the missing/incorrect field.","lastModifiedDate":"2024-03-06"},{"lineNumber":418,"author":{"gitId":"nigel27022001"},"content":"    * 1a2. User enters new data.","lastModifiedDate":"2024-03-06"},{"lineNumber":419,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":420,"author":{"gitId":"nigel27022001"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-06"},{"lineNumber":421,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":422,"author":{"gitId":"nigel27022001"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":423,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":424,"author":{"gitId":"nigel27022001"},"content":"**Use case: UC6 - Delete an order**","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"nigel27022001"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":427,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":428,"author":{"gitId":"nigel27022001"},"content":"1.  User requests to list orders.","lastModifiedDate":"2024-03-06"},{"lineNumber":429,"author":{"gitId":"nigel27022001"},"content":"2.  Strack.io shows a list of orders.","lastModifiedDate":"2024-03-06"},{"lineNumber":430,"author":{"gitId":"nigel27022001"},"content":"3.  User requests to delete a specific order in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":431,"author":{"gitId":"nigel27022001"},"content":"4.  Strack.io requests for confirmation.","lastModifiedDate":"2024-03-06"},{"lineNumber":432,"author":{"gitId":"nigel27022001"},"content":"5.  User confirms.","lastModifiedDate":"2024-03-06"},{"lineNumber":433,"author":{"gitId":"nigel27022001"},"content":"6.  Strack.io deletes the order, displaying the deleted order.","lastModifiedDate":"2024-03-06"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"nigel27022001"},"content":"    * 3a1. Strack.io shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"0-yibai"},"content":"2.  Should be able to hold up to 10000 contacts and 500 active orders without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"0-yibai"},"content":"4.  Even when the app quits unexpectedly in run time, most information updated in the current session should not be lost when the app re-launches.","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"0-yibai"},"content":"5.  Should protect sensitive customer information so that they are not leaked to possible malware on the same device.","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"0-yibai"},"content":"6.  The user interface should look clean and organised even when it is populated with a lot of information.","lastModifiedDate":"2024-03-06"},{"lineNumber":459,"author":{"gitId":"0-yibai"},"content":"7.  The response time to any action other than fetching archived order history should be within 1 second.","lastModifiedDate":"2024-03-06"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"0-yibai"},"content":"* **Sensitive customer information**: Customer\u0027s name, email, phone number, address and any other personal information which is saved locally in this app","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"0-yibai"},"content":"* **Stage of an order**: Under preparation, Ready for delivery, Sent for delivery, Received by customer(Completed)","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nigel27022001":121,"0-yibai":32,"-":365}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Joelwang22"},"content":"Strack.io is a **desktop app for Homemade food sellers to manage contacts of their customers, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Strack.io can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Joelwang22"},"content":"Format: `edit c/CUSTOMER_ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Joelwang22"},"content":"* Edits the person of the specified `CUSTOMER_ID`. The customer_id refers to the number shown in the person\u0027s contact under \"customer id\". The customer id **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Joelwang22"},"content":"*  `edit c/1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the person with customer_id of 1 to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"Joelwang22"},"content":"*  `edit c/2 n/Betsy Crower t/` Edits the name of the person with customer_id of 2 to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Joelwang22"},"content":"Finds persons based on name, phone number or customer id.","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Joelwang22"},"content":"Format: `find [n/NAME] [c/CUSTOMER_ID] [p/PHONE_NUMBER]`","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Joelwang22"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Joelwang22"},"content":"* Persons matching at least one of the specified information will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"Joelwang22"},"content":"  Examples:","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"Joelwang22"},"content":"* `n/Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"Joelwang22"},"content":"* `n/Hans Bo c/12` will return `Hans Bo`, as well as person with customer id `12`","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Joelwang22"},"content":"* `find c/John` returns `john` and `John Doe`","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"Joelwang22"},"content":"* `find c/alex` returns `Alex`\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"Joelwang22"},"content":"  ![result for \u0027find alex\u0027](images/findAlexResult.png)","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"Joelwang22"},"content":"* `find c/ 19` returns person with customer id of `19`","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"Joelwang22"},"content":"* `find p/85012345` returns person with phone number of `85012345`","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Joelwang22"},"content":"Format: `delete c/CUSTOMER_ID`","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"Joelwang22"},"content":"* Deletes the person of the specified `CUSTOMER_ID`.","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"Joelwang22"},"content":"* The customer_id refers to the number shown under customer id in the displayed person contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"Joelwang22"},"content":"* The customer_id **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"Joelwang22"},"content":"* `list` followed by `delete c/2` deletes the person with customer_id of `2` in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"Joelwang22"},"content":"* `find Betsy` followed by `delete c/1` deletes the person with customer_id of `1` in the results of the `find` command.","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"Joelwang22"},"content":"### Creating of orders : `order`","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Joelwang22"},"content":"Assigns an order to a specified person in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"Joelwang22"},"content":"Format: `order p/PHONE_NUMBER`","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"Joelwang22"},"content":"* Orders are assigned to person with specified `PHONE_NUMBER`.","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"Joelwang22"},"content":"* Strack will prompt `Input Products`.","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"Joelwang22"},"content":"* Follow up with products to be added to the order using the following format. Format: `pn/PRODUCT_NAME pq/PRODUCT_QUANTITY`.","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"Joelwang22"},"content":"* This can be repeated as many times as necessary.","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"Joelwang22"},"content":"* When done adding products, simply type `done`,","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Joelwang22"},"content":"* `order p/99887766` will create an order for person with phone number `99887766` followed by `pn/Cupcake pq/2` and `pn/Cookie pq/2` ending with `done` \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"Joelwang22"},"content":"![result for creating order for alex](images/addOrderResult.png)","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"Joelwang22"},"content":"\u003cbr\u003e![system interaction for order creation](images/systemCreateOrder.png)","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"Joelwang22"},"content":"### Editing of orders `edit`","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"Joelwang22"},"content":"Edits an existing order of a specific person in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"Joelwang22"},"content":"Format: `edit o/ORDER_ID pn/PRODUCT_NAME pq/PRODUCT_QUANTITY`","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"Joelwang22"},"content":"* `ORDER_ID` is a unique number for each order.","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"Joelwang22"},"content":"* The order id refers to the number shown under order id in the displayed persons contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"Joelwang22"},"content":"* Products are edited based on `PRODUCT_NAME`.","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"Joelwang22"},"content":"* To remove product from order, specify `PRODUCT_QUANTITY` as `0`.","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"Joelwang22"},"content":"Example:","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"Joelwang22"},"content":"* `edit o/1 pn/Chicken Pie pq/2 pn/Macaron pq/6` will edit the order with order id of 1 and change `Chiken Pie` quantity to `2` and `Macaron` quantity to `6`.","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"Joelwang22"},"content":"### Listing of orders: `list orders`","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"Joelwang22"},"content":"Lists all ongoing orders in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"Joelwang22"},"content":"Format: `list orders`","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"Joelwang22"},"content":"* ongoing orders will be displayed sorted by `ORDER_ID`.","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"Joelwang22"},"content":"* The order id refers to the number shown under order id in the displayed persons contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"Joelwang22"},"content":"Example:","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"Joelwang22"},"content":"* `list orders` might display the following:","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"Joelwang22"},"content":"![result for listing orders](images/listOrderResult.png)","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"Joelwang22"},"content":"### Deleting of orders: `delete`","lastModifiedDate":"2024-03-07"},{"lineNumber":193,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"Joelwang22"},"content":"Deletes an ongoing order in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":195,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":196,"author":{"gitId":"Joelwang22"},"content":"Format: `delete o/ORDER_ID`","lastModifiedDate":"2024-03-07"},{"lineNumber":197,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":198,"author":{"gitId":"Joelwang22"},"content":"* `ORDER_ID` refers to the number shown under order id in the displayed persons contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":199,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":200,"author":{"gitId":"Joelwang22"},"content":"Example:","lastModifiedDate":"2024-03-07"},{"lineNumber":201,"author":{"gitId":"Joelwang22"},"content":"* `delete o/19` will delete order with `ORDER_ID` of `19`.","lastModifiedDate":"2024-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"Joelwang22"},"content":"**Delete customer** | `delete c/CUSTOMER_ID`\u003cbr\u003e e.g., `delete c/3`","lastModifiedDate":"2024-03-07"},{"lineNumber":254,"author":{"gitId":"Joelwang22"},"content":"**Edit customer** | `edit c/CUSTOMER_ID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-07"},{"lineNumber":255,"author":{"gitId":"Joelwang22"},"content":"**Find** | `find [n/NAME] [c/CUSTOMER_ID] [p/PHONE_NUMBER]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2024-03-07"},{"lineNumber":256,"author":{"gitId":"Joelwang22"},"content":"**List contacts** | `list`","lastModifiedDate":"2024-03-07"},{"lineNumber":257,"author":{"gitId":"Joelwang22"},"content":"**List orders** | `list orders`","lastModifiedDate":"2024-03-07"},{"lineNumber":258,"author":{"gitId":"Joelwang22"},"content":"**Create order** | `order`","lastModifiedDate":"2024-03-07"},{"lineNumber":259,"author":{"gitId":"Joelwang22"},"content":"**Delete order** | `delete o/ORDER_ID`","lastModifiedDate":"2024-03-07"},{"lineNumber":260,"author":{"gitId":"Joelwang22"},"content":"**Edit order** | `edit o/ORDER_ID pn/PRODUCT_NAME pq/PRODUCT_QUANTITY`","lastModifiedDate":"2024-03-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Joelwang22":83,"-":178}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"title: Strack.io","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T08-2/tp/actions)","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"**Strack.io is a desktop application for managing customer information and orders.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"* If you are interested in using Strack.io, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"* If you are interested about developing Strack.io, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"-":14,"bertrandong":6}},{"path":"docs/team/bertrand.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"layout: page","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"title: Bertrand\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"bertrandong":10}},{"path":"docs/team/isaac.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"layout: page","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"chonghaoen"},"content":"title: Isaac\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"chonghaoen"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"chonghaoen":10}},{"path":"docs/team/joel.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Joelwang22"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"Joelwang22"},"content":"layout: page","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Joelwang22"},"content":"title: Joel\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Joelwang22"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Joelwang22"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Joelwang22"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Joelwang22":10}},{"path":"docs/team/nigel.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"layout: page","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"title: Nigel\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"1. Use Cases in the Project Developer Guide.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nigel27022001":11}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_INVALID_PHONE_NUMBER \u003d \"Phone number provided not found\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_PHONE_NUMBER_NOT_FOUND \u003d \"Phone number provided not found\";","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chonghaoen":1,"Joelwang22":4,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joelwang22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.order.Product;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.order.Quantity;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":" * Adds an order to the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Joelwang22"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Joelwang22"},"content":"    public static final String COMMAND_WORD \u003d \"order\";","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_ADD_ORDER_SUCCESS \u003d \"Added order to Person: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Removed order from Person: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Joelwang22"},"content":"            + \": Edits the order of the person identified \"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Joelwang22"},"content":"            + \"by the phone number of person. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Joelwang22"},"content":"            + \"Existing orders will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Joelwang22"},"content":"            + \"Parameters: phone number (must be a positive integer) \"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Joelwang22"},"content":"            + \"p/ [PHONE_NUMBER]\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Joelwang22"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Joelwang22"},"content":"            + \"p/ 87438807.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"    private final Phone phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"    private Order order;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"     * Constructs an {@code AddOrderCommand} with the given {@code Phone}.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"     * @param phone","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Joelwang22"},"content":"    public AddOrderCommand(Phone phone) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Joelwang22"},"content":"        requireAllNonNull(phone);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Joelwang22"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Joelwang22"},"content":"        this.order \u003d new Order();","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Joelwang22"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Joelwang22"},"content":"        if (!Phone.isValidPhone(phone.toString())) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Joelwang22"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PHONE_NUMBER);","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Joelwang22"},"content":"        // To Check if phone number belongs to existing person","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Joelwang22"},"content":"        Optional\u003cPerson\u003e maybeEditablePerson \u003d model.findPersonByPhoneNumber(this.phone.value);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Joelwang22"},"content":"        if (!maybeEditablePerson.isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Joelwang22"},"content":"            throw new CommandException(Messages.MESSAGE_PHONE_NUMBER_NOT_FOUND);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Joelwang22"},"content":"        Person personToEdit \u003d maybeEditablePerson.get();","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Joelwang22"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Joelwang22"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Joelwang22"},"content":"                personToEdit.getAddress(), personToEdit.getTags());","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Joelwang22"},"content":"        // CHANGE THIS!!!! Need add functionality for users to input products","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Joelwang22"},"content":"        // THIS IS A PLACEHOLDER","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Joelwang22"},"content":"        this.order.addProduct(new Product(\"cupcake\"), new Quantity(2));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Joelwang22"},"content":"        editedPerson.addOrder(this.order);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Joelwang22"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"Joelwang22"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"Joelwang22"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"nigel27022001"},"content":"     * Generates a success message with a {@code Person}","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"nigel27022001"},"content":"     * @param personToEdit","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"nigel27022001"},"content":"     * @return","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Joelwang22"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Joelwang22"},"content":"        String message \u003d !order.isEmpty() ? MESSAGE_ADD_ORDER_SUCCESS : MESSAGE_DELETE_ORDER_SUCCESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"Joelwang22"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"Joelwang22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"Joelwang22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"Joelwang22"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"Joelwang22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"Joelwang22"},"content":"        if (!(other instanceof AddOrderCommand)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"Joelwang22"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"Joelwang22"},"content":"        AddOrderCommand e \u003d (AddOrderCommand) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"Joelwang22"},"content":"        return phone \u003d\u003d e.phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"Joelwang22"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nigel27022001":19,"Joelwang22":78}},{"path":"src/main/java/seedu/address/logic/commands/CancelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"chonghaoen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"chonghaoen"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"chonghaoen"},"content":" * Deletes an order by its Order ID.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"public class CancelCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"    public static final String COMMAND_WORD \u003d \"cancel\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"chonghaoen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"            + \": Cancels an order by its Order ID.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"chonghaoen"},"content":"            + \"Parameters: ORDER_ID (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"chonghaoen"},"content":"    public static final String MESSAGE_CANCEL_ORDER_SUCCESS \u003d \"Cancelled Order: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"chonghaoen"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"chonghaoen"},"content":"    public CancelCommand(Index targetIndex) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"chonghaoen"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"chonghaoen"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"chonghaoen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"chonghaoen"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"chonghaoen"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d model.getOrderListSize()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"chonghaoen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"chonghaoen"},"content":"        model.deleteOrder(targetIndex.getOneBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"chonghaoen"},"content":"        return new CommandResult(String.format(MESSAGE_CANCEL_ORDER_SUCCESS, targetIndex.getOneBased()));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"chonghaoen"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"chonghaoen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"chonghaoen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"chonghaoen"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"chonghaoen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"chonghaoen"},"content":"        if (!(other instanceof CancelCommand)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"chonghaoen"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"chonghaoen"},"content":"        CancelCommand otherCancelCommand \u003d (CancelCommand) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"chonghaoen"},"content":"        return targetIndex.equals(otherCancelCommand.targetIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"chonghaoen"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"chonghaoen"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"chonghaoen"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"chonghaoen"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"chonghaoen"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"chonghaoen":63}},{"path":"src/main/java/seedu/address/logic/commands/ListOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":" * Lists all the orders in the addressbook to the user.","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"public class ListOrderCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"    public static final String COMMAND_WORD \u003d \"list orders\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"nigel27022001":23}},{"path":"src/main/java/seedu/address/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joelwang22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Joelwang22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Joelwang22"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Joelwang22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" * Parses input for AddOrderCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Joelwang22"},"content":"public class AddOrderCommandParser {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"     * Parses the user input to create a AddOrderCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     * @param args user input.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     * @return AddOrderCommand based on the user input.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * @throws ParseException","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Joelwang22"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Joelwang22"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Joelwang22"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Joelwang22"},"content":"                PREFIX_PHONE);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Joelwang22"},"content":"        Phone phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Joelwang22"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Joelwang22"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Joelwang22"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Joelwang22"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Joelwang22"},"content":"                    AddOrderCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Joelwang22"},"content":"        return new AddOrderCommand(phone);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Joelwang22"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nigel27022001":13,"Joelwang22":25}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.logic.commands.CancelCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"chonghaoen"},"content":"        case CancelCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"chonghaoen"},"content":"            return new CancelCommandParser().parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"Joelwang22"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"Joelwang22"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nigel27022001":1,"chonghaoen":4,"Joelwang22":3,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CancelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.logic.commands.CancelCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":" * Parses input arguments and creates a new CancelCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"chonghaoen"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"chonghaoen"},"content":"public class CancelCommandParser implements Parser\u003cCancelCommand\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"     * Parses the given {@code String} of arguments in the context of the CancelCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"chonghaoen"},"content":"     * and returns a CancelCommand object for execution.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"chonghaoen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"chonghaoen"},"content":"    public CancelCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"chonghaoen"},"content":"            return new CancelCommand(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"chonghaoen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"chonghaoen"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"chonghaoen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"chonghaoen":30}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"    public static final Prefix PREFIX_ORDER \u003d new Prefix(\"o/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"    public static final Prefix PREFIX_PRODUCT_NAME \u003d new Prefix(\"pn/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"chonghaoen"},"content":"    public static final Prefix PREFIX_PRODUCT_QUANTITY \u003d new Prefix(\"pq\");","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chonghaoen":3,"-":15}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.OrderList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"    private final OrderList orders;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"chonghaoen"},"content":"        orders \u003d new OrderList();","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"chonghaoen"},"content":"     * Adds an {@code Order} to the {@code OrderList} of this address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"chonghaoen"},"content":"    public void addOrder(Order order, Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"chonghaoen"},"content":"        orders.addOrder(order, person);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"chonghaoen"},"content":"    public Order findOrderByIndex(int id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"chonghaoen"},"content":"        return orders.getOrder(id);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"chonghaoen"},"content":"     * Removes {@code Order} from the {@code OrderList} of this {@code AddressBook}.","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"chonghaoen"},"content":"     * @param id index of order to remove","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"chonghaoen"},"content":"    public void removeOrder(int id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"chonghaoen"},"content":"        orders.deleteOrder(id);","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":137,"author":{"gitId":"nigel27022001"},"content":"    //Make sure to implement abstract method for this","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"nigel27022001"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"nigel27022001"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"chonghaoen"},"content":"    public int getOrderListSize() {","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"chonghaoen"},"content":"        return orders.size();","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nigel27022001":5,"chonghaoen":30,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Joelwang22"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"chonghaoen"},"content":"     * Deletes the given order.","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"chonghaoen"},"content":"     * The order must exist in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"chonghaoen"},"content":"    void deleteOrder(int id);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"Joelwang22"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"Joelwang22"},"content":"     * Finds a person based on their phone number.","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"Joelwang22"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"Joelwang22"},"content":"     * @param phoneNumber The phone number to search for.","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"nigel27022001"},"content":"     * @return An Optional containing the found Person, or an empty Optional if no person with the phone number exists.","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"Joelwang22"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"Joelwang22"},"content":"    Optional\u003cPerson\u003e findPersonByPhoneNumber(String phoneNumber);","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"chonghaoen"},"content":"    Order findOrderByIndex(int id);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"nigel27022001"},"content":"     * Returns an unmodifiable view of the filtered person list.","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"nigel27022001"},"content":"     * @return an unmodifiable view of the filtered person list.","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"nigel27022001"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"nigel27022001"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"nigel27022001"},"content":"     * @param predicate predicate to update the filtered order list with.","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"nigel27022001"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"nigel27022001"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"chonghaoen"},"content":"     * Returns the number of orders in the order list.","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"chonghaoen"},"content":"     * @return the number of orders in the order list","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"chonghaoen"},"content":"    int getOrderListSize();","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nigel27022001":15,"chonghaoen":18,"Joelwang22":8,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Joelwang22"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    //need to include a means to pass this here from constructor","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.addressBook.getOrderList());","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"chonghaoen"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"chonghaoen"},"content":"    public void deleteOrder(int id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"chonghaoen"},"content":"        addressBook.removeOrder(id);","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"chonghaoen"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"chonghaoen"},"content":"    public int getOrderListSize() {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"chonghaoen"},"content":"        return addressBook.getOrderListSize();","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"Joelwang22"},"content":"    public Optional\u003cPerson\u003e findPersonByPhoneNumber(String phoneNumber) {","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"Joelwang22"},"content":"        ObservableList\u003cPerson\u003e persons \u003d getFilteredPersonList();","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"Joelwang22"},"content":"        for (Person person : persons) {","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"Joelwang22"},"content":"            if (person.getPhone().value.equals(phoneNumber)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"Joelwang22"},"content":"                return Optional.of(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"Joelwang22"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"Joelwang22"},"content":"        return Optional.empty();","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"nigel27022001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Order List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"nigel27022001"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"nigel27022001"},"content":"        return filteredOrders;","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"nigel27022001"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"nigel27022001"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"nigel27022001"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"chonghaoen"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"chonghaoen"},"content":"    public Order findOrderByIndex(int id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"chonghaoen"},"content":"        return addressBook.findOrderByIndex(id);","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nigel27022001":15,"chonghaoen":15,"Joelwang22":12,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chonghaoen":2,"-":17}},{"path":"src/main/java/seedu/address/model/exceptions/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":" * Exception when Order is not found.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class OrderNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"nigel27022001":3,"chonghaoen":3,"bertrandong":1}},{"path":"src/main/java/seedu/address/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Joelwang22"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Joelwang22"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Joelwang22"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" * Represents a Customer\u0027s Order in the Addressbook.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"public class Order implements Comparable\u003cOrder\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Orders need to contain alphanumeric \"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"            + \"product names and numeric quantities\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Joelwang22"},"content":"    private int id;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Joelwang22"},"content":"    private Map\u003cProduct, Quantity\u003e productMap;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"    private Person customer;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     * Constructs an {@code Order} Object.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Joelwang22"},"content":"    public Order() {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Joelwang22"},"content":"        this.productMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     * Constructs an {@code Order} Object with {@code id}.","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     * @param id ID of the Order.","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Joelwang22"},"content":"    public Order(int id) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Joelwang22"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Joelwang22"},"content":"        productMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"     * Contructs an {@code Order} object with {@code map}","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"     * @param map Mappings of Products and Quantity","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Joelwang22"},"content":"    public Order(Map\u003cProduct, Quantity\u003e map) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Joelwang22"},"content":"        productMap \u003d map;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"     * Sets the Order ID.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"     * @param id ID of the Order.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Joelwang22"},"content":"    public void setID(int id) {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Joelwang22"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"     * Gets the Order ID.","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"     * @return the Order ID.","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Joelwang22"},"content":"    public int getId() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Joelwang22"},"content":"        return this.id;","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"     * Gets the Product Quantity Map.","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"     * @return the Product Quantity Map.","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Joelwang22"},"content":"    public Map\u003cProduct, Quantity\u003e getProductMap() {","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Joelwang22"},"content":"        return this.productMap;","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"nigel27022001"},"content":"     * Adds a specified quantity of Product into the order","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"nigel27022001"},"content":"     * @param newProduct Product to be added.","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"nigel27022001"},"content":"     * @param newQuantity Quantity of Product to be added.","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Joelwang22"},"content":"    public void addProduct(Product newProduct, Quantity newQuantity) {","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Joelwang22"},"content":"        productMap.put(newProduct, newQuantity);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"nigel27022001"},"content":"     * Get quantity of this product in the order.","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"nigel27022001"},"content":"     * @param product Product of which quantity is returned.","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"nigel27022001"},"content":"     * @return quantity of the product.","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"Joelwang22"},"content":"    public Quantity getQuantity(Product product) {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Joelwang22"},"content":"        Quantity currQuantity \u003d productMap.get(product);","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Joelwang22"},"content":"        return currQuantity;","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"nigel27022001"},"content":"     * Gets the quantity values of the product in the order.","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"nigel27022001"},"content":"     * @param product Product of which int quantity is returned.","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"nigel27022001"},"content":"     * @return int quantity of the product.","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"Joelwang22"},"content":"    public int getQuantityValue(Product product) {","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Joelwang22"},"content":"        int value \u003d productMap.get(product).getValue();","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Joelwang22"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"nigel27022001"},"content":"     * Sets the quantity values of the product in the order.","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"nigel27022001"},"content":"     * @param currProduct Product of which quantity to be editted.","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"nigel27022001"},"content":"     * @param newQuantity new Quantity of the specified product.","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"Joelwang22"},"content":"    public void changeQuantity(Product currProduct, int newQuantity) {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Joelwang22"},"content":"        Quantity currQuantity \u003d productMap.get(currProduct);","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Joelwang22"},"content":"        currQuantity.setQuantity(newQuantity);","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"nigel27022001"},"content":"     * Deletes the specified product from the order.","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"nigel27022001"},"content":"     * @param product Product to be deleted.","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"Joelwang22"},"content":"    public void deleteProduct(Product product) {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"Joelwang22"},"content":"        productMap.remove(product);","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"nigel27022001"},"content":"     * Clears the product map.","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"Joelwang22"},"content":"    public void clearProductMap() {","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"Joelwang22"},"content":"        this.productMap.clear();","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"chonghaoen"},"content":"     * Sets the ProductMap of the order.","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"chonghaoen"},"content":"     * @param productMap ProductMap to set to","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"chonghaoen"},"content":"    public void setProductMap(Map\u003cProduct, Quantity\u003e productMap) {","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"chonghaoen"},"content":"        this.productMap \u003d productMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"nigel27022001"},"content":"     * Checks if the product map is empty.","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"nigel27022001"},"content":"     * @return boolean value of whether the product map is empty.","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"Joelwang22"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"Joelwang22"},"content":"        return productMap.isEmpty();","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"chonghaoen"},"content":"     * Gets the {@code Person} ordering the order","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"chonghaoen"},"content":"     * @return the customer ordering the order","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"chonghaoen"},"content":"    public Person getCustomer() {","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"chonghaoen"},"content":"        return this.customer;","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"nigel27022001"},"content":"     * Compares the other Order Object with this Object based on the OrderID","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"nigel27022001"},"content":"     * @param otherOrder the object to be compared.","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"nigel27022001"},"content":"     * @return negative integer, zero, or a positive integer as this object is less than,","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"nigel27022001"},"content":"     *         equal to, or greater than the specified object.","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"nigel27022001"},"content":"    public int compareTo(Order otherOrder) {","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"nigel27022001"},"content":"        if (this.id \u003c otherOrder.id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"nigel27022001"},"content":"            return -1;","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"nigel27022001"},"content":"            return 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"bertrandong"},"content":"     * Checks if two orders are the same.","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"bertrandong"},"content":"     * @param otherOrder The other order to be checked against.","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"bertrandong"},"content":"     * @return A boolean value of whether the two orders are the same.","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"bertrandong"},"content":"    public boolean isSameOrder(Order otherOrder) {","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"bertrandong"},"content":"        if (otherOrder \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"bertrandong"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"nigel27022001"},"content":"        return otherOrder !\u003d null","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"bertrandong"},"content":"                \u0026\u0026 otherOrder.id \u003d\u003d this.id","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"bertrandong"},"content":"                \u0026\u0026 otherOrder.customer \u003d\u003d this.customer;","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"Joelwang22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"Joelwang22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"Joelwang22"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"Joelwang22"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"Joelwang22"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":190,"author":{"gitId":"Joelwang22"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"Joelwang22"},"content":"        return (this.id \u003d\u003d otherOrder.id)","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"Joelwang22"},"content":"                \u0026\u0026 this.productMap.equals(otherOrder.productMap);","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"Joelwang22"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"Joelwang22"},"content":"        return Objects.hash(id, productMap);","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"Joelwang22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"nigel27022001"},"content":"        Set\u003cProduct\u003e set \u003d productMap.keySet();","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"nigel27022001"},"content":"        ArrayList\u003cProduct\u003e productList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"nigel27022001"},"content":"        productList.addAll(set);","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"nigel27022001"},"content":"        String str \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 0; k \u003c productList.size(); k++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"nigel27022001"},"content":"            str +\u003d productList.get(k).getName();","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"nigel27022001"},"content":"            str +\u003d \",\";","lastModifiedDate":"2024-03-14"},{"lineNumber":209,"author":{"gitId":"nigel27022001"},"content":"            str +\u003d productMap.get(productList.get(k)).getValue();","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"nigel27022001"},"content":"        return str;","lastModifiedDate":"2024-03-14"},{"lineNumber":212,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"nigel27022001":90,"chonghaoen":26,"Joelwang22":84,"bertrandong":13}},{"path":"src/main/java/seedu/address/model/order/OrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"import seedu.address.model.exceptions.OrderNotFoundException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":" * Represents the list of active orders in the addressbook.","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"public class OrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * Keeps track of the order ids, ensuring that all ids are unique.","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    private int orderIdCounter;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     * The hashmap with mappings from Orders to their OrderID","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    private HashMap\u003cInteger, Order\u003e orderList;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     * The Lists which stores the Order Objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     * OrderList class constructor.","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    public OrderList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        orderList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"        orderIdCounter \u003d 1;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOrder);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"     * Getter method for orderIdCounter.","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"     * @return The current orderId to be used.","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    public int getOrderIdCounter() {","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"        return orderIdCounter;","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"     * Adds an order to the order list.","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"     * @param toAdd The order that is to be added.","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"     * @param person The person that the order is tagged to.","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"    public void addOrder(Order toAdd, Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"        requireAllNonNull(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"        //make sure that our addordercommand has a means to set the OrderID","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"        orderList.put(toAdd.getId(), toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"nigel27022001"},"content":"        toAdd.setID(orderIdCounter);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"nigel27022001"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"        person.addOrder(toAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"        orderIdCounter++;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"     * Deletes an order from the order list.","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"     * @param toDelete The order id of the order that is to be deleted.","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"    public void deleteOrder(int toDelete) {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"        if (toDelete \u003c 1) {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"nigel27022001"},"content":"        Order oldOrder \u003d orderList.get(toDelete);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"        if (oldOrder \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"nigel27022001"},"content":"        Integer oldOrderIndex \u003d internalList.indexOf(oldOrder);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"        orderList.remove(toDelete);","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"nigel27022001"},"content":"        internalList.remove(oldOrderIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"bertrandong"},"content":"     * Edits an order from the order list.","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"bertrandong"},"content":"     * @param orderId The order id of the order that is to be edited.","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"bertrandong"},"content":"     * @param toEdit The new order to replace the old order.","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"bertrandong"},"content":"    public void editOrder(int orderId, Order toEdit) {","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"bertrandong"},"content":"        requireAllNonNull(orderId, toEdit);","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"bertrandong"},"content":"        if (orderId \u003c 1) {","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"bertrandong"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"bertrandong"},"content":"        Order currOrder \u003d orderList.get(orderId);","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"bertrandong"},"content":"        if (currOrder \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"bertrandong"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"bertrandong"},"content":"        if (!currOrder.isSameOrder(toEdit)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"nigel27022001"},"content":"            Order oldOrder \u003d orderList.get(orderId);","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"nigel27022001"},"content":"            int oldOrderIndex \u003d internalList.indexOf(oldOrder);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"bertrandong"},"content":"            orderList.put(orderId, toEdit);","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"nigel27022001"},"content":"            internalList.set(oldOrderIndex, toEdit);","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"bertrandong"},"content":"     * Converts the active order list to be displayed on the GUI.","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"bertrandong"},"content":"     * @return The active order list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"bertrandong"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"bertrandong"},"content":"        ObservableList\u003cOrder\u003e ls \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"bertrandong"},"content":"        for (int orderId : orderList.keySet()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"bertrandong"},"content":"            ls.add(orderList.get(orderId));","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"bertrandong"},"content":"        return ls;","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"chonghaoen"},"content":"     * Gives the number of orders in the {@code OrderList}","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"chonghaoen"},"content":"     * @return number of orders","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"chonghaoen"},"content":"    public int size() {","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"chonghaoen"},"content":"        return orderList.size();","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"chonghaoen"},"content":"     * Gets the order corresponding to the index","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"chonghaoen"},"content":"     * @param i the order index","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"chonghaoen"},"content":"     * @return the order corresponding to the index","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"chonghaoen"},"content":"    public Order getOrder(int i) {","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"bertrandong"},"content":"        if (i \u003c 1) {","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"bertrandong"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"bertrandong"},"content":"        Order order \u003d orderList.get(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"bertrandong"},"content":"        if (order \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"bertrandong"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"bertrandong"},"content":"        return order;","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"nigel27022001"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"nigel27022001"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"nigel27022001"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"nigel27022001"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"nigel27022001"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"nigel27022001"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"nigel27022001"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"nigel27022001"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"nigel27022001"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"bertrandong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"bertrandong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"bertrandong"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"bertrandong"},"content":"        if (!(other instanceof OrderList)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"bertrandong"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"bertrandong"},"content":"        OrderList otherOrderList \u003d (OrderList) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"bertrandong"},"content":"        return internalList.equals(otherOrderList.internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"nigel27022001"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"nigel27022001"},"content":"    private boolean ordersAreUnique(List\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"nigel27022001"},"content":"        for (int i \u003d 0; i \u003c orders.size() - 1; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"nigel27022001"},"content":"            for (int j \u003d i + 1; j \u003c orders.size(); j++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"nigel27022001"},"content":"                if (orders.get(i).isSameOrder(orders.get(j))) {","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"nigel27022001"},"content":"                    return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"nigel27022001"},"content":"        return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"nigel27022001":60,"chonghaoen":22,"bertrandong":122}},{"path":"src/main/java/seedu/address/model/order/Product.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":" * Represents the Product in the Order of the Customer.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"public class Product {","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Joelwang22"},"content":"            \"Product names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Joelwang22"},"content":"    /*","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Joelwang22"},"content":"     * The first character of the product name must not be a whitespace,","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Joelwang22"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Joelwang22"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Joelwang22"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Joelwang22"},"content":"    private String name;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a {@code Product} with {@code name}.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     * @param name Name of the Product.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    public Product(@JsonProperty(\"order\") String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Joelwang22"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Joelwang22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Joelwang22"},"content":"        return this.name;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Joelwang22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Joelwang22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Joelwang22"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Joelwang22"},"content":"        if (!(other instanceof Product)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Joelwang22"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Joelwang22"},"content":"        Product otherProduct \u003d (Product) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Joelwang22"},"content":"        return this.name.equals(otherProduct.name);","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Joelwang22"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Joelwang22"},"content":"        return this.name.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"     * Gets the name of the Product.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"     * @return string value of the name of the product.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Joelwang22"},"content":"    public String getName() {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Joelwang22"},"content":"        return this.name;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"     * Sets the name of the product.","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"     * @param newName new name of the Product.","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Joelwang22"},"content":"    public void rename(String newName) {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Joelwang22"},"content":"        this.name \u003d newName;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"nigel27022001":18,"chonghaoen":4,"Joelwang22":45}},{"path":"src/main/java/seedu/address/model/order/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joelwang22"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":" * Represents the Quantity of Products in the Order.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Joelwang22"},"content":"public class Quantity {","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Joelwang22"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"            \"Product quantity should only be a number.\";","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Joelwang22"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d\";","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    private int value;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a {@code Order} with {@code value}","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"     * @param value value of the Quantity.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    public Quantity(@JsonProperty(\"order\") int value) {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Joelwang22"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Joelwang22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Joelwang22"},"content":"        return Integer.toString(this.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Joelwang22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Joelwang22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Joelwang22"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Joelwang22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Joelwang22"},"content":"        if (!(other instanceof Quantity)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Joelwang22"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Joelwang22"},"content":"        Quantity otherQuantity \u003d (Quantity) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Joelwang22"},"content":"        return this.value \u003d\u003d otherQuantity.value;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Joelwang22"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Joelwang22"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Joelwang22"},"content":"        return Integer.hashCode(this.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"     * Gets the value of the Quantity.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"     * @return value of the Quantity.","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Joelwang22"},"content":"    public int getValue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Joelwang22"},"content":"        return this.value;","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"     * Sets the value of the Quantity","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"     * @param newQuantity new value for the Quantity to be set to.","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Joelwang22"},"content":"    public void setQuantity(int newQuantity) {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Joelwang22"},"content":"        this.value \u003d newQuantity;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Joelwang22"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"nigel27022001":20,"Joelwang22":43}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Joelwang22"},"content":"    private ArrayList\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"Joelwang22"},"content":"    public ArrayList\u003cOrder\u003e getOrders() {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Joelwang22"},"content":"        return orders;","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Joelwang22"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Joelwang22"},"content":"        this.orders.add(order);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Joelwang22"},"content":"    public void deleteOrder(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Joelwang22"},"content":"        this.orders.remove(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"Joelwang22"},"content":"    public void setOrders(ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Joelwang22"},"content":"        this.orders \u003d orders;","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nigel27022001":2,"Joelwang22":18,"-":117}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joelwang22"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Joelwang22"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Joelwang22"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.order.Product;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.order.Quantity;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":" * Jackson friendly version of {@link Order}.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Joelwang22"},"content":"public class JsonAdaptedOrder {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    private final Order order;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Joelwang22"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Joelwang22"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given {@code order}.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Joelwang22"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Joelwang22"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Joelwang22"},"content":"    public JsonAdaptedOrder(Map\u003cProduct, Quantity\u003e order) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        this.order \u003d new Order(order);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Joelwang22"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Joelwang22"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Joelwang22"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Joelwang22"},"content":"    public JsonAdaptedOrder(Order order) {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        this.order \u003d order;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Joelwang22"},"content":"    @JsonValue","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    public Map\u003cProduct, Quantity\u003e getOrder() {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        return this.order.getProductMap();","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Joelwang22"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Joelwang22"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Joelwang22"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Joelwang22"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Joelwang22"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Joelwang22"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"        return new Order(this.order.getProductMap());","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Joelwang22"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Joelwang22"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nigel27022001":12,"Joelwang22":35}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Joelwang22"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Joelwang22"},"content":"    private final ArrayList\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Joelwang22"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Joelwang22"},"content":"            @JsonProperty(\"orders\") ArrayList\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Joelwang22"},"content":"        if (orders !\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Joelwang22"},"content":"            this.orders.addAll(orders);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Joelwang22"},"content":"        orders.addAll(source.getOrders().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Joelwang22"},"content":"                .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Joelwang22"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Joelwang22"},"content":"        final List\u003cOrder\u003e personOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"Joelwang22"},"content":"        for (JsonAdaptedOrder order : orders) {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"Joelwang22"},"content":"            personOrders.add(order.toModelType());","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"Joelwang22"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"Joelwang22"},"content":"        final ArrayList\u003cOrder\u003e modelOrders \u003d new ArrayList\u003c\u003e(personOrders);","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"Joelwang22"},"content":"        Person modelPerson \u003d new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"Joelwang22"},"content":"        modelPerson.setOrders(modelOrders);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"Joelwang22"},"content":"        return modelPerson;","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Joelwang22":21,"-":107}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Joelwang22"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Joelwang22"},"content":"    private FlowPane orders;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"Joelwang22"},"content":"        person.getOrders().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Joelwang22"},"content":"                .forEach(order -\u003e orders.getChildren().add(new Label(order.toString())));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Joelwang22":6,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Joelwang22"},"content":"      \u003cFlowPane fx:id\u003d\"orders\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Joelwang22":1,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"chonghaoen"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"chonghaoen"},"content":"        public void deleteOrder(int id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"chonghaoen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"chonghaoen"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"chonghaoen"},"content":"        public Order findOrderByIndex(int id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"chonghaoen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"chonghaoen"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"chonghaoen"},"content":"        public int getOrderListSize() {","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"chonghaoen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"nigel27022001"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"nigel27022001"},"content":"        public Optional\u003cPerson\u003e findPersonByPhoneNumber(String phoneNumber) {","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"nigel27022001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"nigel27022001"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"nigel27022001"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"nigel27022001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"nigel27022001"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"nigel27022001"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"nigel27022001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"nigel27022001":16,"chonghaoen":15,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CancelCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"chonghaoen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"chonghaoen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"chonghaoen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"chonghaoen"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"chonghaoen"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"chonghaoen"},"content":"public class CancelCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"chonghaoen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"chonghaoen"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"chonghaoen"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"chonghaoen"},"content":"        CancelCommand cancelCommand \u003d new CancelCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"chonghaoen"},"content":"        String expectedMessage \u003d String.format(CancelCommand.MESSAGE_CANCEL_ORDER_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"chonghaoen"},"content":"                INDEX_FIRST_ORDER.getOneBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"chonghaoen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"chonghaoen"},"content":"        expectedModel.deleteOrder(INDEX_FIRST_ORDER.getOneBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"chonghaoen"},"content":"        assertCommandSuccess(cancelCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"chonghaoen"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"chonghaoen"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"chonghaoen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getOrderListSize() + 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"chonghaoen"},"content":"        CancelCommand cancelCommand \u003d new CancelCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"chonghaoen"},"content":"        assertCommandFailure(cancelCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"chonghaoen"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"chonghaoen"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"chonghaoen"},"content":"        CancelCommand cancelFirstCommand \u003d new CancelCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"chonghaoen"},"content":"        CancelCommand cancelSecondCommand \u003d new CancelCommand(INDEX_SECOND_ORDER);","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"chonghaoen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"chonghaoen"},"content":"        assertTrue(cancelFirstCommand.equals(cancelFirstCommand));","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"chonghaoen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"chonghaoen"},"content":"        CancelCommand cancelFirstCommandCopy \u003d new CancelCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"chonghaoen"},"content":"        assertTrue(cancelFirstCommand.equals(cancelFirstCommandCopy));","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"chonghaoen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"chonghaoen"},"content":"        assertFalse(cancelFirstCommand.equals(1));","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"chonghaoen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"chonghaoen"},"content":"        assertFalse(cancelFirstCommand.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"chonghaoen"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"chonghaoen"},"content":"        assertFalse(cancelFirstCommand.equals(cancelSecondCommand));","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"chonghaoen"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"chonghaoen"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"chonghaoen"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"chonghaoen"},"content":"        CancelCommand cancelCommand \u003d new CancelCommand(targetIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"chonghaoen"},"content":"        String expected \u003d CancelCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"chonghaoen"},"content":"        assertEquals(expected, cancelCommand.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"chonghaoen":78}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCT_NAME;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCT_QUANTITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"chonghaoen"},"content":"    public static final String VALID_PRODUCT_CUPCAKE \u003d \"Cupcake\";","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"chonghaoen"},"content":"    public static final String VALID_PRODUCT_COOKIE \u003d \"Cookie\";","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"chonghaoen"},"content":"    public static final String VALID_PRODUCT_DOUGHNUT \u003d \"Doughnut\";","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"chonghaoen"},"content":"    public static final String VALID_QUANTITY_ONE \u003d \"1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"chonghaoen"},"content":"    public static final String VALID_QUANTITY_TWO \u003d \"2\";","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"chonghaoen"},"content":"    public static final String VALID_QUANTITY_THREE \u003d \"3\";","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"chonghaoen"},"content":"    public static final String INVALID_PRODUCT_DESC \u003d \" \" + PREFIX_PRODUCT_NAME + \"Cupcakes\u0026\"; // \u0027\u0026\u0027 not allowed","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"chonghaoen"},"content":"    public static final String INVALID_QUANTITY_DESC \u003d \" \" + PREFIX_PRODUCT_QUANTITY + \"a\"; // \u0027a\u0027 not allowed","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chonghaoen":10,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/CancelCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.logic.commands.CancelCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"chonghaoen"},"content":"public class CancelCommandParserTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"    private CancelCommandParser parser \u003d new CancelCommandParser();","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"chonghaoen"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"chonghaoen"},"content":"    public void parse_validArgs_returnsCancelCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"        assertParseSuccess(parser, \"1\", new CancelCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"chonghaoen"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"chonghaoen"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"chonghaoen":26}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"chonghaoen"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"chonghaoen"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"chonghaoen"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"chonghaoen"},"content":"            return orders;","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"chonghaoen":7,"-":108}},{"path":"src/test/java/seedu/address/model/order/OrderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import static seedu.address.testutil.TypicalOrders.CUPCAKES_AND_COOKIES;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import static seedu.address.testutil.TypicalOrders.CUPCAKES_ONLY;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import seedu.address.model.exceptions.OrderNotFoundException;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"public class OrderListTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    private final OrderList orderList \u003d new OrderList();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void contains_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderList.contains(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    public void contains_orderNotInList_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"        assertFalse(orderList.contains(CUPCAKES_ONLY));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    public void contains_orderInList_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"        orderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        assertTrue(orderList.contains(CUPCAKES_ONLY));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    public void contains_orderWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        orderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"        Order editedCupcakesAlice \u003d new OrderBuilder(CUPCAKES_ONLY).withIndex(1).withPerson(ALICE)","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"    public void add_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderList.addOrder(null, ALICE));","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"    public void editOrder_nullTargetOrderId_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderList.editOrder(0, CUPCAKES_ONLY));","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    public void editOrder_nullEditedOrder_throwsNullPointException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderList.editOrder(1, null));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"    public void editOrder_targetOrderNotInList_throwsOrderNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"        assertThrows(OrderNotFoundException.class, () -\u003e orderList.editOrder(3, CUPCAKES_ONLY));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"    public void editOrder_editedOrderIsSameOrder_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"        orderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"        orderList.editOrder(1, CUPCAKES_ONLY);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"        OrderList expectedOrderList \u003d new OrderList();","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"        expectedOrderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"        assertEquals(expectedOrderList, orderList);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"    public void editOrder_editedOrderHasSameCustomer_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"        orderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"        Order editedCupcakesAlice \u003d new OrderBuilder(CUPCAKES_AND_COOKIES).withIndex(1).withPerson(ALICE)","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"        orderList.editOrder(1, editedCupcakesAlice);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"        OrderList expectedOrderList \u003d new OrderList();","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"        expectedOrderList.addOrder(CUPCAKES_AND_COOKIES, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"        assertEquals(expectedOrderList, orderList);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"    public void delete_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderList.deleteOrder(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"    public void delete_orderDoesNotExist_throwsOrderNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"        assertThrows(OrderNotFoundException.class, () -\u003e orderList.deleteOrder(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"bertrandong"},"content":"    public void delete_existingOrder_deletesOrder() {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"bertrandong"},"content":"        //orderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"bertrandong"},"content":"        //orderList.deleteOrder(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"bertrandong"},"content":"        //OrderList expectedOrderList \u003d new OrderList();","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"bertrandong"},"content":"        //assertEquals(expectedOrderList, orderList);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"bertrandong"},"content":"    public void size_orderList_returnsNumberOfOrders() {","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"bertrandong"},"content":"        orderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"bertrandong"},"content":"        assertEquals(1, orderList.size());","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"bertrandong"},"content":"    public void getOrder_existingOrder_returnsOrder() {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"bertrandong"},"content":"        orderList.addOrder(CUPCAKES_ONLY, ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"bertrandong"},"content":"        Order expectedOrder \u003d CUPCAKES_ONLY;","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"bertrandong"},"content":"        assertEquals(expectedOrder, orderList.getOrder(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"bertrandong"},"content":"    public void getOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"bertrandong"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderList.getOrder(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"bertrandong"},"content":"    public void getOrder_orderDoesNotExist_throwsOrderNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"bertrandong"},"content":"        assertThrows(OrderNotFoundException.class, () -\u003e orderList.getOrder(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"bertrandong":123}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Joelwang22"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.model.order.Product;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"import seedu.address.model.order.Quantity;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Joelwang22"},"content":"    private static final Map\u003cProduct, Quantity\u003e INVALID_ORDER \u003d new Order().getProductMap();","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Joelwang22"},"content":"    private static final ArrayList\u003cJsonAdaptedOrder\u003e VALID_ORDERS \u003d (BENSON.getOrders().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Joelwang22"},"content":"            .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Joelwang22"},"content":"            .collect(Collectors.toCollection(ArrayList::new)));","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Joelwang22"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Joelwang22"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Joelwang22"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"nigel27022001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"nigel27022001"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Joelwang22"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"nigel27022001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"nigel27022001"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"Joelwang22"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"nigel27022001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"nigel27022001"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Joelwang22"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_ORDERS);","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nigel27022001":11,"Joelwang22":12,"-":100}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"chonghaoen"},"content":"     * Adds a new {@code Order} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"chonghaoen"},"content":"    public AddressBookBuilder withOrder(Order order) {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"chonghaoen"},"content":"        addressBook.addOrder(order, order.getCustomer());","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"chonghaoen"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"chonghaoen"},"content":"     * Builds the addressbook","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"chonghaoen"},"content":"     * @return the addressbook","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chonghaoen":14,"-":34}},{"path":"src/test/java/seedu/address/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"chonghaoen"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Product;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Quantity;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"chonghaoen"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"chonghaoen"},"content":" * A utility class to help with building Order objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":" *     {@code Order order \u003d new OrderBuilder().withIndex(1).withProductQuantity(\"Cupcakes\", \"2\").build();}","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"chonghaoen"},"content":"public class OrderBuilder {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"chonghaoen"},"content":"    public static final int DEFAULT_ID \u003d 1;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":"    public static final Person DEFAULT_PERSON \u003d TypicalPersons.ALICE;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"    private int id;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"    private Map\u003cProduct, Quantity\u003e productMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"chonghaoen"},"content":"    private Person person;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"chonghaoen"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"chonghaoen"},"content":"    public OrderBuilder() {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"chonghaoen"},"content":"        id \u003d DEFAULT_ID;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"chonghaoen"},"content":"        productMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"chonghaoen"},"content":"        person \u003d DEFAULT_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"chonghaoen"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"chonghaoen"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"chonghaoen"},"content":"        productMap \u003d orderToCopy.getProductMap();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"chonghaoen"},"content":"     * Sets the index of the {@code Order} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"chonghaoen"},"content":"    public OrderBuilder withIndex(int id) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"chonghaoen"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"chonghaoen"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"chonghaoen"},"content":"     * Adds to the productMap of the {@code Order} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"chonghaoen"},"content":"     * @param product the name of the product to add","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"chonghaoen"},"content":"     * @param quantity the number of the products to add","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"chonghaoen"},"content":"    public OrderBuilder withProductQuantity(String product, String quantity) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"chonghaoen"},"content":"        Product productToAdd \u003d new Product(product);","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"chonghaoen"},"content":"        Quantity quantityToAdd \u003d new Quantity(Integer.parseInt(quantity));","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"chonghaoen"},"content":"        this.productMap.put(productToAdd, quantityToAdd);","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"chonghaoen"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"chonghaoen"},"content":"     * Sets the {@code Person} of the {@code Order} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"chonghaoen"},"content":"    public OrderBuilder withPerson(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"chonghaoen"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"chonghaoen"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"chonghaoen"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"chonghaoen"},"content":"     * Builds the order","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"chonghaoen"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"chonghaoen"},"content":"     * @return the order","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"chonghaoen"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"chonghaoen"},"content":"    public Order build() {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"chonghaoen"},"content":"        Order order \u003d new Order(this.id);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"chonghaoen"},"content":"        order.setProductMap(this.productMap);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"chonghaoen"},"content":"        return order;","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"chonghaoen":80}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":"    public static final Index INDEX_FIRST_ORDER \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"    public static final Index INDEX_SECOND_ORDER \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"    public static final Index INDEX_THIRD_ORDER \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"chonghaoen":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chonghaoen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRODUCT_COOKIE;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRODUCT_CUPCAKE;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUANTITY_ONE;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUANTITY_THREE;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUANTITY_TWO;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"chonghaoen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"chonghaoen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"chonghaoen"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.OrderList;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"chonghaoen"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"chonghaoen"},"content":" * A utility class containing a list of {@code Order} objects to be used in tests.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"chonghaoen"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"chonghaoen"},"content":"public class TypicalOrders {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"chonghaoen"},"content":"    public static final Order CUPCAKES_ONLY \u003d new OrderBuilder().withIndex(1)","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"chonghaoen"},"content":"            .withProductQuantity(VALID_PRODUCT_CUPCAKE, VALID_QUANTITY_THREE).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"chonghaoen"},"content":"    public static final Order COOKIES_ONLY \u003d new OrderBuilder().withIndex(2)","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"chonghaoen"},"content":"            .withProductQuantity(VALID_PRODUCT_COOKIE, VALID_QUANTITY_TWO).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"chonghaoen"},"content":"    public static final Order CUPCAKES_AND_COOKIES \u003d new OrderBuilder().withIndex(1)","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"chonghaoen"},"content":"            .withProductQuantity(VALID_PRODUCT_CUPCAKE, VALID_QUANTITY_ONE)","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"chonghaoen"},"content":"            .withProductQuantity(VALID_PRODUCT_COOKIE, VALID_QUANTITY_TWO).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"chonghaoen"},"content":"    public static OrderList getTypicalOrderList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"chonghaoen"},"content":"        OrderList ol \u003d new OrderList();","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"chonghaoen"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"chonghaoen"},"content":"            ol.addOrder(order, order.getCustomer());","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"chonghaoen"},"content":"        return ol;","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"chonghaoen"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"chonghaoen"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"chonghaoen"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CUPCAKES_ONLY, COOKIES_ONLY, CUPCAKES_AND_COOKIES));","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"chonghaoen"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"chonghaoen"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"chonghaoen":42}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"chonghaoen"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalOrders;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"chonghaoen"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"chonghaoen"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"chonghaoen"},"content":"            ab.addOrder(order, order.getCustomer());","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"chonghaoen"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"chonghaoen":5,"-":76}}]
