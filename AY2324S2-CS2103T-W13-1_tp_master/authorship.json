[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kjw142857"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W13-1/tp/graph/badge.svg?token\u003dMZAGQZIFNS)](https://codecov.io/gh/AY2324S2-CS2103T-W13-1/tp)","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"kjw142857"},"content":"* This is **LoanGuard Pro, an application that helps business owners manage clients and their loan details**.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kjw142857"},"content":"  * to keep track of the items you have loaned out","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"kjw142857"},"content":"  * to view your history of loans by client","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"kjw142857"},"content":"* The project builds on an existing Address Book used for managing contact details, **adding in a loan tracker functionality**.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"kjw142857"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kjw142857"},"content":"* It is named `LoanGuard Pro` because it represents a more powerful version of an address book, that can also manage the loans of your contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kjw142857"},"content":"* For the detailed documentation of this project, see the **[LoanGuard Pro Product Website](https://ay2324s2-cs2103t-w13-1.github.io/tp/)**.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kjw142857"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kjw142857":9,"-":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kjw142857"},"content":"### Khor Jun Wei","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kjw142857"},"content":"\u003cimg src\u003d\"images/kjw142857.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kjw142857"},"content":"[[github](https://github.com/kjw142857)]","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"kjw142857"},"content":"[[portfolio](https://github.com/kjw142857)]","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kjw142857"},"content":"* Role: Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"kjw142857"},"content":"* Responsibilities: TBC","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"### Kyal Sin Min Thet","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"\u003cimg src\u003d\"images/marcus-ny.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"[[github](http://github.com/marcus-ny)]","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"[[portfolio](http://github.com/marcus-ny)]","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"* Responsibilities: TBC","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Joseph31416"},"content":"### Teoh Tze Tzun","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"\u003cimg src\u003d\"images/joseph31416.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Joseph31416"},"content":"[[github](https://github.com/Joseph31416)] [[portfolio](https://github.com/Joseph31416)]","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"narwhalsilent"},"content":"### Wang Junwu","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"narwhalsilent"},"content":"\u003cimg src\u003d\"images/narwhalsilent.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"narwhalsilent"},"content":"[[github](http://github.com/narwhalsilent)]","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"narwhalsilent"},"content":"[[portfolio](http://github.com/narwhalsilent)]","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"narwhalsilent"},"content":"* Responsibilities: TBC","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"xiaorui-ui"},"content":"### Zhang Xiaorui","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"xiaorui-ui"},"content":"\u003cimg src\u003d\"images/xiaorui-ui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"xiaorui-ui"},"content":"[[github](https://github.com/xiaorui-ui)]","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"xiaorui-ui"},"content":"[[portfolio](https://github.com/xiaorui-ui)]","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"xiaorui-ui"},"content":"* Responsibilities: TBC","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"marcus-ny":6,"xiaorui-ui":5,"Joseph31416":3,"-":34,"kjw142857":6,"narwhalsilent":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"  original source as well}","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"and edit diagrams.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"marcus-ny"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"marcus-ny"},"content":"the command `delete 1`.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"marcus-ny"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"marcus-ny"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"marcus-ny"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"marcus-ny"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"marcus-ny"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"marcus-ny"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"marcus-ny"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"marcus-ny"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"marcus-ny"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"marcus-ny"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"marcus-ny"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"marcus-ny"},"content":"visible GUI.","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"marcus-ny"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"marcus-ny"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"marcus-ny"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"marcus-ny"},"content":"is specified","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"marcus-ny"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"marcus-ny"},"content":"**API","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"marcus-ny"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"marcus-ny"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"marcus-ny"},"content":"call as an example.","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"marcus-ny"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"marcus-ny"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"marcus-ny"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"marcus-ny"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"marcus-ny"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"marcus-ny"},"content":"   several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"marcus-ny"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"marcus-ny"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"marcus-ny"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"marcus-ny"},"content":"  a `Command` object.","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"marcus-ny"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"marcus-ny"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"marcus-ny"},"content":"**API","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"marcus-ny"},"content":"** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"marcus-ny"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"marcus-ny"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"marcus-ny"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"marcus-ny"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"marcus-ny"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"marcus-ny"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"marcus-ny"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"marcus-ny"},"content":"**API","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"marcus-ny"},"content":"** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"marcus-ny"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"marcus-ny"},"content":"  objects.","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"marcus-ny"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"marcus-ny"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"marcus-ny"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"marcus-ny"},"content":"  that belong to the `Model`)","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"marcus-ny"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2024-03-07"},{"lineNumber":204,"author":{"gitId":"marcus-ny"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2024-03-07"},{"lineNumber":205,"author":{"gitId":"marcus-ny"},"content":"following operations:","lastModifiedDate":"2024-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"marcus-ny"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":208,"author":{"gitId":"marcus-ny"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":209,"author":{"gitId":"marcus-ny"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"marcus-ny"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2024-03-07"},{"lineNumber":212,"author":{"gitId":"marcus-ny"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"marcus-ny"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2024-03-07"},{"lineNumber":217,"author":{"gitId":"marcus-ny"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-03-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"marcus-ny"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2024-03-07"},{"lineNumber":222,"author":{"gitId":"marcus-ny"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2024-03-07"},{"lineNumber":223,"author":{"gitId":"marcus-ny"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2024-03-07"},{"lineNumber":224,"author":{"gitId":"marcus-ny"},"content":"state.","lastModifiedDate":"2024-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"marcus-ny"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2024-03-07"},{"lineNumber":229,"author":{"gitId":"marcus-ny"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2024-03-07"},{"lineNumber":230,"author":{"gitId":"marcus-ny"},"content":"the `addressBookStateList`.","lastModifiedDate":"2024-03-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"marcus-ny"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2024-03-07"},{"lineNumber":239,"author":{"gitId":"marcus-ny"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2024-03-07"},{"lineNumber":240,"author":{"gitId":"marcus-ny"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":261,"author":{"gitId":"marcus-ny"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2024-03-07"},{"lineNumber":262,"author":{"gitId":"marcus-ny"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-03-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"marcus-ny"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2024-03-07"},{"lineNumber":269,"author":{"gitId":"marcus-ny"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2024-03-07"},{"lineNumber":270,"author":{"gitId":"marcus-ny"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"marcus-ny"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2024-03-07"},{"lineNumber":275,"author":{"gitId":"marcus-ny"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2024-03-07"},{"lineNumber":276,"author":{"gitId":"marcus-ny"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2024-03-07"},{"lineNumber":277,"author":{"gitId":"marcus-ny"},"content":"desktop applications follow.","lastModifiedDate":"2024-03-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"xiaorui-ui"},"content":"The target user is businessman who satisfies the following criteria","lastModifiedDate":"2024-03-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"xiaorui-ui"},"content":"and wants to manage contacts faster than a typical mouse/GUI driven app. Typically,","lastModifiedDate":"2024-03-08"},{"lineNumber":331,"author":{"gitId":"xiaorui-ui"},"content":"they want to answer the following questions quickly:","lastModifiedDate":"2024-03-08"},{"lineNumber":332,"author":{"gitId":"xiaorui-ui"},"content":"* How much cash was loaned?","lastModifiedDate":"2024-03-10"},{"lineNumber":333,"author":{"gitId":"xiaorui-ui"},"content":"* To whom it was loaned to?","lastModifiedDate":"2024-03-08"},{"lineNumber":334,"author":{"gitId":"xiaorui-ui"},"content":"* When the person is due to return the loan?","lastModifiedDate":"2024-03-08"},{"lineNumber":335,"author":{"gitId":"xiaorui-ui"},"content":"* When did the person last loan?","lastModifiedDate":"2024-03-08"},{"lineNumber":336,"author":{"gitId":"xiaorui-ui"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":337,"author":{"gitId":"xiaorui-ui"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":338,"author":{"gitId":"xiaorui-ui"},"content":"**Value proposition**: Manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"xiaorui-ui"},"content":"Our address book is tailored for business owners whose job might involve loaning items on a ","lastModifiedDate":"2024-03-08"},{"lineNumber":341,"author":{"gitId":"xiaorui-ui"},"content":"regular basis. It simplifies loan categorization and tracks product quality post-return, ","lastModifiedDate":"2024-03-08"},{"lineNumber":342,"author":{"gitId":"xiaorui-ui"},"content":"ensuring efficient decision-making. Some boundaries include no detailed client reviews or ","lastModifiedDate":"2024-03-08"},{"lineNumber":343,"author":{"gitId":"xiaorui-ui"},"content":"personal loan management, as we focus solely on business loans and contact management for ","lastModifiedDate":"2024-03-08"},{"lineNumber":344,"author":{"gitId":"xiaorui-ui"},"content":"a select client group.","lastModifiedDate":"2024-03-08"},{"lineNumber":345,"author":{"gitId":"xiaorui-ui"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":346,"author":{"gitId":"xiaorui-ui"},"content":"Our software streamlines loanee management, preventing profit loss and enhancing partner relations.","lastModifiedDate":"2024-03-08"},{"lineNumber":347,"author":{"gitId":"xiaorui-ui"},"content":"It simplifies loan categorization and tracks product quality post-return, ensuring efficient ","lastModifiedDate":"2024-03-08"},{"lineNumber":348,"author":{"gitId":"xiaorui-ui"},"content":"decision-making. Some boundaries include no detailed client reviews or personal loan management, ","lastModifiedDate":"2024-03-08"},{"lineNumber":349,"author":{"gitId":"xiaorui-ui"},"content":"as we focus solely on business loans and contact management for a select client group.","lastModifiedDate":"2024-03-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"| Priority | As a …​                                           | I want to …​                                            | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"xiaorui-ui"},"content":"|----------|---------------------------------------------------|---------------------------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2024-03-10"},{"lineNumber":358,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | User who loans cash out regularly                 | Add loan details (loanee /cash amount) to the contact   | remember to collect debts at a later time                               |","lastModifiedDate":"2024-03-10"},{"lineNumber":359,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | User who loans cash out regularly                 | Add a deadline to a loan                                | chase after people more easily                                          |","lastModifiedDate":"2024-03-10"},{"lineNumber":360,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | User who loans cash out regularly                 | View my past loans                                      | know how much cash to expect in the near future                         |","lastModifiedDate":"2024-03-10"},{"lineNumber":361,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | User who loans cash out regularly                 | View my past loans                                      | decide whether to loan to a client again                                |","lastModifiedDate":"2024-03-10"},{"lineNumber":362,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | User who loans cash out regularly                 | See the overdue loans easily                            | chase after people more easily                                          |","lastModifiedDate":"2024-03-10"},{"lineNumber":363,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | User who values relationships                     | Send automated reminders to contacts with overdue loans | I can maintain good relations while ensuring the return of items        |","lastModifiedDate":"2024-03-10"},{"lineNumber":364,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | Busy user                                         | Keep track of all my loanees(view)                      | save time and use it for more meaningful activities                     |","lastModifiedDate":"2024-03-08"},{"lineNumber":365,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | Busy user                                         | Quickly view a summary of all outstanding loans(view)   | have an overview without going through each contact individually        ","lastModifiedDate":"2024-03-09"},{"lineNumber":366,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | User who loans cash                               | Track partial repayments                                | maintain accurate records of the outstanding balance                    ","lastModifiedDate":"2024-03-10"},{"lineNumber":367,"author":{"gitId":"xiaorui-ui"},"content":"| `* * *`  | User with a dynamic network                       | Delete loan                                             | my records always reflect the current status of each loan               |","lastModifiedDate":"2024-03-09"},{"lineNumber":368,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | User with a dynamic network                       | Update loan entries as situations change                | my records always reflect the current status of each loan               |","lastModifiedDate":"2024-03-10"},{"lineNumber":369,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | First time user                                   | See the available commands/usage manual                 | familiarize with the command structure                                  |","lastModifiedDate":"2024-03-08"},{"lineNumber":370,"author":{"gitId":"xiaorui-ui"},"content":"| `*`      | Intermediate user                                 | Learn shortcuts to commands                             | save time in the future                                                 |","lastModifiedDate":"2024-03-08"},{"lineNumber":371,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | Experienced user                                  | Omit certain parts of the CLI commands                  | perform tasks more efficiently and quickly                              |","lastModifiedDate":"2024-03-08"},{"lineNumber":372,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | Forgetful user                                    | Get reminders to collect cash                           | collect cash promptly                                                   |","lastModifiedDate":"2024-03-10"},{"lineNumber":373,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | Organised user                                    | Have a system to manage my loanees                      |                                                                         |","lastModifiedDate":"2024-03-08"},{"lineNumber":374,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | Detail-oriented user                              | Add notes to each loan entry                            | I can record specific details or conditions of the loan                 |                                                               |","lastModifiedDate":"2024-03-10"},{"lineNumber":375,"author":{"gitId":"xiaorui-ui"},"content":"| `* `     | User who lends frequently to the same individuals | View aggregated loan statistics per contact             | I can understand our loan history at a glance                           |","lastModifiedDate":"2024-03-10"},{"lineNumber":376,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | Frequent lender                                   | Track the history of cash loaned to and from a contact  | I can reference past transactions during conversations                  |","lastModifiedDate":"2024-03-10"},{"lineNumber":377,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | User looking to minimize losses                   | Flag high-risk loans based on past behavior             | I can make more informed lending decisions in the future                |","lastModifiedDate":"2024-03-10"},{"lineNumber":378,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | User concerned with privacy                       | Mark certain contacts or loan entries as private        | they are not visible during casual browsing of the address book         |","lastModifiedDate":"2024-03-10"},{"lineNumber":379,"author":{"gitId":"xiaorui-ui"},"content":"| `* *`    | Proactive user                                    | Mark certain contacts or loan entries as private        | they are not visible during casual browsing of the address book         |","lastModifiedDate":"2024-03-10"},{"lineNumber":380,"author":{"gitId":"xiaorui-ui"},"content":"| `*`      | User who appreciates convenience                  | Integrate the application with my calendar              | loan due dates and follow-up reminders are automatically added          |","lastModifiedDate":"2024-03-10"},{"lineNumber":381,"author":{"gitId":"xiaorui-ui"},"content":"| `*`      | User who values clarity                           | Print or export detailed loan reports                   | I can have a physical or digital record for personal use or discussions |","lastModifiedDate":"2024-03-10"},{"lineNumber":382,"author":{"gitId":"xiaorui-ui"},"content":"| `*`      | Collaborative user                                | Share loan entries with another user of the application | we can co-manage loans or items owned jointly                           |","lastModifiedDate":"2024-03-10"},{"lineNumber":383,"author":{"gitId":"xiaorui-ui"},"content":"| `*`      | User with international contacts                  | Store and view currency information for cash loans      | I can accurately track and manage international loans                   |","lastModifiedDate":"2024-03-10"},{"lineNumber":384,"author":{"gitId":"xiaorui-ui"},"content":"| `*`      | User who appreciates personalization              | Customize the notification settings for loan reminders  | I can receive them through my preferred communication channel           |","lastModifiedDate":"2024-03-10"},{"lineNumber":385,"author":{"gitId":"xiaorui-ui"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"marcus-ny"},"content":"(For all use cases below, the **System** is the `LoanGuard Pro` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2024-03-07"},{"lineNumber":391,"author":{"gitId":"marcus-ny"},"content":"otherwise)","lastModifiedDate":"2024-03-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":393,"author":{"gitId":"marcus-ny"},"content":"#### Use case: UC1 - Delete a contact","lastModifiedDate":"2024-03-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":395,"author":{"gitId":"marcus-ny"},"content":"Precondition: `list` command shows a numbered list of contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"marcus-ny"},"content":"#### MSS","lastModifiedDate":"2024-03-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"marcus-ny"},"content":"1. User requests to delete a contact, specifying the index.","lastModifiedDate":"2024-03-07"},{"lineNumber":400,"author":{"gitId":"marcus-ny"},"content":"2. System deletes the contact from the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":401,"author":{"gitId":"marcus-ny"},"content":"3. System shows the contact that was deleted in the status message.","lastModifiedDate":"2024-03-07"},{"lineNumber":402,"author":{"gitId":"marcus-ny"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"marcus-ny"},"content":"#### Extensions","lastModifiedDate":"2024-03-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"marcus-ny"},"content":"1a. Index is invalid (e.g. negative, zero, or larger than the list size)  ","lastModifiedDate":"2024-03-07"},{"lineNumber":407,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows an error message in the status message.","lastModifiedDate":"2024-03-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"marcus-ny"},"content":"#### Use case: UC2 - Find a person by name","lastModifiedDate":"2024-03-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"marcus-ny"},"content":"#### MSS","lastModifiedDate":"2024-03-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"marcus-ny"},"content":"1. User searches for a contact with desired prompt.","lastModifiedDate":"2024-03-07"},{"lineNumber":415,"author":{"gitId":"marcus-ny"},"content":"2. System shows the list of contacts that match the prompt.","lastModifiedDate":"2024-03-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"marcus-ny"},"content":"#### Extensions","lastModifiedDate":"2024-03-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"marcus-ny"},"content":"1a. User searches for a contact using an empty prompt.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":421,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows an error message in the status message.","lastModifiedDate":"2024-03-07"},{"lineNumber":422,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"marcus-ny"},"content":"1a. No contact matches the prompt.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":425,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows a message in the status message that no contact matches the prompt.","lastModifiedDate":"2024-03-07"},{"lineNumber":426,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"marcus-ny"},"content":"#### Use case: UC3 - Link a loan to contact","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"marcus-ny"},"content":"#### MSS","lastModifiedDate":"2024-03-07"},{"lineNumber":431,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":432,"author":{"gitId":"marcus-ny"},"content":"1. User links a contact with a loan, specifying the contact name and loan details.","lastModifiedDate":"2024-03-07"},{"lineNumber":433,"author":{"gitId":"marcus-ny"},"content":"2. System links the loan to the contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":434,"author":{"gitId":"marcus-ny"},"content":"3. System shows the contact and the loan that was linked successfully in the status message.","lastModifiedDate":"2024-03-07"},{"lineNumber":435,"author":{"gitId":"marcus-ny"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":436,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":437,"author":{"gitId":"marcus-ny"},"content":"#### Extensions","lastModifiedDate":"2024-03-07"},{"lineNumber":438,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"marcus-ny"},"content":"1a. Contact does not exist in the address book.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":440,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows an error message that no contact with the name exists.","lastModifiedDate":"2024-03-07"},{"lineNumber":441,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":442,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":443,"author":{"gitId":"marcus-ny"},"content":"1a. Loan details are invalid (e.g. empty, incomplete, wrong format).  ","lastModifiedDate":"2024-03-07"},{"lineNumber":444,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows an error message that the loan details are invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":445,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":447,"author":{"gitId":"marcus-ny"},"content":"1a. Multiple contacts with the same name exist.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":448,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows list of contacts with the same name and asks user to choose one by index.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":449,"author":{"gitId":"marcus-ny"},"content":"1a2. User chooses a contact by index.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"marcus-ny"},"content":"1a3. System links the loan to the chosen contact.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":451,"author":{"gitId":"marcus-ny"},"content":"1a4. System shows the contact and the loan that was linked successfully in the status message.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":452,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":453,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":454,"author":{"gitId":"marcus-ny"},"content":"#### Use case: UC4 - View all loans linked to particular contact","lastModifiedDate":"2024-03-07"},{"lineNumber":455,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":456,"author":{"gitId":"marcus-ny"},"content":"#### MSS","lastModifiedDate":"2024-03-07"},{"lineNumber":457,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":458,"author":{"gitId":"marcus-ny"},"content":"1. User requests to view all loans linked to a particular contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":459,"author":{"gitId":"marcus-ny"},"content":"2. System shows the list of loans linked to the contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":460,"author":{"gitId":"marcus-ny"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":461,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":462,"author":{"gitId":"marcus-ny"},"content":"#### Extensions","lastModifiedDate":"2024-03-07"},{"lineNumber":463,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":464,"author":{"gitId":"marcus-ny"},"content":"1a. Contact name does not exist in the address book.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":465,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows an error message that no contact with the name exists.","lastModifiedDate":"2024-03-07"},{"lineNumber":466,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":467,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":468,"author":{"gitId":"marcus-ny"},"content":"1a. Multiple contacts with the same name exist.","lastModifiedDate":"2024-03-07"},{"lineNumber":469,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows list of contacts with the same name and asks user to choose one by index.","lastModifiedDate":"2024-03-07"},{"lineNumber":470,"author":{"gitId":"marcus-ny"},"content":"1a2. User chooses a contact by index.","lastModifiedDate":"2024-03-07"},{"lineNumber":471,"author":{"gitId":"marcus-ny"},"content":"1a3. System shows the list of loans linked to the chosen contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":472,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":473,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":474,"author":{"gitId":"marcus-ny"},"content":"#### Use case: UC5 - Clear a loan from contact","lastModifiedDate":"2024-03-07"},{"lineNumber":475,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":476,"author":{"gitId":"marcus-ny"},"content":"#### MSS","lastModifiedDate":"2024-03-07"},{"lineNumber":477,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":478,"author":{"gitId":"marcus-ny"},"content":"1. User \u003cu\u003eviews all loans linked to the contact (UC4)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":479,"author":{"gitId":"marcus-ny"},"content":"2. User issues `clear` command with the name of contact and the index of loan to be cleared.","lastModifiedDate":"2024-03-07"},{"lineNumber":480,"author":{"gitId":"marcus-ny"},"content":"3. System clears the loan from the contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":481,"author":{"gitId":"marcus-ny"},"content":"4. System shows the contact and the loan that was cleared successfully in the status message.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":482,"author":{"gitId":"marcus-ny"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":483,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":484,"author":{"gitId":"marcus-ny"},"content":"#### Extensions","lastModifiedDate":"2024-03-07"},{"lineNumber":485,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":486,"author":{"gitId":"marcus-ny"},"content":"1a. Index is invalid (e.g. negative, zero, or larger than the list size)","lastModifiedDate":"2024-03-07"},{"lineNumber":487,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows an error message that the index is invalid.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":488,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":489,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":490,"author":{"gitId":"marcus-ny"},"content":"#### Use case: UC6 - Mark a loan as returned","lastModifiedDate":"2024-03-07"},{"lineNumber":491,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":492,"author":{"gitId":"marcus-ny"},"content":"#### MSS","lastModifiedDate":"2024-03-07"},{"lineNumber":493,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":494,"author":{"gitId":"marcus-ny"},"content":"1. User \u003cu\u003eviews all loans linked to the contact (UC4)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":495,"author":{"gitId":"marcus-ny"},"content":"2. User marks a loan as returned specifying contact name and loan index.","lastModifiedDate":"2024-03-07"},{"lineNumber":496,"author":{"gitId":"marcus-ny"},"content":"3. System marks the loan as returned.","lastModifiedDate":"2024-03-07"},{"lineNumber":497,"author":{"gitId":"marcus-ny"},"content":"4. System shows the contact and the loan that was marked as returned successfully in the status message.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":498,"author":{"gitId":"marcus-ny"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":499,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":500,"author":{"gitId":"marcus-ny"},"content":"#### Extensions","lastModifiedDate":"2024-03-07"},{"lineNumber":501,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":502,"author":{"gitId":"marcus-ny"},"content":"1a. Index is invalid (e.g. negative, zero, or larger than the list size)  ","lastModifiedDate":"2024-03-07"},{"lineNumber":503,"author":{"gitId":"marcus-ny"},"content":"1a1. System shows an error message that the index is invalid.  ","lastModifiedDate":"2024-03-07"},{"lineNumber":504,"author":{"gitId":"marcus-ny"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"marcus-ny"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"marcus-ny"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"marcus-ny"},"content":"4. Should be able to handle up to 100 active (not archived) loans per contact without a noticeable sluggishness in","lastModifiedDate":"2024-03-07"},{"lineNumber":513,"author":{"gitId":"marcus-ny"},"content":"   performance for typical","lastModifiedDate":"2024-03-07"},{"lineNumber":514,"author":{"gitId":"marcus-ny"},"content":"   usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":515,"author":{"gitId":"marcus-ny"},"content":"5. Returned loans should be archived instead of deleted for future reference.","lastModifiedDate":"2024-03-07"},{"lineNumber":516,"author":{"gitId":"marcus-ny"},"content":"6. The archived data should be stored for at least 3 years.","lastModifiedDate":"2024-03-07"},{"lineNumber":517,"author":{"gitId":"marcus-ny"},"content":"7. Should be able to support multiple user sessions with password authentication on the same device.","lastModifiedDate":"2024-03-07"},{"lineNumber":518,"author":{"gitId":"marcus-ny"},"content":"8. Archived data should be encrypted and only accessible by authorized users (admin and the user who created the data).","lastModifiedDate":"2024-03-07"},{"lineNumber":519,"author":{"gitId":"marcus-ny"},"content":"9. Loan amounts should be in a single currency (e.g. USD, SGD, EUR, etc.) and should be formatted as per the currency","lastModifiedDate":"2024-03-07"},{"lineNumber":520,"author":{"gitId":"marcus-ny"},"content":"   standards.","lastModifiedDate":"2024-03-07"},{"lineNumber":521,"author":{"gitId":"marcus-ny"},"content":"10. Loan deadlines should not be more than 100 years from the date of loan creation.","lastModifiedDate":"2024-03-07"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"xiaorui-ui"},"content":"Order is roughly according to the order in which they first appear in the guide.","lastModifiedDate":"2024-03-10"},{"lineNumber":526,"author":{"gitId":"xiaorui-ui"},"content":"* **Architecture Diagram**: A diagram that shows how the different components interact with each","lastModifiedDate":"2024-03-10"},{"lineNumber":527,"author":{"gitId":"xiaorui-ui"},"content":"other at a high level.","lastModifiedDate":"2024-03-10"},{"lineNumber":528,"author":{"gitId":"xiaorui-ui"},"content":"* **Sequence Diagram**: A diagram that shows how the different components interact with each other ","lastModifiedDate":"2024-03-10"},{"lineNumber":529,"author":{"gitId":"xiaorui-ui"},"content":"when a particular command is executed.","lastModifiedDate":"2024-03-10"},{"lineNumber":530,"author":{"gitId":"xiaorui-ui"},"content":"* **API**: Application Programming Interface, a set of rules that allows different software applications ","lastModifiedDate":"2024-03-10"},{"lineNumber":531,"author":{"gitId":"xiaorui-ui"},"content":"to communicate with each other to form an entire system.","lastModifiedDate":"2024-03-10"},{"lineNumber":532,"author":{"gitId":"xiaorui-ui"},"content":"* **UI**: User Interface","lastModifiedDate":"2024-03-10"},{"lineNumber":533,"author":{"gitId":"xiaorui-ui"},"content":"* **OOP**: Object-Oriented Programming, a programming paradigm based on the concept of \"objects\", ","lastModifiedDate":"2024-03-10"},{"lineNumber":534,"author":{"gitId":"xiaorui-ui"},"content":"which can contain data and code: data in the form of fields, and code in the form of procedures.","lastModifiedDate":"2024-03-10"},{"lineNumber":535,"author":{"gitId":"xiaorui-ui"},"content":"The objects interact with each other. ","lastModifiedDate":"2024-03-10"},{"lineNumber":536,"author":{"gitId":"xiaorui-ui"},"content":"* **Class**: Classes are used to create and define objects. A feature of OOP.","lastModifiedDate":"2024-03-10"},{"lineNumber":537,"author":{"gitId":"xiaorui-ui"},"content":"* **JSON**: JavaScript Object Notation, a lightweight data-interchange format. Files of this format ","lastModifiedDate":"2024-03-10"},{"lineNumber":538,"author":{"gitId":"xiaorui-ui"},"content":"are used to store loan data on the hard disk.","lastModifiedDate":"2024-03-10"},{"lineNumber":539,"author":{"gitId":"xiaorui-ui"},"content":"* **Data archiving**: The process of moving data that is no longer actively used to a separate storage","lastModifiedDate":"2024-03-10"},{"lineNumber":540,"author":{"gitId":"xiaorui-ui"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2024-03-10"},{"lineNumber":541,"author":{"gitId":"xiaorui-ui"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2024-03-10"},{"lineNumber":542,"author":{"gitId":"xiaorui-ui"},"content":"* **User stories**: A user story is an informal, general explanation of a software feature written from the ","lastModifiedDate":"2024-03-10"},{"lineNumber":543,"author":{"gitId":"xiaorui-ui"},"content":"perspective of the end user.","lastModifiedDate":"2024-03-10"},{"lineNumber":544,"author":{"gitId":"xiaorui-ui"},"content":"* **Cash**: Money in the form of coins or notes, as opposed to cheques or credit. *All loans in this project ","lastModifiedDate":"2024-03-10"},{"lineNumber":545,"author":{"gitId":"xiaorui-ui"},"content":"are in cash, rather than items*. For consistency, we will avoid using the term \"money\" in this guide.","lastModifiedDate":"2024-03-10"},{"lineNumber":546,"author":{"gitId":"xiaorui-ui"},"content":"* **Currency**: Money of a certain country(e.g. USD, SGD, EUR for United States Dollars, SinGapore Dollars, ","lastModifiedDate":"2024-03-10"},{"lineNumber":547,"author":{"gitId":"xiaorui-ui"},"content":"and EURos respectively).","lastModifiedDate":"2024-03-10"},{"lineNumber":548,"author":{"gitId":"xiaorui-ui"},"content":"* **Use cases**: A specific situation in which a product or service could potentially be used.","lastModifiedDate":"2024-03-10"},{"lineNumber":549,"author":{"gitId":"xiaorui-ui"},"content":"* **Actor**: A person or thing that performs an action.","lastModifiedDate":"2024-03-10"},{"lineNumber":550,"author":{"gitId":"xiaorui-ui"},"content":"* **MSS**: Main Success Scenario, the most common path through a use case.","lastModifiedDate":"2024-03-10"},{"lineNumber":551,"author":{"gitId":"xiaorui-ui"},"content":"* **Extensions**: The alternative paths through a use case.","lastModifiedDate":"2024-03-10"},{"lineNumber":552,"author":{"gitId":"xiaorui-ui"},"content":"* **Non-Functional Requirements**: A requirement that specifies criteria that can be used to judge the operation of ","lastModifiedDate":"2024-03-10"},{"lineNumber":553,"author":{"gitId":"xiaorui-ui"},"content":"a system, rather than specific behaviours.","lastModifiedDate":"2024-03-10"},{"lineNumber":554,"author":{"gitId":"xiaorui-ui"},"content":"* **Mainstream OS**: Windows, Linux, Unix, or MacOS","lastModifiedDate":"2024-03-10"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"marcus-ny"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2024-03-07"},{"lineNumber":574,"author":{"gitId":"marcus-ny"},"content":"       optimum.","lastModifiedDate":"2024-03-07"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"marcus-ny"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-03-07"},{"lineNumber":593,"author":{"gitId":"marcus-ny"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-07"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"marcus-ny":210,"xiaorui-ui":79,"-":320}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joseph31416"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"Joseph31416"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Joseph31416"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Joseph31416"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Joseph31416"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Joseph31416"},"content":" * A utility class to handle date parsing and formatting.","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Joseph31416"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Joseph31416"},"content":"public class DateUtil {","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Joseph31416"},"content":"    private static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Joseph31416"},"content":"    private static final SimpleDateFormat DATE_FORMATTER \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Joseph31416"},"content":"     * Parses a date string into a Date object.","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Joseph31416"},"content":"     *","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Joseph31416"},"content":"     * @param date The date string to parse.","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Joseph31416"},"content":"     * @return The parsed Date object.","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Joseph31416"},"content":"     * @throws IllegalValueException If the date string is not in the correct format.","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Joseph31416"},"content":"    public static Date parse(String date) throws IllegalValueException {","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Joseph31416"},"content":"        try {","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"            return DATE_FORMATTER.parse(date);","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Joseph31416"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Joseph31416"},"content":"            throw new IllegalValueException(DATE_FORMAT + \" is the only supported date format.\");","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"     * Formats a Date object into a date string.","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"     *","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Joseph31416"},"content":"     * @param date The Date object to format.","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Joseph31416"},"content":"     * @return The formatted date string.","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Joseph31416"},"content":"    public static String format(Date date) {","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Joseph31416"},"content":"        return DATE_FORMATTER.format(date);","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"Joseph31416"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"Joseph31416":42}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.LoanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"Joseph31416"},"content":"        LoanRecords updatedLoanRecords \u003d editPersonDescriptor.getLoanRecords().orElse(personToEdit.getLoanRecords());","lastModifiedDate":"2024-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"Joseph31416"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedLoanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"Joseph31416"},"content":"        private LoanRecords loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"Joseph31416"},"content":"            setLoanRecords(toCopy.loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"Joseph31416"},"content":"        public void setLoanRecords(LoanRecords loanRecords) {","lastModifiedDate":"2024-03-10"},{"lineNumber":217,"author":{"gitId":"Joseph31416"},"content":"            this.loanRecords \u003d loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":218,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":219,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":220,"author":{"gitId":"Joseph31416"},"content":"        public Optional\u003cLoanRecords\u003e getLoanRecords() {","lastModifiedDate":"2024-03-10"},{"lineNumber":221,"author":{"gitId":"Joseph31416"},"content":"            return Optional.ofNullable(loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":222,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":223,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"Joseph31416"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-10"},{"lineNumber":241,"author":{"gitId":"Joseph31416"},"content":"                    \u0026\u0026 Objects.equals(loanRecords, otherEditPersonDescriptor.loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Joseph31416":15,"-":240}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.LoanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"Joseph31416"},"content":"        LoanRecords loanRecords \u003d new LoanRecords();","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"Joseph31416"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Joseph31416":3,"-":60}},{"path":"src/main/java/seedu/address/model/person/Loan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joseph31416"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"Joseph31416"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Joseph31416"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Joseph31416"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Joseph31416"},"content":" * Represents a Loan in the address book.","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Joseph31416"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Joseph31416"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Joseph31416"},"content":"public class Loan {","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Joseph31416"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Loans must be positive and have \"","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Joseph31416"},"content":"                                                    + \"a start date before the end date.\";","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Joseph31416"},"content":"    private final int id;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Joseph31416"},"content":"    private final float amount;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Joseph31416"},"content":"    private final Date startDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Joseph31416"},"content":"    private final Date endDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Joseph31416"},"content":"     * Constructs a {@code Loan} with a given id.","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Joseph31416"},"content":"     *","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Joseph31416"},"content":"     * @param id A valid id.","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"     * @param amount A valid amount.","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Joseph31416"},"content":"     * @param startDate A valid start date.","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Joseph31416"},"content":"     * @param endDate A valid end date.","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Joseph31416"},"content":"    public Loan(int id, float amount, Date startDate, Date endDate) {","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"Joseph31416"},"content":"        requireAllNonNull(id, amount, startDate, endDate);","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Joseph31416"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Joseph31416"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Joseph31416"},"content":"     * Returns true if a given float is a valid amount.","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"Joseph31416"},"content":"    public static boolean isValidAmount(float amount) {","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"Joseph31416"},"content":"        return amount \u003e 0;","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"Joseph31416"},"content":"     * Returns true if a given start date and end date are valid.","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"Joseph31416"},"content":"    public static boolean isValidDates(Date startDate, Date endDate) {","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"Joseph31416"},"content":"        return startDate.before(endDate);","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"Joseph31416"},"content":"    public int getId() {","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"Joseph31416"},"content":"        return id;","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"Joseph31416"},"content":"    public float getAmount() {","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"Joseph31416"},"content":"        return amount;","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"Joseph31416"},"content":"    public Date getStartDate() {","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"Joseph31416"},"content":"        return startDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":63,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"Joseph31416"},"content":"    public Date getEndDate() {","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"Joseph31416"},"content":"        return endDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":67,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":68,"author":{"gitId":"Joseph31416"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":69,"author":{"gitId":"Joseph31416"},"content":"    public String toString() {","lastModifiedDate":"2024-03-10"},{"lineNumber":70,"author":{"gitId":"Joseph31416"},"content":"        return String.format(\"$%.2f, %s, %s\", amount, startDate, endDate);","lastModifiedDate":"2024-03-10"},{"lineNumber":71,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":72,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":73,"author":{"gitId":"Joseph31416"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":74,"author":{"gitId":"Joseph31416"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-10"},{"lineNumber":75,"author":{"gitId":"Joseph31416"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-10"},{"lineNumber":76,"author":{"gitId":"Joseph31416"},"content":"            return true;","lastModifiedDate":"2024-03-10"},{"lineNumber":77,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":78,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":79,"author":{"gitId":"Joseph31416"},"content":"        if (!(other instanceof Loan)) {","lastModifiedDate":"2024-03-10"},{"lineNumber":80,"author":{"gitId":"Joseph31416"},"content":"            return false;","lastModifiedDate":"2024-03-10"},{"lineNumber":81,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":82,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":83,"author":{"gitId":"Joseph31416"},"content":"        Loan otherLoan \u003d (Loan) other;","lastModifiedDate":"2024-03-10"},{"lineNumber":84,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":85,"author":{"gitId":"Joseph31416"},"content":"        return id \u003d\u003d otherLoan.id;","lastModifiedDate":"2024-03-10"},{"lineNumber":86,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":87,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":88,"author":{"gitId":"Joseph31416"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":89,"author":{"gitId":"Joseph31416"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-10"},{"lineNumber":90,"author":{"gitId":"Joseph31416"},"content":"        return id;","lastModifiedDate":"2024-03-10"},{"lineNumber":91,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":92,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":93,"author":{"gitId":"Joseph31416"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"Joseph31416":93}},{"path":"src/main/java/seedu/address/model/person/LoanRecords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joseph31416"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"Joseph31416"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Joseph31416"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Joseph31416"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Joseph31416"},"content":"import java.util.List;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Joseph31416"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Joseph31416"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Joseph31416"},"content":" * Represents a list of loans in the address book.","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Joseph31416"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Joseph31416"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Joseph31416"},"content":"public class LoanRecords {","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Joseph31416"},"content":"    private static final String DATE_MESSAGE_CONSTRAINTS \u003d \"Dates must be in the format dd-MM-yyyy.\";","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Joseph31416"},"content":"    private final List\u003cLoan\u003e loans;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Joseph31416"},"content":"    private int nextLoanId;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Joseph31416"},"content":"     * Constructs a {@code LoanRecords}.","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Joseph31416"},"content":"    public LoanRecords() {","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Joseph31416"},"content":"        loans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Joseph31416"},"content":"        nextLoanId \u003d 1;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"     * Constructs a {@code LoanRecords} with a given id.","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"     * @param nextLoanId A valid id.","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Joseph31416"},"content":"    public LoanRecords(List\u003cLoan\u003e loans, int nextLoanId) {","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Joseph31416"},"content":"        requireAllNonNull(loans);","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Joseph31416"},"content":"        this.loans \u003d loans;","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Joseph31416"},"content":"        this.nextLoanId \u003d nextLoanId;","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"Joseph31416"},"content":"     * Adds a loan to the list of loans.","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"Joseph31416"},"content":"     * @param loan A valid loan.","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"Joseph31416"},"content":"    private void addLoan(Loan loan) {","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"Joseph31416"},"content":"        loans.add(loan);","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"Joseph31416"},"content":"        updateNextLoanId();","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"Joseph31416"},"content":"     * Adds a loan to the list of loans.","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"Joseph31416"},"content":"     * @param amount A valid amount.","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"Joseph31416"},"content":"     * @param startDate A valid start date.","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"Joseph31416"},"content":"     * @param endDate A valid end date.","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"Joseph31416"},"content":"    public void addLoan(float amount, Date startDate, Date endDate) {","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"Joseph31416"},"content":"        Loan loan \u003d new Loan(nextLoanId, amount, startDate, endDate);","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"Joseph31416"},"content":"        addLoan(loan);","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":63,"author":{"gitId":"Joseph31416"},"content":"     * Adds a loan to the list of loans.","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"Joseph31416"},"content":"     * @param amount A valid amount.","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"Joseph31416"},"content":"     * @param startDate A valid start date.","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"Joseph31416"},"content":"     * @param endDate A valid end date.","lastModifiedDate":"2024-03-10"},{"lineNumber":67,"author":{"gitId":"Joseph31416"},"content":"     * @throws IllegalValueException If the date string is not in the correct format.","lastModifiedDate":"2024-03-10"},{"lineNumber":68,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":69,"author":{"gitId":"Joseph31416"},"content":"    public void addLoan(float amount, String startDate, String endDate) throws IllegalValueException {","lastModifiedDate":"2024-03-10"},{"lineNumber":70,"author":{"gitId":"Joseph31416"},"content":"        try {","lastModifiedDate":"2024-03-10"},{"lineNumber":71,"author":{"gitId":"Joseph31416"},"content":"            Date start \u003d DateUtil.parse(startDate);","lastModifiedDate":"2024-03-10"},{"lineNumber":72,"author":{"gitId":"Joseph31416"},"content":"            Date end \u003d DateUtil.parse(endDate);","lastModifiedDate":"2024-03-10"},{"lineNumber":73,"author":{"gitId":"Joseph31416"},"content":"            addLoan(amount, start, end);","lastModifiedDate":"2024-03-10"},{"lineNumber":74,"author":{"gitId":"Joseph31416"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2024-03-10"},{"lineNumber":75,"author":{"gitId":"Joseph31416"},"content":"            throw new IllegalValueException(LoanRecords.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-10"},{"lineNumber":76,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":77,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":78,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":79,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":80,"author":{"gitId":"Joseph31416"},"content":"     * Removes a loan from the list of loans.","lastModifiedDate":"2024-03-10"},{"lineNumber":81,"author":{"gitId":"Joseph31416"},"content":"     * @param loan A valid loan.","lastModifiedDate":"2024-03-10"},{"lineNumber":82,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":83,"author":{"gitId":"Joseph31416"},"content":"    public void removeLoan(Loan loan) {","lastModifiedDate":"2024-03-10"},{"lineNumber":84,"author":{"gitId":"Joseph31416"},"content":"        loans.remove(loan);","lastModifiedDate":"2024-03-10"},{"lineNumber":85,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":86,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":87,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":88,"author":{"gitId":"Joseph31416"},"content":"     * @param idx A valid index.","lastModifiedDate":"2024-03-10"},{"lineNumber":89,"author":{"gitId":"Joseph31416"},"content":"     * @return The loan at the specified index.","lastModifiedDate":"2024-03-10"},{"lineNumber":90,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":91,"author":{"gitId":"Joseph31416"},"content":"    public Loan getLoan(int idx) {","lastModifiedDate":"2024-03-10"},{"lineNumber":92,"author":{"gitId":"Joseph31416"},"content":"        return loans.get(idx);","lastModifiedDate":"2024-03-10"},{"lineNumber":93,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":94,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":95,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":96,"author":{"gitId":"Joseph31416"},"content":"     * @return A list of loans.","lastModifiedDate":"2024-03-10"},{"lineNumber":97,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":98,"author":{"gitId":"Joseph31416"},"content":"    public List\u003cLoan\u003e getLoanList() {","lastModifiedDate":"2024-03-10"},{"lineNumber":99,"author":{"gitId":"Joseph31416"},"content":"        return new ArrayList\u003c\u003e(loans);","lastModifiedDate":"2024-03-10"},{"lineNumber":100,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":101,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":102,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":103,"author":{"gitId":"Joseph31416"},"content":"     * @return The id of the next loan.","lastModifiedDate":"2024-03-10"},{"lineNumber":104,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":105,"author":{"gitId":"Joseph31416"},"content":"    public int getNextLoanId() {","lastModifiedDate":"2024-03-10"},{"lineNumber":106,"author":{"gitId":"Joseph31416"},"content":"        return nextLoanId;","lastModifiedDate":"2024-03-10"},{"lineNumber":107,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":108,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":109,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":110,"author":{"gitId":"Joseph31416"},"content":"     * Updates the id of the next loan.","lastModifiedDate":"2024-03-10"},{"lineNumber":111,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":112,"author":{"gitId":"Joseph31416"},"content":"    public void updateNextLoanId() {","lastModifiedDate":"2024-03-10"},{"lineNumber":113,"author":{"gitId":"Joseph31416"},"content":"        nextLoanId++;","lastModifiedDate":"2024-03-10"},{"lineNumber":114,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":115,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":116,"author":{"gitId":"Joseph31416"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":117,"author":{"gitId":"Joseph31416"},"content":"    public String toString() {","lastModifiedDate":"2024-03-10"},{"lineNumber":118,"author":{"gitId":"Joseph31416"},"content":"        String output \u003d \"Loans:\\n\";","lastModifiedDate":"2024-03-10"},{"lineNumber":119,"author":{"gitId":"Joseph31416"},"content":"        int idx \u003d 1;","lastModifiedDate":"2024-03-10"},{"lineNumber":120,"author":{"gitId":"Joseph31416"},"content":"        for (Loan loan : loans) {","lastModifiedDate":"2024-03-10"},{"lineNumber":121,"author":{"gitId":"Joseph31416"},"content":"            output +\u003d idx + \". \" + loan.toString() + \"\\n\";","lastModifiedDate":"2024-03-10"},{"lineNumber":122,"author":{"gitId":"Joseph31416"},"content":"            idx++;","lastModifiedDate":"2024-03-10"},{"lineNumber":123,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":124,"author":{"gitId":"Joseph31416"},"content":"        return output;","lastModifiedDate":"2024-03-10"},{"lineNumber":125,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":126,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":127,"author":{"gitId":"Joseph31416"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":128,"author":{"gitId":"Joseph31416"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-10"},{"lineNumber":129,"author":{"gitId":"Joseph31416"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-10"},{"lineNumber":130,"author":{"gitId":"Joseph31416"},"content":"            return true;","lastModifiedDate":"2024-03-10"},{"lineNumber":131,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":132,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":133,"author":{"gitId":"Joseph31416"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-10"},{"lineNumber":134,"author":{"gitId":"Joseph31416"},"content":"        if (!(other instanceof LoanRecords)) {","lastModifiedDate":"2024-03-10"},{"lineNumber":135,"author":{"gitId":"Joseph31416"},"content":"            return false;","lastModifiedDate":"2024-03-10"},{"lineNumber":136,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":137,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":138,"author":{"gitId":"Joseph31416"},"content":"        LoanRecords otherLoanRecords \u003d (LoanRecords) other;","lastModifiedDate":"2024-03-10"},{"lineNumber":139,"author":{"gitId":"Joseph31416"},"content":"        return this.nextLoanId \u003d\u003d otherLoanRecords.nextLoanId;","lastModifiedDate":"2024-03-10"},{"lineNumber":140,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":141,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":142,"author":{"gitId":"Joseph31416"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":143,"author":{"gitId":"Joseph31416"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-10"},{"lineNumber":144,"author":{"gitId":"Joseph31416"},"content":"        return Objects.hash(loans, nextLoanId);","lastModifiedDate":"2024-03-10"},{"lineNumber":145,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":146,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":147,"author":{"gitId":"Joseph31416"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"Joseph31416":147}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"Joseph31416"},"content":"    private final LoanRecords loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Joseph31416"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"                  Set\u003cTag\u003e tags, LoanRecords loanRecords) {","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"        requireAllNonNull(name, phone, email, address, tags, loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"Joseph31416"},"content":"        this.loanRecords \u003d loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"Joseph31416"},"content":"    public LoanRecords getLoanRecords() {","lastModifiedDate":"2024-03-10"},{"lineNumber":68,"author":{"gitId":"Joseph31416"},"content":"        return loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":69,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":70,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"Joseph31416"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-10"},{"lineNumber":105,"author":{"gitId":"Joseph31416"},"content":"                \u0026\u0026 loanRecords.equals(otherPerson.loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"Joseph31416"},"content":"        return Objects.hash(name, phone, email, address, tags, loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Joseph31416":12,"-":113}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.LoanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"Joseph31416"},"content":"        LoanRecords tempLoanRecords \u003d new LoanRecords();","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Joseph31416"},"content":"        try {","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"            tempLoanRecords.addLoan(100, DateUtil.parse(\"2020-01-01\"), DateUtil.parse(\"2020-01-02\"));","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Joseph31416"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Joseph31416"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"                tempLoanRecords),","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"Joseph31416"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Joseph31416"},"content":"                new LoanRecords()),","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"Joseph31416"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"Joseph31416"},"content":"                new LoanRecords()),","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"Joseph31416"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"Joseph31416"},"content":"                new LoanRecords()),","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"Joseph31416"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"Joseph31416"},"content":"                new LoanRecords()),","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"Joseph31416"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"Joseph31416"},"content":"                new LoanRecords())","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Joseph31416":21,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLoan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joseph31416"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"Joseph31416"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Joseph31416"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Joseph31416"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Joseph31416"},"content":" * Jackson-friendly version of {@link Loan}.","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Joseph31416"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Joseph31416"},"content":"public class JsonAdaptedLoan {","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Joseph31416"},"content":"    private final float amount;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Joseph31416"},"content":"    private final String startDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Joseph31416"},"content":"    private final String endDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Joseph31416"},"content":"    private final int id;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Joseph31416"},"content":"     * Constructs a {@code JsonAdaptedLoan} with the given loan details.","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Joseph31416"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Joseph31416"},"content":"    public JsonAdaptedLoan(@JsonProperty(\"amount\") float amount, @JsonProperty(\"startDate\") String startDate,","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Joseph31416"},"content":"                           @JsonProperty(\"endDate\") String endDate, @JsonProperty(\"id\") int id) {","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Joseph31416"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Joseph31416"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Joseph31416"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"     * Converts a given {@code Loan} into this class for Jackson use.","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Joseph31416"},"content":"    public JsonAdaptedLoan(Loan source) {","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Joseph31416"},"content":"        amount \u003d source.getAmount();","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Joseph31416"},"content":"        startDate \u003d DateUtil.format(source.getStartDate());","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Joseph31416"},"content":"        endDate \u003d DateUtil.format(source.getEndDate());","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Joseph31416"},"content":"        id \u003d source.getId();","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"Joseph31416"},"content":"     * Converts this Jackson-friendly adapted loan object into the model\u0027s {@code Loan} object.","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"Joseph31416"},"content":"     *","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"Joseph31416"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted loan.","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"Joseph31416"},"content":"    public Loan toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"Joseph31416"},"content":"        if (!Loan.isValidAmount(amount)) {","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"Joseph31416"},"content":"            throw new IllegalValueException(Loan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"Joseph31416"},"content":"        if (!Loan.isValidDates(DateUtil.parse(startDate), DateUtil.parse(endDate))) {","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"Joseph31416"},"content":"            throw new IllegalValueException(Loan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"Joseph31416"},"content":"        return new Loan(id, amount, DateUtil.parse(startDate), DateUtil.parse(endDate));","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"Joseph31416"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"Joseph31416":57}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLoanRecords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joseph31416"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"Joseph31416"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Joseph31416"},"content":"import java.util.List;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Joseph31416"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Joseph31416"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Joseph31416"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.LoanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Joseph31416"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Joseph31416"},"content":" * Jackson-friendly version of {@link LoanRecords}.","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Joseph31416"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Joseph31416"},"content":"public class JsonAdaptedLoanRecords {","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Joseph31416"},"content":"    public static final String MISSING_MESSAGE \u003d \"LoanRecords\u0027 loans field is missing!\";","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Joseph31416"},"content":"    private final List\u003cJsonAdaptedLoan\u003e loans;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Joseph31416"},"content":"    private final int nextLoanId;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Joseph31416"},"content":"     * Constructs a {@code JsonAdaptedLoanRecords} with the given loan details.","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Joseph31416"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Joseph31416"},"content":"    public JsonAdaptedLoanRecords(@JsonProperty(\"loans\") List\u003cJsonAdaptedLoan\u003e loans,","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Joseph31416"},"content":"                                    @JsonProperty(\"nextLoanId\") int nextLoanId) {","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Joseph31416"},"content":"        this.loans \u003d loans;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"Joseph31416"},"content":"        this.nextLoanId \u003d nextLoanId;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Joseph31416"},"content":"     * Converts a given {@code LoanRecords} into this class for Jackson use.","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Joseph31416"},"content":"    public JsonAdaptedLoanRecords(LoanRecords source) {","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Joseph31416"},"content":"        if (source !\u003d null) {","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Joseph31416"},"content":"            loans \u003d source.getLoanList().stream()","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"Joseph31416"},"content":"                .map(JsonAdaptedLoan::new)","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"Joseph31416"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"Joseph31416"},"content":"            nextLoanId \u003d source.getNextLoanId();","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"Joseph31416"},"content":"        } else {","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"Joseph31416"},"content":"            loans \u003d null;","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"Joseph31416"},"content":"            nextLoanId \u003d 0;","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"Joseph31416"},"content":"     * Converts this Jackson-friendly adapted loan object into the model\u0027s {@code LoanRecords} object.","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"Joseph31416"},"content":"     *","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"Joseph31416"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted loan.","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"Joseph31416"},"content":"    public LoanRecords toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"Joseph31416"},"content":"        if (loans \u003d\u003d null) {","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"Joseph31416"},"content":"            throw new IllegalValueException(MISSING_MESSAGE);","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"Joseph31416"},"content":"        ArrayList\u003cLoan\u003e loanList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"Joseph31416"},"content":"        for (JsonAdaptedLoan loan : loans) {","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"Joseph31416"},"content":"            loanList.add(loan.toModelType());","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":63,"author":{"gitId":"Joseph31416"},"content":"        LoanRecords loanRecords \u003d new LoanRecords(loanList, nextLoanId);","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"Joseph31416"},"content":"        return loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":67,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":68,"author":{"gitId":"Joseph31416"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"Joseph31416":68}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.LoanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"Joseph31416"},"content":"    private final JsonAdaptedLoanRecords loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Joseph31416"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"Joseph31416"},"content":"            @JsonProperty(\"loanRecords\") JsonAdaptedLoanRecords loanRecords) {","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Joseph31416"},"content":"        this.loanRecords \u003d loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Joseph31416"},"content":"        loanRecords \u003d new JsonAdaptedLoanRecords(source.getLoanRecords());","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"Joseph31416"},"content":"        if (loanRecords \u003d\u003d null) {","lastModifiedDate":"2024-03-10"},{"lineNumber":112,"author":{"gitId":"Joseph31416"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2024-03-10"},{"lineNumber":113,"author":{"gitId":"Joseph31416"},"content":"                                                MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-10"},{"lineNumber":114,"author":{"gitId":"Joseph31416"},"content":"                                                \"LoanRecords\"","lastModifiedDate":"2024-03-10"},{"lineNumber":115,"author":{"gitId":"Joseph31416"},"content":"                                            ));","lastModifiedDate":"2024-03-10"},{"lineNumber":116,"author":{"gitId":"Joseph31416"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":117,"author":{"gitId":"Joseph31416"},"content":"        final LoanRecords modelLoanRecords \u003d loanRecords.toModelType();","lastModifiedDate":"2024-03-10"},{"lineNumber":118,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Joseph31416"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelLoanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Joseph31416":16,"-":107}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Joseph31416"},"content":"    private static final JsonAdaptedLoanRecords INVALID_LOAN_RECORDS \u003d new JsonAdaptedLoanRecords(null);","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Joseph31416"},"content":"    private static final JsonAdaptedLoanRecords VALID_LOAN_RECORDS \u003d","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Joseph31416"},"content":"        new JsonAdaptedLoanRecords(BENSON.getLoanRecords());","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Joseph31416"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"Joseph31416"},"content":"                                        VALID_ADDRESS, VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Joseph31416"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"Joseph31416"},"content":"                                                        VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Joseph31416"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"Joseph31416"},"content":"                                        VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Joseph31416"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":73,"author":{"gitId":"Joseph31416"},"content":"                                                            VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Joseph31416"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":82,"author":{"gitId":"Joseph31416"},"content":"                                        VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Joseph31416"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":90,"author":{"gitId":"Joseph31416"},"content":"                                                            VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Joseph31416"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":99,"author":{"gitId":"Joseph31416"},"content":"                                        VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"Joseph31416"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-10"},{"lineNumber":107,"author":{"gitId":"Joseph31416"},"content":"                                                            VALID_TAGS, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"Joseph31416"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":118,"author":{"gitId":"Joseph31416"},"content":"                                        invalidTags, VALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":119,"author":{"gitId":"Joseph31416"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-10"},{"lineNumber":120,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":121,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":122,"author":{"gitId":"Joseph31416"},"content":"    @Test","lastModifiedDate":"2024-03-10"},{"lineNumber":123,"author":{"gitId":"Joseph31416"},"content":"    public void toModelType_invalidLoanRecords_throwsIllegalValueException() {","lastModifiedDate":"2024-03-10"},{"lineNumber":124,"author":{"gitId":"Joseph31416"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-10"},{"lineNumber":125,"author":{"gitId":"Joseph31416"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-10"},{"lineNumber":126,"author":{"gitId":"Joseph31416"},"content":"                                        VALID_TAGS, INVALID_LOAN_RECORDS);","lastModifiedDate":"2024-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Joseph31416":29,"-":101}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"Joseph31416"},"content":"import seedu.address.model.person.LoanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"Joseph31416"},"content":"    private LoanRecords loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"Joseph31416"},"content":"        loanRecords \u003d new LoanRecords();","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Joseph31416"},"content":"        loanRecords \u003d personToCopy.getLoanRecords();","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"Joseph31416"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":97,"author":{"gitId":"Joseph31416"},"content":"     * Sets the {@code LoanRecords} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-10"},{"lineNumber":98,"author":{"gitId":"Joseph31416"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":99,"author":{"gitId":"Joseph31416"},"content":"    public PersonBuilder withLoanRecords(LoanRecords loanRecords) {","lastModifiedDate":"2024-03-10"},{"lineNumber":100,"author":{"gitId":"Joseph31416"},"content":"        this.loanRecords \u003d loanRecords;","lastModifiedDate":"2024-03-10"},{"lineNumber":101,"author":{"gitId":"Joseph31416"},"content":"        return this;","lastModifiedDate":"2024-03-10"},{"lineNumber":102,"author":{"gitId":"Joseph31416"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":103,"author":{"gitId":"Joseph31416"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":105,"author":{"gitId":"Joseph31416"},"content":"        return new Person(name, phone, email, address, tags, loanRecords);","lastModifiedDate":"2024-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Joseph31416":13,"-":95}}]
